bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	150	None	replace
2	[BUG]  [BUGGY]  Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	150	None	replace
3	[BUG]  [BUGGY]  Context.checkState(id  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(id  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(id  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	150	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  &&  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  &&  c!=  'f')  {	  }    else    if(c    ==    'n'    ||    c!=    'f')    {    	compilable	  [FE]  AssertionFailedError  	76	2	replace
5	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  &&  c!=  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  &&  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  &&  c!=  'f')  {	  }    else    if(c    ==    'n'    ||    c!=    'f')    {    	compilable	  [FE]  AssertionFailedError  	76	2	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }    else    if(c    ==    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	174	2	replace
7	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }    else    if(c    ==    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	174	2	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    >=    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
9	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    >=    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    >=    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
11	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    >=    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'n'  ||  c  >=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    >=    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
13	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'n'  ||  c  >=  ':')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'n'  ||  c  >=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    >=    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    >=    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
15	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    >=    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    >=    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
17	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    >=    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    >=    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
19	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    >=    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  &&  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'e'  &&  c  ==  'E')  {	  }    else    if(c    ==    'e'    ||    c    ==    'E')    {    	compilable	  [FE]  AssertionFailedError  	231	2	replace
21	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  &&  c  ==  'E')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  &&  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'e'  &&  c  ==  'E')  {	  }    else    if(c    ==    'e'    ||    c    ==    'E')    {    	compilable	  [FE]  AssertionFailedError  	231	2	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'e'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'e'  ||  c  ==  'E')  {	  }    else    if(c    ==    'e'    ||    c    ==    'E')    {    	compilable	  [FE]  AssertionFailedError  	231	2	replace
23	[BUG]  [BUGGY]  }  else  if(c!=  'e'  ||  c  ==  'E')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'e'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'e'  ||  c  ==  'E')  {	  }    else    if(c    ==    'e'    ||    c    ==    'E')    {    	compilable	  [FE]  AssertionFailedError  	231	2	replace
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'E'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'E'  ||  c  ==  'E')  {	  }    else    if(c    ==    'e'    ||    c    ==    'E')    {    	compilable	  [FE]  AssertionFailedError  	231	2	replace
25	[BUG]  [BUGGY]  }  else  if(c  ==  'E'  ||  c  ==  'E')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'E'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'E'  ||  c  ==  'E')  {	  }    else    if(c    ==    'e'    ||    c    ==    'E')    {    	compilable	  [FE]  AssertionFailedError  	231	2	replace
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c!=  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'e'  ||  c!=  'E')  {	  }    else    if(c    ==    'e'    ||    c    ==    'E')    {    	compilable	  [FE]  AssertionFailedError  	231	2	replace
27	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c!=  'E')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c!=  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'e'  ||  c!=  'E')  {	  }    else    if(c    ==    'e'    ||    c    ==    'E')    {    	compilable	  [FE]  AssertionFailedError  	231	2	replace
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'e'    ||    c    ==    'E')    {    }  else  if(c  ==  'e'  ||  c  ==  'E')  {	  	compilable	  [FE]  AssertionFailedError  	230	2	add
29	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'e'    ||    c    ==    'E')    {    }  else  if(c  ==  'e'  ||  c  ==  'E')  {	  	compilable	  [FE]  AssertionFailedError  	230	2	add
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  }  else  if(c!=  'e'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'e'    ||    c    ==    'E')    {    }  else  if(c!=  'e'  ||  c  ==  'E')  {	  	compilable	  [FE]  AssertionFailedError  	230	2	add
31	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  }  else  if(c!=  'e'  ||  c  ==  'E')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  }  else  if(c!=  'e'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'e'    ||    c    ==    'E')    {    }  else  if(c!=  'e'  ||  c  ==  'E')  {	  	compilable	  [FE]  AssertionFailedError  	230	2	add
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  }  else  if(c  ==  'e'  ||  c!=  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'e'    ||    c    ==    'E')    {    }  else  if(c  ==  'e'  ||  c!=  'E')  {	  	compilable	  [FE]  AssertionFailedError  	230	2	add
33	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  }  else  if(c  ==  'e'  ||  c!=  'E')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  }  else  if(c  ==  'e'  ||  c!=  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'e'    ||    c    ==    'E')    {    }  else  if(c  ==  'e'  ||  c!=  'E')  {	  	compilable	  [FE]  AssertionFailedError  	230	2	add
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  }  else  if(c  >=  'e'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'e'    ||    c    ==    'E')    {    }  else  if(c  >=  'e'  ||  c  ==  'E')  {	  	compilable	  [FE]  AssertionFailedError  	230	2	add
35	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  }  else  if(c  >=  'e'  ||  c  ==  'E')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  }  else  if(c  >=  'e'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'e'    ||    c    ==    'E')    {    }  else  if(c  >=  'e'  ||  c  ==  'E')  {	  	compilable	  [FE]  AssertionFailedError  	230	2	add
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  }  else  if(c  ==  'e'  ||  c  >=  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'e'    ||    c    ==    'E')    {    }  else  if(c  ==  'e'  ||  c  >=  'E')  {	  	compilable	  [FE]  AssertionFailedError  	230	2	add
37	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  }  else  if(c  ==  'e'  ||  c  >=  'E')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  }  else  if(c  ==  'e'  ||  c  >=  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'e'    ||    c    ==    'E')    {    }  else  if(c  ==  'e'  ||  c  >=  'E')  {	  	compilable	  [FE]  AssertionFailedError  	230	2	add
38	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  }  else  if(c  {  'e'  ||  c  ==  'E')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  }  else  if(c  {  'e'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'e'    ||    c    ==    'E')    {    }  else  if(c  {  'e'  ||  c  ==  'E')  {	  	non-compiled	[CE]  ')'  expected	230	None	add
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }    else    if(c    >=    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	115	2	replace
40	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }    else    if(c    >=    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	115	2	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  >=  'n'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }    else    if(c    >=    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	115	2	replace
42	[BUG]  [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  >=  'n'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }    else    if(c    >=    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	115	2	replace
43	[BUG]  [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	126	None	replace
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    >=    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	95	2	add
45	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    >=    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	95	2	add
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    >=    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	95	2	add
47	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    >=    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	95	2	add
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    >=    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	95	2	add
49	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    >=    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	95	2	add
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    >=    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	95	2	add
51	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    >=    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	95	2	add
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    >=    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'i'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	95	2	add
53	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    >=    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'i'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	95	2	add
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    >=    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'f'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	95	2	add
55	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    >=    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'f'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	95	2	add
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	207	2	add
57	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	207	2	add
58	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	207	None	add
59	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  else  if(c  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  else  if(c  ==  '  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  else  if(c  ==  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	207	None	add
60	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  else  if(c  ==  'f')  {  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  else  if(c  ==  'f')  {  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  else  if(c  ==  'f')  {	  	non-compiled	[CE]  orphaned  case	207	None	add
61	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  else  if(c  ==  'l')  {  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  else  if(c  ==  'l')  {  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  else  if(c  ==  'l')  {	  	non-compiled	[CE]  orphaned  case	207	None	add
62	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	25	None	replace
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	25	2	replace
64	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	25	2	replace
65	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	130	None	add
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	130	2	add
67	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	130	2	add
68	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {	  	non-compiled	[CE]  orphaned  case	130	None	add
69	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
70	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  if(s.charAt  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  if(s.charAt  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  if(s.charAt	  	non-compiled	[CE]  ')'  expected	130	None	add
71	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  if(s.  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  if(s.  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  if(s.	  	non-compiled	[CE]  <identifier>  expected	130	None	add
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    >=    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
73	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    >=    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    >=    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
75	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    >=    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    >=    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
77	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    >=    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    >=    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
79	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    >=    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
80	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    >=    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
81	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    >=    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    >=    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
83	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    >=    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    'a')    {    }  else  if(c  ==  'N'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
85	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'a')    {    }  else  if(c  ==  'N'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
86	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  }  else  if(c!=  'N'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    'a')    {    }  else  if(c!=  'N'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
87	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  }  else  if(c!=  'N'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  }  else  if(c!=  'N'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'a')    {    }  else  if(c!=  'N'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
88	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  }  else  if(c  ==  'N'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    'a')    {    }  else  if(c  ==  'N'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
89	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  }  else  if(c  ==  'N'  ||  c!=  'a')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  }  else  if(c  ==  'N'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'a')    {    }  else  if(c  ==  'N'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
90	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  }  else  if(c  >=  'N'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    'a')    {    }  else  if(c  >=  'N'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
91	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  }  else  if(c  >=  'N'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  }  else  if(c  >=  'N'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'a')    {    }  else  if(c  >=  'N'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  }  else  if(c  ==  'N'  ||  c  >=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    'a')    {    }  else  if(c  ==  'N'  ||  c  >=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
93	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  }  else  if(c  ==  'N'  ||  c  >=  'a')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  }  else  if(c  ==  'N'  ||  c  >=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'a')    {    }  else  if(c  ==  'N'  ||  c  >=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	7	2	add
94	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  }  else  if(c  {  'N'  ||  c  ==  'a')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  }  else  if(c  {  'N'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'a')    {    }  else  if(c  {  'N'  ||  c  ==  'a')  {	  	non-compiled	[CE]  ')'  expected	7	None	add
95	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	78	2	replace
96	[BUG]  [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	78	2	replace
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '-')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	78	2	replace
98	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '-')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	78	2	replace
99	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '-')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	78	2	replace
100	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '-')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '-')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	78	2	replace
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  '-')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	78	2	replace
102	[BUG]  [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  '-')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	78	2	replace
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'e'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }    else    if(c    ==    'n'    ||    c    >=    'e')    {    	compilable	  [FE]  AssertionFailedError  	223	2	replace
104	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'e'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }    else    if(c    ==    'n'    ||    c    >=    'e')    {    	compilable	  [FE]  AssertionFailedError  	223	2	replace
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c!=  'e')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }    else    if(c    ==    'n'    ||    c    >=    'e')    {    	compilable	  [FE]  AssertionFailedError  	223	2	replace
106	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c!=  'e')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }    else    if(c    ==    'n'    ||    c    >=    'e')    {    	compilable	  [FE]  AssertionFailedError  	223	2	replace
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c!=    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	175	2	add
108	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c!=    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	175	2	add
109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c!=    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	175	2	add
110	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c!=    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	175	2	add
111	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c!=    'A')    {    }  else  if(c  ==  'N'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	175	2	add
112	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c!=    'A')    {    }  else  if(c  ==  'N'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	175	2	add
113	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c!=    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	175	2	add
114	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c!=    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	175	2	add
115	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'i'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c!=    'A')    {    }  else  if(c  ==  'i'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	175	2	add
116	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'i'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'i'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c!=    'A')    {    }  else  if(c  ==  'i'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	175	2	add
117	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c!=    'A')    {    }  else  if(c  ==  'i'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	175	2	add
118	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c!=    'A')    {    }  else  if(c  ==  'i'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	175	2	add
119	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	60	2	add
120	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	60	2	add
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	60	2	add
122	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	60	2	add
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	60	2	add
124	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	60	2	add
125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	60	2	add
126	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	60	2	add
127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'i'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	60	2	add
128	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'i'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	60	2	add
129	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	60	2	add
130	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	60	2	add
131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    >=    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	55	2	add
132	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    >=    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	55	2	add
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    >=    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	55	2	add
134	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    >=    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	55	2	add
135	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'n'  ||  c  >=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    >=    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	55	2	add
136	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'n'  ||  c  >=  '*')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'n'  ||  c  >=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    >=    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	55	2	add
137	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'i'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    >=    '*')    {    }  else  if(c  ==  'i'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	55	2	add
138	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'i'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'i'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    >=    '*')    {    }  else  if(c  ==  'i'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	55	2	add
139	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    >=    '*')    {    }  else  if(c  ==  'f'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	55	2	add
140	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    >=    '*')    {    }  else  if(c  ==  'f'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	55	2	add
141	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'r'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    >=    '*')    {    }  else  if(c  ==  'r'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	55	2	add
142	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'r'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'r'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    >=    '*')    {    }  else  if(c  ==  'r'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	55	2	add
143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c!=    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
144	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c!=    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
145	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c!=    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
146	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c!=    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
147	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'i'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c!=    '*')    {    }  else  if(c  ==  'i'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
148	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'i'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'i'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c!=    '*')    {    }  else  if(c  ==  'i'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
149	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'n'  ||  c  >=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c!=    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
150	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'n'  ||  c  >=  '*')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'n'  ||  c  >=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c!=    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
151	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'r'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c!=    '*')    {    }  else  if(c  ==  'r'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
152	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'r'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'r'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c!=    '*')    {    }  else  if(c  ==  'r'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
153	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c!=    '*')    {    }  else  if(c  ==  'f'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
154	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c!=    '*')    {    }  else  if(c  ==  'f'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
155	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }    else    if(c    ==    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	109	2	replace
156	[BUG]  [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }    else    if(c    ==    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	109	2	replace
157	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  if(s.charAt(2)  ==  'i')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  if(s.charAt(2)  ==  'i')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'r')  {  if(s.charAt(2)  ==  'i')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	235	None	replace
158	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	235	None	replace
159	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  c  ==  'a')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  c  ==  'a')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  c  ==  'a')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	235	None	replace
160	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	294	2	add
161	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	294	2	add
162	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	294	2	add
163	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	294	2	add
164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	294	2	add
165	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	294	2	add
166	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(  'r'  &&  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(  'r'  &&  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(  'r'  &&  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  }	  	non-compiled	[CE]  ')'  expected	294	None	add
167	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    	non-compiled	[CE]  orphaned  case	246	None	replace
168	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    	non-compiled	[CE]  orphaned  case	246	None	replace
169	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    	non-compiled	[CE]  orphaned  case	246	None	replace
170	[BUG]  [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'd')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'd')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'd')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	147	None	replace
171	[BUG]  [BUGGY]  Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'd')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'd')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'd')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	147	None	replace
172	[BUG]  [BUGGY]  Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'd')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'd')  {  id=true;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	147	None	replace
173	[BUG]  [BUGGY]  Context.checkState(id  ==  'n'  ||  c  ==  'r'  ||  c  ==  'd')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(id  ==  'n'  ||  c  ==  'r'  ||  c  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(id  ==  'n'  ||  c  ==  'r'  ||  c  ==  'd')  {  id=true;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	147	None	replace
174	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
175	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
176	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
177	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
178	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
179	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
180	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
181	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
183	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
185	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
186	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c  ==  'n')  {	  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }    else    if(c    {    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	68	2	replace
187	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c  ==  'n')  {	  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }    else    if(c    {    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	68	2	replace
188	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	186	2	replace
189	[BUG]  [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	186	2	replace
190	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '+')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	186	2	replace
191	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '+')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	186	2	replace
192	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '+')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	186	2	replace
193	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '+')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '+')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	186	2	replace
194	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  '+')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	186	2	replace
195	[BUG]  [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  '+')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	186	2	replace
196	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	197	2	add
197	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	197	2	add
198	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	197	2	add
199	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	197	2	add
200	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	197	2	add
201	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	197	2	add
202	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  >>  'n'  ||  c  ==  'e')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  >>  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c  >>  'n'  ||  c  ==  'e')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	197	None	add
203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  >=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  >=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	197	2	add
204	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  >=  'e')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  >=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  >=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	197	2	add
205	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	197	2	add
206	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	197	2	add
207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	191	2	add
208	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	191	2	add
209	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	191	2	add
210	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n'  ||  c  >=  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	191	2	add
211	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n'  ||  c  >>  '+')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n'  ||  c  >>  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'n'  ||  c  >>  '+')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	191	None	add
212	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c!=  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c!=  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	191	2	add
213	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c!=  'n'  ||  c!=  '+')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c!=  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c!=  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	191	2	add
214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  >=  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  >=  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	191	2	add
215	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  >=  'n'  ||  c!=  '+')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  >=  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  >=  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	191	2	add
216	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n'  ||  c  [Delete]  '+')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n'  ||  c  [Delete]  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'n'  ||  c  [Delete]  '+')  {	  	non-compiled	[CE]  ')'  expected	191	None	add
217	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	287	None	replace
218	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	287	None	replace
219	[BUG]  [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	287	None	replace
220	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	105	None	replace
221	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	185	2	add
222	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	185	2	add
223	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	185	2	add
224	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	185	2	add
225	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	185	2	add
226	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	185	2	add
227	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	185	2	add
228	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '+')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	185	2	add
229	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	185	2	add
230	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	185	2	add
231	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	185	2	add
232	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  >=  '+')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	185	2	add
233	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	9	2	add
234	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	9	2	add
235	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'N'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	9	2	add
236	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'N'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	9	2	add
237	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	9	2	add
238	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	9	2	add
239	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	9	2	add
240	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	9	2	add
241	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	9	2	add
242	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	9	2	add
243	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	9	2	add
244	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	9	2	add
245	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
246	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
247	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
248	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
249	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
250	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
251	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
252	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'A')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
253	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
254	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	163	2	add
255	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  {  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  {  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  {  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {	  	non-compiled	[CE]  ')'  expected	163	None	add
256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '-'  ||  c  ==  'n'  ||  c  ==  '-')  {	  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }    else    if(c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	27	2	replace
257	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '-'  ||  c  ==  'n'  ||  c  ==  '-')  {	  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }    else    if(c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	27	2	replace
258	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	129	None	replace
259	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	58	2	add
260	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	58	2	add
261	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'N'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	58	2	add
262	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'N'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	58	2	add
263	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'i'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	58	2	add
264	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'i'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	58	2	add
265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	58	2	add
266	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	58	2	add
267	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	58	2	add
268	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	58	2	add
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	58	2	add
270	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  >=  '+')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	58	2	add
271	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	247	None	replace
272	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  c  ==  'a')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  c  ==  'a')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  c  ==  'a')  {  id=true;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	247	None	replace
273	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(0)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	247	None	replace
274	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	91	2	add
275	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	91	2	add
276	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	91	2	add
277	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	91	2	add
278	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	91	2	add
279	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	91	2	add
280	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'i'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	91	2	add
281	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'i'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	91	2	add
282	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'f'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	91	2	add
283	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'f'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	91	2	add
284	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c  >=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	91	2	add
285	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c  >=  'a')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c  >=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	91	2	add
286	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    >=    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	181	2	add
287	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    >=    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	181	2	add
288	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    >=    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	181	2	add
289	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    >=    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	181	2	add
290	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    >=    'A')    {    }  else  if(c  ==  'N'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	181	2	add
291	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    >=    'A')    {    }  else  if(c  ==  'N'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	181	2	add
292	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    >=    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	181	2	add
293	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    >=    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	181	2	add
294	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'i'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    >=    'A')    {    }  else  if(c  ==  'i'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	181	2	add
295	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'i'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'i'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    >=    'A')    {    }  else  if(c  ==  'i'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	181	2	add
296	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'r'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    >=    'A')    {    }  else  if(c  ==  'r'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	181	2	add
297	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'r'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'r'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    >=    'A')    {    }  else  if(c  ==  'r'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	181	2	add
298	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	203	None	replace
299	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  2)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  2)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  2)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	203	None	replace
300	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  ==  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c    >=    '.')    {    }  else  if(c  ==  '.')  {	  	compilable	  [FE]  AssertionFailedError  	158	2	add
301	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  ==  '.')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  ==  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c    >=    '.')    {    }  else  if(c  ==  '.')  {	  	compilable	  [FE]  AssertionFailedError  	158	2	add
302	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  >=  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c    >=    '.')    {    }  else  if(c  >=  '.')  {	  	compilable	  [FE]  AssertionFailedError  	158	2	add
303	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  >=  '.')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  >=  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c    >=    '.')    {    }  else  if(c  >=  '.')  {	  	compilable	  [FE]  AssertionFailedError  	158	2	add
304	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c!=  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c    >=    '.')    {    }  else  if(c!=  '.')  {	  	compilable	  [FE]  AssertionFailedError  	158	2	add
305	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c!=  '.')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c!=  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c    >=    '.')    {    }  else  if(c!=  '.')  {	  	compilable	  [FE]  AssertionFailedError  	158	2	add
306	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c    >=    '.')    {    }  else  if(c  ==  '.'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	158	2	add
307	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c    >=    '.')    {    }  else  if(c  ==  '.'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	158	2	add
308	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  >>  '.')  {  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  >>  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c    >=    '.')    {    }  else  if(c  >>  '.')  {	  	non-compiled	[CE]  incompatible  types	158	None	add
309	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c    >=    '.')    {    }  else  if(c  ==  '.'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	158	2	add
310	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c    >=    '.')    {    }  else  if(c  ==  '.'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	158	2	add
311	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	189	2	add
312	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	189	2	add
313	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	189	2	add
314	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	189	2	add
315	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	189	2	add
316	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	189	2	add
317	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  >>  'n'  ||  c  ==  '+')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  >>  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c  >>  'n'  ||  c  ==  '+')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	189	None	add
318	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	189	2	add
319	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  >=  '+')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	189	2	add
320	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	189	2	add
321	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	189	2	add
322	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  >=  'n'  ||  c  ==  ':')  {	  }    else    if(c!=    'n'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	122	2	replace
323	[BUG]  [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  >=  'n'  ||  c  ==  ':')  {	  }    else    if(c!=    'n'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	122	2	replace
324	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
325	[BUG]  [BUGGY]  }  else  if(c!=  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
326	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
327	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
328	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c!=  '*')  {	  }    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
329	[BUG]  [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c!=  '*')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c!=  '*')  {	  }    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
330	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '#'  ||  c!=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '#'  ||  c!=  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
331	[BUG]  [BUGGY]  }  else  if(c  ==  '#'  ||  c!=  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '#'  ||  c!=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '#'  ||  c!=  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
332	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
333	[BUG]  [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
334	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
335	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
336	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'a')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
337	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'a')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'a')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
338	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	211	2	add
339	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	211	2	add
340	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	211	None	add
341	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  else  if(c  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  else  if(c  ==  '  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  else  if(c  ==  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	211	None	add
342	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  else  if(c  ==  'n')  {  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  else  if(c  ==  'n')  {  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  else  if(c  ==  'n')  {	  	non-compiled	[CE]  orphaned  case	211	None	add
343	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break	  	non-compiled	[CE]  ';'  expected	211	None	add
344	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
345	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
346	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'i'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'i'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
347	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'i'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'i'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'i'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
348	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'd'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'd'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
349	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'd'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'd'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'd'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
350	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
351	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
352	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'r'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'r'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
353	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'r'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'r'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'r'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
354	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'f'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
355	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'f'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
356	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	134	None	replace
357	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	134	None	replace
358	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	121	2	add
359	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	121	2	add
360	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	121	2	add
361	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	121	2	add
362	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	121	2	add
363	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	121	2	add
364	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  >>  'n'  ||  c  ==  ':')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  >>  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c  >>  'n'  ||  c  ==  ':')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	121	None	add
365	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  >=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  >=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	121	2	add
366	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  >=  ':')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  >=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  >=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	121	2	add
367	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	121	2	add
368	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	121	2	add
369	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'a'    ||    c    ==    'n')    {    }  else  if(c  ==  'a'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
370	[BUG]  [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'a'    ||    c    ==    'n')    {    }  else  if(c  ==  'a'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
371	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  }  else  if(c!=  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'a'    ||    c    ==    'n')    {    }  else  if(c!=  'a'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
372	[BUG]  [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  }  else  if(c!=  'a'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  }  else  if(c!=  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'a'    ||    c    ==    'n')    {    }  else  if(c!=  'a'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
373	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  }  else  if(c  ==  'a'  ||  c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'a'    ||    c    ==    'n')    {    }  else  if(c  ==  'a'  ||  c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
374	[BUG]  [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  }  else  if(c  ==  'a'  ||  c!=  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  }  else  if(c  ==  'a'  ||  c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'a'    ||    c    ==    'n')    {    }  else  if(c  ==  'a'  ||  c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
375	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  }  else  if(c  >=  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'a'    ||    c    ==    'n')    {    }  else  if(c  >=  'a'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
376	[BUG]  [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  }  else  if(c  >=  'a'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  }  else  if(c  >=  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'a'    ||    c    ==    'n')    {    }  else  if(c  >=  'a'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
377	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  }  else  if(c  ==  'a'  ||  c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'a'    ||    c    ==    'n')    {    }  else  if(c  ==  'a'  ||  c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
378	[BUG]  [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  }  else  if(c  ==  'a'  ||  c  >=  'n')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  }  else  if(c  ==  'a'  ||  c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'a'    ||    c    ==    'n')    {    }  else  if(c  ==  'a'  ||  c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
379	[BUG]  [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  }  else  if(c  {  'a'  ||  c  ==  'n')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  }  else  if(c  {  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'a'    ||    c    ==    'n')    {    }  else  if(c  {  'a'  ||  c  ==  'n')  {	  	non-compiled	[CE]  ')'  expected	250	None	add
380	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '-'    ||    c    ==    '+')    {    }  else  if(c  ==  '-'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	300	2	add
381	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-'    ||    c    ==    '+')    {    }  else  if(c  ==  '-'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	300	2	add
382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  }  else  if(c!=  '-'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '-'    ||    c    ==    '+')    {    }  else  if(c!=  '-'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	300	2	add
383	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  }  else  if(c!=  '-'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  }  else  if(c!=  '-'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-'    ||    c    ==    '+')    {    }  else  if(c!=  '-'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	300	2	add
384	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  }  else  if(c  ==  '-'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '-'    ||    c    ==    '+')    {    }  else  if(c  ==  '-'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	300	2	add
385	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  }  else  if(c  ==  '-'  ||  c!=  '+')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  }  else  if(c  ==  '-'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-'    ||    c    ==    '+')    {    }  else  if(c  ==  '-'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	300	2	add
386	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  }  else  if(c  >=  '-'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '-'    ||    c    ==    '+')    {    }  else  if(c  >=  '-'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	300	2	add
387	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  }  else  if(c  >=  '-'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  }  else  if(c  >=  '-'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-'    ||    c    ==    '+')    {    }  else  if(c  >=  '-'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	300	2	add
388	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  }  else  if(c  ==  '-'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '-'    ||    c    ==    '+')    {    }  else  if(c  ==  '-'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	300	2	add
389	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  }  else  if(c  ==  '-'  ||  c  >=  '+')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  }  else  if(c  ==  '-'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-'    ||    c    ==    '+')    {    }  else  if(c  ==  '-'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	300	2	add
390	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  }  else  if(c  {  '-'  ||  c  ==  '+')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  }  else  if(c  {  '-'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-'    ||    c    ==    '+')    {    }  else  if(c  {  '-'  ||  c  ==  '+')  {	  	non-compiled	[CE]  ')'  expected	300	None	add
391	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	102	2	add
392	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	102	2	add
393	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	102	None	add
394	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {	  	non-compiled	[CE]  orphaned  case	102	None	add
395	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  '  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	102	None	add
396	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  &&  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '-'  &&  c  ==  '+')  {	  }    else    if(c    ==    '-'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	301	2	replace
397	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  &&  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  &&  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '-'  &&  c  ==  '+')  {	  }    else    if(c    ==    '-'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	301	2	replace
398	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '+'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '+'  ||  c  ==  '-')  {	  }    else    if(c    ==    '-'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	301	2	replace
399	[BUG]  [BUGGY]  }  else  if(c  ==  '+'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '+'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '+'  ||  c  ==  '-')  {	  }    else    if(c    ==    '-'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	301	2	replace
400	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  '-'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  '-'  ||  c  ==  '+')  {	  }    else    if(c    ==    '-'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	301	2	replace
401	[BUG]  [BUGGY]  }  else  if(c!=  '-'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  '-'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  '-'  ||  c  ==  '+')  {	  }    else    if(c    ==    '-'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	301	2	replace
402	[BUG]  [BUGGY]  Context.checkState(c!=  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c!=  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c!=  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }	  Context.checkState(c    ==    'f'    ||    c    ==    'r'    ||    c    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
403	[BUG]  [BUGGY]  Context.checkState(id  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(id  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(id  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }	  Context.checkState(c    ==    'f'    ||    c    ==    'r'    ||    c    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
404	[BUG]  [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=null;  break  complete;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=null;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=null;  break  complete;  }	  Context.checkState(c    ==    'f'    ||    c    ==    'r'    ||    c    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
405	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c!=  '-')  {	  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }    else    if(c    ==    'n'    ||    c    >=    '-')    {    	compilable	  [FE]  AssertionFailedError  	35	2	replace
406	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c!=  '-')  {	  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }    else    if(c    ==    'n'    ||    c    >=    '-')    {    	compilable	  [FE]  AssertionFailedError  	35	2	replace
407	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    >=    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	220	2	add
408	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    >=    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	220	2	add
409	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    >=    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	220	2	add
410	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    >=    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	220	2	add
411	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    >=    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	220	2	add
412	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    >=    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	220	2	add
413	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    >=    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'e'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	220	2	add
414	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    >=    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'e'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	220	2	add
415	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'i'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    >=    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'i'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	220	2	add
416	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'i'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'i'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    >=    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'i'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	220	2	add
417	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    >=    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	220	2	add
418	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    >=    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	220	2	add
419	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	30	2	add
420	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	30	2	add
421	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	30	2	add
422	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	30	2	add
423	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	30	2	add
424	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	30	2	add
425	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'N'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	30	2	add
426	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'N'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	30	2	add
427	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'i'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	30	2	add
428	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'i'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	30	2	add
429	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	30	2	add
430	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	30	2	add
431	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	283	None	replace
432	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	194	2	replace
433	[BUG]  [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	194	2	replace
434	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	194	2	replace
435	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	194	2	replace
436	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	194	2	replace
437	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'e')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	194	2	replace
438	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	194	2	replace
439	[BUG]  [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	194	2	replace
440	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '-'  ||  c  ==  ':')  {	  }    else    if(c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	240	2	replace
441	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '-'  ||  c  ==  ':')  {	  }    else    if(c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	240	2	replace
442	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  =='<  ')  {  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  =='<  ')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '-'  ||  c  =='<  ')  {	  }    else    if(c    ==    '-')    {    	non-compiled	[CE]  unclosed  character  literal	240	None	replace
443	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
444	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
445	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'i'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
446	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'i'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
447	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'f'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
448	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'f'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
449	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
450	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
451	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'r'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'r'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
452	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'r'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'r'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'r'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
453	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
454	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
455	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'F')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c  ==  'F')  {	  }    else    if(c    ==    'N'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	74	2	replace
456	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'F')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'F')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c  ==  'F')  {	  }    else    if(c    ==    'N'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	74	2	replace
457	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'N'  ||  c  ==  'f')  {	  }    else    if(c    ==    'N'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	74	2	replace
458	[BUG]  [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'N'  ||  c  ==  'f')  {	  }    else    if(c    ==    'N'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	74	2	replace
459	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  &&  c  ==  'f')  {	  }    else    if(c    ==    'N'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	74	2	replace
460	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  &&  c  ==  'f')  {	  }    else    if(c    ==    'N'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	74	2	replace
461	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c!=  'f')  {	  }    else    if(c    ==    'N'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	74	2	replace
462	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c!=  'f')  {	  }    else    if(c    ==    'N'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	74	2	replace
463	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(1)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	274	None	replace
464	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  c  ==  'a')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  c  ==  'a')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  c  ==  'a')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	274	None	replace
465	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(0)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	274	None	replace
466	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  &&  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  &&  c!=  ':')  {	  }    else    if(c    ==    'n'    ||    c!=    ':')    {    	compilable	  [FE]  AssertionFailedError  	124	2	replace
467	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  &&  c!=  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  &&  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  &&  c!=  ':')  {	  }    else    if(c    ==    'n'    ||    c!=    ':')    {    	compilable	  [FE]  AssertionFailedError  	124	2	replace
468	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	291	2	replace
469	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	291	2	replace
470	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	291	2	replace
471	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	291	2	replace
472	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'd')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'd')  {  id=true;  break  complete;  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	291	None	replace
473	[BUG]  [BUGGY]  Context.checkState(id  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(id  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(id  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
474	[BUG]  [BUGGY]  Context.checkState(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  >=  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
475	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  &&  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  &&  c  ==  '-')  {	  }    else    if(c    ==    '.'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	40	2	replace
476	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  &&  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  &&  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  &&  c  ==  '-')  {	  }    else    if(c    ==    '.'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	40	2	replace
477	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  '.'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  '.'  ||  c  ==  '-')  {	  }    else    if(c    ==    '.'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	40	2	replace
478	[BUG]  [BUGGY]  }  else  if(c!=  '.'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  '.'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  '.'  ||  c  ==  '-')  {	  }    else    if(c    ==    '.'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	40	2	replace
479	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  ||  c!=  '-')  {	  }    else    if(c    ==    '.'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	40	2	replace
480	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c!=  '-')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  ||  c!=  '-')  {	  }    else    if(c    ==    '.'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	40	2	replace
481	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '-'  ||  c  ==  '.')  {	  }    else    if(c    ==    '.'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	40	2	replace
482	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '.')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '-'  ||  c  ==  '.')  {	  }    else    if(c    ==    '.'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	40	2	replace
483	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	123	2	add
484	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	123	2	add
485	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n'  ||  c  >=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	123	2	add
486	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n'  ||  c  >=  ':')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n'  ||  c  >=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	123	2	add
487	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n'  ||  c  >>  ':')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n'  ||  c  >>  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'n'  ||  c  >>  ':')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	123	None	add
488	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c!=  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c!=  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	123	2	add
489	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c!=  'n'  ||  c!=  ':')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c!=  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c!=  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	123	2	add
490	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  >=  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  >=  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	123	2	add
491	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  >=  'n'  ||  c!=  ':')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  >=  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  >=  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	123	2	add
492	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n'  ||  c  [Delete]  ':')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n'  ||  c  [Delete]  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'n'  ||  c  [Delete]  ':')  {	  	non-compiled	[CE]  ')'  expected	123	None	add
493	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	62	2	add
494	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	62	2	add
495	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	62	2	add
496	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	62	2	add
497	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	62	2	add
498	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n'  ||  c  >=  '+')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	62	2	add
499	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'i'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	62	2	add
500	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'i'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	62	2	add
501	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'N'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	62	2	add
502	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'N'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	62	2	add
503	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	62	2	add
504	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	62	2	add
505	[BUG]  [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    	non-compiled	[CE]  orphaned  case	256	None	replace
506	[BUG]  [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    	non-compiled	[CE]  orphaned  case	256	None	replace
507	[BUG]  [BUGGY]  if(c  ==  ';')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  ';')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  ';')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    	non-compiled	[CE]  orphaned  case	256	None	replace
508	[BUG]  [BUGGY]  ||  c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  ||  c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	||  c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
509	[BUG]  [BUGGY]  ||  c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  ||  c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	||  c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
510	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	201	None	replace
511	[BUG]  [BUGGY]  deal(c)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	deal(c)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	266	None	replace
512	[BUG]  [BUGGY]  deal(c)  {  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	deal(c)  {  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	266	None	replace
513	[BUG]  [BUGGY]  deal(c)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	deal(c)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(!id)    {    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	266	None	replace
514	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	86	2	add
515	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	86	2	add
516	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	86	2	add
517	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	86	2	add
518	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	86	2	add
519	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	86	2	add
520	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	86	None	add
521	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }	  	non-compiled	[CE]  undefined  label:  finish	86	None	add
522	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	278	2	add
523	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	278	2	add
524	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	278	2	add
525	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	278	2	add
526	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	278	2	add
527	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	278	2	add
528	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break	  	non-compiled	[CE]  ';'  expected	278	None	add
529	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break	  	non-compiled	[CE]  ';'  expected	278	None	add
530	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    '*')    {    }  else  if(c  ==  'N'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	140	2	add
531	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '*')    {    }  else  if(c  ==  'N'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	140	2	add
532	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  }  else  if(c!=  'N'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    '*')    {    }  else  if(c!=  'N'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	140	2	add
533	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  }  else  if(c!=  'N'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  }  else  if(c!=  'N'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '*')    {    }  else  if(c!=  'N'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	140	2	add
534	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  }  else  if(c  ==  'N'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    '*')    {    }  else  if(c  ==  'N'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	140	2	add
535	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  }  else  if(c  ==  'N'  ||  c!=  '*')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  }  else  if(c  ==  'N'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '*')    {    }  else  if(c  ==  'N'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	140	2	add
536	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  }  else  if(c  >=  'N'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    '*')    {    }  else  if(c  >=  'N'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	140	2	add
537	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  }  else  if(c  >=  'N'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  }  else  if(c  >=  'N'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '*')    {    }  else  if(c  >=  'N'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	140	2	add
538	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  }  else  if(c  ==  'N'  ||  c  >=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    '*')    {    }  else  if(c  ==  'N'  ||  c  >=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	140	2	add
539	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  }  else  if(c  ==  'N'  ||  c  >=  '*')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  }  else  if(c  ==  'N'  ||  c  >=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '*')    {    }  else  if(c  ==  'N'  ||  c  >=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	140	2	add
540	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  }  else  if(c  {  'N'  ||  c  ==  '*')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  }  else  if(c  {  'N'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '*')    {    }  else  if(c  {  'N'  ||  c  ==  '*')  {	  	non-compiled	[CE]  ')'  expected	140	None	add
541	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  '.')  {	  }    else    if(c    ==    '.')    {    }    else    if(c!=    '.')    {    	compilable	  [FE]  AssertionFailedError  	157	2	replace
542	[BUG]  [BUGGY]  }  else  if(c!=  '.')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  '.')  {	  }    else    if(c    ==    '.')    {    }    else    if(c!=    '.')    {    	compilable	  [FE]  AssertionFailedError  	157	2	replace
543	[BUG]  [BUGGY]  if(c  ==  '+')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '+')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '+')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }	          if(c    ==    '+')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	243	None	replace
544	[BUG]  [BUGGY]  if(c  ==  '+')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '+')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '+')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	          if(c    ==    '+')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	243	None	replace
545	[BUG]  [BUGGY]  if(c  ==  '+')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '+')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '+')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }	          if(c    ==    '+')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	243	None	replace
546	[BUG]  [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	268	None	replace
547	[BUG]  [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	deal(c)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	268	None	replace
548	[BUG]  [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	268	None	replace
549	[BUG]  [BUGGY]  Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'h')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'h')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	268	None	replace
550	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	193	2	add
551	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	193	2	add
552	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	193	2	add
553	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	193	2	add
554	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	193	2	add
555	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	193	2	add
556	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	193	2	add
557	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'e')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	193	2	add
558	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	193	2	add
559	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	193	2	add
560	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  {  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  {  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  {  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {	  	non-compiled	[CE]  ')'  expected	193	None	add
561	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'e'    ||    c    ==    'n')    {    }  else  if(c  ==  'e'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	195	2	add
562	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'e'    ||    c    ==    'n')    {    }  else  if(c  ==  'e'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	195	2	add
563	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  }  else  if(c!=  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'e'    ||    c    ==    'n')    {    }  else  if(c!=  'e'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	195	2	add
564	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  }  else  if(c!=  'e'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  }  else  if(c!=  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'e'    ||    c    ==    'n')    {    }  else  if(c!=  'e'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	195	2	add
565	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  }  else  if(c  ==  'e'  ||  c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'e'    ||    c    ==    'n')    {    }  else  if(c  ==  'e'  ||  c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	195	2	add
566	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  }  else  if(c  ==  'e'  ||  c!=  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  }  else  if(c  ==  'e'  ||  c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'e'    ||    c    ==    'n')    {    }  else  if(c  ==  'e'  ||  c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	195	2	add
567	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  }  else  if(c  >=  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'e'    ||    c    ==    'n')    {    }  else  if(c  >=  'e'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	195	2	add
568	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  }  else  if(c  >=  'e'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  }  else  if(c  >=  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'e'    ||    c    ==    'n')    {    }  else  if(c  >=  'e'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	195	2	add
569	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  }  else  if(c  ==  'e'  ||  c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'e'    ||    c    ==    'n')    {    }  else  if(c  ==  'e'  ||  c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	195	2	add
570	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  }  else  if(c  ==  'e'  ||  c  >=  'n')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  }  else  if(c  ==  'e'  ||  c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'e'    ||    c    ==    'n')    {    }  else  if(c  ==  'e'  ||  c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	195	2	add
571	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  }  else  if(c  {  'e'  ||  c  ==  'n')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  }  else  if(c  {  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'e'    ||    c    ==    'n')    {    }  else  if(c  {  'e'  ||  c  ==  'n')  {	  	non-compiled	[CE]  ')'  expected	195	None	add
572	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	108	2	add
573	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	108	2	add
574	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	108	2	add
575	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	108	2	add
576	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'i'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'i'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	108	2	add
577	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'i'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'i'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'i'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	108	2	add
578	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	108	2	add
579	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	108	2	add
580	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	108	2	add
581	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	108	2	add
582	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'r'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	108	2	add
583	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'r'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	108	2	add
584	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	292	2	add
585	[BUG]  [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	292	2	add
586	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	292	2	add
587	[BUG]  [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	292	2	add
588	[BUG]  [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	292	None	add
589	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	292	2	add
590	[BUG]  [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	292	2	add
591	[BUG]  [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  finish;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  finish;  }  }	  	non-compiled	[CE]  undefined  label:  finish	292	None	add
592	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
593	[BUG]  [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
594	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
595	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
596	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '*')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
597	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '*')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '*')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
598	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
599	[BUG]  [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
600	[BUG]  [BUGGY]  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
601	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	149	None	replace
602	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  &&  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '-'  &&  c  ==  'n')  {	  }    else    if(c    ==    '-'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	84	2	replace
603	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  &&  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  &&  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '-'  &&  c  ==  'n')  {	  }    else    if(c    ==    '-'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	84	2	replace
604	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '+'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '+'  ||  c  ==  'n')  {	  }    else    if(c    ==    '-'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	84	2	replace
605	[BUG]  [BUGGY]  }  else  if(c  ==  '+'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '+'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '+'  ||  c  ==  'n')  {	  }    else    if(c    ==    '-'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	84	2	replace
606	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '-'  ||  c  ==  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    '-'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	84	2	replace
607	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '-'  ||  c  ==  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    '-'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	84	2	replace
608	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  ||  c  ==  'n')  {	  }    else    if(c    ==    '-'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	84	2	replace
609	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  ||  c  ==  'n')  {	  }    else    if(c    ==    '-'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	84	2	replace
610	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	288	2	add
611	[BUG]  [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	288	2	add
612	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'u'  ||  c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'u'  ||  c!=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	288	2	add
613	[BUG]  [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'u'  ||  c!=  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'u'  ||  c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'u'  ||  c!=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	288	2	add
614	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	288	2	add
615	[BUG]  [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	288	2	add
616	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	288	2	add
617	[BUG]  [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c!=  'e')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	288	2	add
618	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	288	2	add
619	[BUG]  [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	288	2	add
620	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  >=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  >=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	288	2	add
621	[BUG]  [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  >=  'e')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  >=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  >=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	288	2	add
622	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	104	2	add
623	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	104	2	add
624	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	104	None	add
625	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	104	2	add
626	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	104	2	add
627	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {	  	non-compiled	[CE]  orphaned  case	104	None	add
628	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	104	None	add
629	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  '  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	104	None	add
630	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }	          if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	226	2	replace
631	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }	          if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	226	2	replace
632	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	          if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	226	2	replace
633	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	          if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	226	2	replace
634	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }  }	          if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	226	2	replace
635	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }  }	          if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	226	2	replace
636	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  &&  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  &&  c  ==  ':')  {	  }    else    if(c    ==    '.'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	44	2	replace
637	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  &&  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  &&  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  &&  c  ==  ':')  {	  }    else    if(c    ==    '.'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	44	2	replace
638	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  '.'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  '.'  ||  c  ==  ':')  {	  }    else    if(c    ==    '.'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	44	2	replace
639	[BUG]  [BUGGY]  }  else  if(c!=  '.'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  '.'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  '.'  ||  c  ==  ':')  {	  }    else    if(c    ==    '.'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	44	2	replace
640	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  ||  c!=  ':')  {	  }    else    if(c    ==    '.'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	44	2	replace
641	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c!=  ':')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  ||  c!=  ':')  {	  }    else    if(c    ==    '.'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	44	2	replace
642	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
643	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
644	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
645	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
646	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
647	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
648	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
649	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
650	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'e'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
651	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'e'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
652	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
653	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
654	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a'  ||  c  ==  'z')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c  ==  'a'  ||  c  ==  'z')  {	  }    else    if(c    ==    'N'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
655	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a'  ||  c  ==  'z')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a'  ||  c  ==  'z')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c  ==  'a'  ||  c  ==  'z')  {	  }    else    if(c    ==    'N'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
656	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  &&  c  ==  'a')  {	  }    else    if(c    ==    'N'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
657	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  &&  c  ==  'a')  {	  }    else    if(c    ==    'N'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
658	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'N'  ||  c  ==  'a')  {	  }    else    if(c    ==    'N'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
659	[BUG]  [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'N'  ||  c  ==  'a')  {	  }    else    if(c    ==    'N'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
660	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	85	None	replace
661	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	85	None	replace
662	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    ',')    {    }  else  if(c  ==  '.'  ||  c  ==  ',')  {	  	compilable	  [FE]  AssertionFailedError  	285	2	add
663	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    ',')    {    }  else  if(c  ==  '.'  ||  c  ==  ',')  {	  	compilable	  [FE]  AssertionFailedError  	285	2	add
664	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  }  else  if(c!=  '.'  ||  c  ==  ',')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    ',')    {    }  else  if(c!=  '.'  ||  c  ==  ',')  {	  	compilable	  [FE]  AssertionFailedError  	285	2	add
665	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  }  else  if(c!=  '.'  ||  c  ==  ',')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  }  else  if(c!=  '.'  ||  c  ==  ',')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    ',')    {    }  else  if(c!=  '.'  ||  c  ==  ',')  {	  	compilable	  [FE]  AssertionFailedError  	285	2	add
666	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  }  else  if(c  ==  '.'  ||  c!=  ',')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    ',')    {    }  else  if(c  ==  '.'  ||  c!=  ',')  {	  	compilable	  [FE]  AssertionFailedError  	285	2	add
667	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  }  else  if(c  ==  '.'  ||  c!=  ',')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  }  else  if(c  ==  '.'  ||  c!=  ',')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    ',')    {    }  else  if(c  ==  '.'  ||  c!=  ',')  {	  	compilable	  [FE]  AssertionFailedError  	285	2	add
668	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  }  else  if(c  >=  '.'  ||  c  ==  ',')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    ',')    {    }  else  if(c  >=  '.'  ||  c  ==  ',')  {	  	compilable	  [FE]  AssertionFailedError  	285	2	add
669	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  }  else  if(c  >=  '.'  ||  c  ==  ',')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  }  else  if(c  >=  '.'  ||  c  ==  ',')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    ',')    {    }  else  if(c  >=  '.'  ||  c  ==  ',')  {	  	compilable	  [FE]  AssertionFailedError  	285	2	add
670	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  }  else  if(c  ==  '.'  ||  c  >=  ',')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    ',')    {    }  else  if(c  ==  '.'  ||  c  >=  ',')  {	  	compilable	  [FE]  AssertionFailedError  	285	2	add
671	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  }  else  if(c  ==  '.'  ||  c  >=  ',')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  }  else  if(c  ==  '.'  ||  c  >=  ',')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    ',')    {    }  else  if(c  ==  '.'  ||  c  >=  ',')  {	  	compilable	  [FE]  AssertionFailedError  	285	2	add
672	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  }  else  if(c  {  '.'  ||  c  ==  ',')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  }  else  if(c  {  '.'  ||  c  ==  ',')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    ',')    {    }  else  if(c  {  '.'  ||  c  ==  ',')  {	  	non-compiled	[CE]  ')'  expected	285	None	add
673	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	206	None	replace
674	[BUG]  [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'h')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	206	None	replace
675	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	206	2	replace
676	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'h')  {  id=false;  break  complete;  }  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	206	2	replace
677	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	112	2	add
678	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	112	2	add
679	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	112	2	add
680	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	112	2	add
681	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  >=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	112	2	add
682	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  >=  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  >=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	112	2	add
683	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	112	2	add
684	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	112	2	add
685	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	112	2	add
686	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	112	2	add
687	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'i'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'i'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	112	2	add
688	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'i'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'i'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'i'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	112	2	add
689	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	          if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	293	2	replace
690	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	          if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	293	2	replace
691	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'd')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'd')  {  id=true;  break  complete;  }	          if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	293	None	replace
692	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	          if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	293	2	replace
693	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	          if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	293	2	replace
694	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	11	2	add
695	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	11	2	add
696	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	11	2	add
697	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	11	2	add
698	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	11	2	add
699	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	11	2	add
700	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'N'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	11	2	add
701	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'N'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	11	2	add
702	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	11	2	add
703	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	11	2	add
704	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	11	2	add
705	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	11	2	add
706	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  >=  'n'  ||  c  ==  'e')  {	  }    else    if(c!=    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	198	2	replace
707	[BUG]  [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  >=  'n'  ||  c  ==  'e')  {	  }    else    if(c!=    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	198	2	replace
708	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	107	None	replace
709	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	107	None	replace
710	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	107	None	replace
711	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	107	None	replace
712	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  finish;  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  finish;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  finish;  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	107	None	replace
713	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(id    ==    false)    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	271	None	replace
714	[BUG]  [BUGGY]  parent  ==  false)  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  parent  ==  false)  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	parent  ==  false)  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(id    ==    false)    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  not  a  statement	271	None	replace
715	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(id    ==    false)    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	271	None	replace
716	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(id    ==    false)    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	271	None	replace
717	[BUG]  [BUGGY]  parent  ==  false)  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  parent  ==  false)  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	parent  ==  false)  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(id    ==    false)    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  not  a  statement	271	None	replace
718	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    >=    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	53	2	add
719	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    >=    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	53	2	add
720	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    >=    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	53	2	add
721	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    >=    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	53	2	add
722	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    >=    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	53	2	add
723	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    >=    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	53	2	add
724	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'i'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    >=    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'i'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	53	2	add
725	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'i'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'i'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    >=    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'i'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	53	2	add
726	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    >=    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	53	2	add
727	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    >=    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	53	2	add
728	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    >=    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'f'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	53	2	add
729	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    >=    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'f'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	53	2	add
730	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  &&  c  ==  ',')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  &&  c  ==  ',')  {	  }    else    if(c    ==    '.'    ||    c    ==    ',')    {    	compilable	  [FE]  AssertionFailedError  	286	2	replace
731	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  &&  c  ==  ',')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  &&  c  ==  ',')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  &&  c  ==  ',')  {	  }    else    if(c    ==    '.'    ||    c    ==    ',')    {    	compilable	  [FE]  AssertionFailedError  	286	2	replace
732	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  '.'  ||  c  ==  ',')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  '.'  ||  c  ==  ',')  {	  }    else    if(c    ==    '.'    ||    c    ==    ',')    {    	compilable	  [FE]  AssertionFailedError  	286	2	replace
733	[BUG]  [BUGGY]  }  else  if(c!=  '.'  ||  c  ==  ',')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  '.'  ||  c  ==  ',')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  '.'  ||  c  ==  ',')  {	  }    else    if(c    ==    '.'    ||    c    ==    ',')    {    	compilable	  [FE]  AssertionFailedError  	286	2	replace
734	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c!=  ',')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  ||  c!=  ',')  {	  }    else    if(c    ==    '.'    ||    c    ==    ',')    {    	compilable	  [FE]  AssertionFailedError  	286	2	replace
735	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c!=  ',')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c!=  ',')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  ||  c!=  ',')  {	  }    else    if(c    ==    '.'    ||    c    ==    ',')    {    	compilable	  [FE]  AssertionFailedError  	286	2	replace
736	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	298	2	add
737	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	298	2	add
738	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'a'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	298	2	add
739	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'a'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'a'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	298	2	add
740	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	298	2	add
741	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	298	2	add
742	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	298	2	add
743	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	298	2	add
744	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  }  else  if(c  >=  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	298	2	add
745	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  }  else  if(c  >=  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  }  else  if(c  >=  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	298	2	add
746	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  }  else  if(c  {  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  }  else  if(c  {  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    }  else  if(c  {  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {	  	non-compiled	[CE]  ')'  expected	298	None	add
747	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c!=    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
748	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c!=    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
749	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c!=    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
750	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c!=    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
751	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c!=    'e')    {    }  else  if(c  ==  'e'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
752	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c!=    'e')    {    }  else  if(c  ==  'e'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
753	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'i'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c!=    'e')    {    }  else  if(c  ==  'i'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
754	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'i'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'i'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c!=    'e')    {    }  else  if(c  ==  'i'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
755	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c!=    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
756	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c!=    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
757	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c!=    'e')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
758	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c!=    'e')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
759	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  >=  'n'  ||  c  ==  'A')  {	  }    else    if(c!=    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	166	2	replace
760	[BUG]  [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  >=  'n'  ||  c  ==  'A')  {	  }    else    if(c!=    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	166	2	replace
761	[BUG]  [BUGGY]  if(c  ==  ';')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  ';')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  ';')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete    	non-compiled	[CE]  orphaned  case	210	None	replace
762	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	164	2	replace
763	[BUG]  [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	164	2	replace
764	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'A')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	164	2	replace
765	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'A')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	164	2	replace
766	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'A')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	164	2	replace
767	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'A')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'A')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	164	2	replace
768	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	164	2	replace
769	[BUG]  [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	164	2	replace
770	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c!=  'A')  {	  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }    else    if(c    ==    'n'    ||    c!=    'A')    {    	compilable	  [FE]  AssertionFailedError  	176	2	replace
771	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c!=  'A')  {	  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }    else    if(c    ==    'n'    ||    c!=    'A')    {    	compilable	  [FE]  AssertionFailedError  	176	2	replace
772	[BUG]  [BUGGY]  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
773	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    '+')    {    }  else  if(c  ==  '.'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	41	2	add
774	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '+')    {    }  else  if(c  ==  '.'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	41	2	add
775	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  }  else  if(c!=  '.'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    '+')    {    }  else  if(c!=  '.'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	41	2	add
776	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  }  else  if(c!=  '.'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  }  else  if(c!=  '.'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '+')    {    }  else  if(c!=  '.'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	41	2	add
777	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  }  else  if(c  ==  '.'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    '+')    {    }  else  if(c  ==  '.'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	41	2	add
778	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  }  else  if(c  ==  '.'  ||  c!=  '+')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  }  else  if(c  ==  '.'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '+')    {    }  else  if(c  ==  '.'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	41	2	add
779	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  }  else  if(c  >=  '.'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    '+')    {    }  else  if(c  >=  '.'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	41	2	add
780	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  }  else  if(c  >=  '.'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  }  else  if(c  >=  '.'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '+')    {    }  else  if(c  >=  '.'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	41	2	add
781	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  }  else  if(c  ==  '.'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    '+')    {    }  else  if(c  ==  '.'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	41	2	add
782	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  }  else  if(c  ==  '.'  ||  c  >=  '+')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  }  else  if(c  ==  '.'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '+')    {    }  else  if(c  ==  '.'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	41	2	add
783	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  }  else  if(c  {  '.'  ||  c  ==  '+')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  }  else  if(c  {  '.'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '+')    {    }  else  if(c  {  '.'  ||  c  ==  '+')  {	  	non-compiled	[CE]  ')'  expected	41	None	add
784	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
785	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
786	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
787	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
788	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
789	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
790	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  >>  'n'  ||  c  ==  'a')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  >>  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c  >>  'n'  ||  c  ==  'a')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	3	None	add
791	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  >=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  >=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
792	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  >=  'a')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  >=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  >=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
793	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
794	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
795	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  }  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    	non-compiled	[CE]  orphaned  case	252	None	replace
796	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    	non-compiled	[CE]  orphaned  case	252	None	replace
797	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  	compilable	  [FE]  AssertionFailedError  	281	2	add
798	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  	compilable	  [FE]  AssertionFailedError  	281	2	add
799	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c!=  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    if(c  ==  'n'  ||  c!=  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  	compilable	  [FE]  AssertionFailedError  	281	2	add
800	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c!=  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c!=  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    if(c  ==  'n'  ||  c!=  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  	compilable	  [FE]  AssertionFailedError  	281	2	add
801	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	compilable	  [FE]  AssertionFailedError  	281	2	add
802	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	compilable	  [FE]  AssertionFailedError  	281	2	add
803	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }	  	compilable	  [FE]  AssertionFailedError  	281	2	add
804	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }	  	compilable	  [FE]  AssertionFailedError  	281	2	add
805	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)!=  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)!=  'o')  {  id=false;  break  complete;  }	  	compilable	  [FE]  AssertionFailedError  	281	2	add
806	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)!=  'o')  {  id=false;  break  complete;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)!=  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)!=  'o')  {  id=false;  break  complete;  }	  	compilable	  [FE]  AssertionFailedError  	281	2	add
807	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c  >=  ':')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }    else    if(c    ==    'n'    ||    c    >=    ':')    {    	compilable	  [FE]  AssertionFailedError  	18	2	replace
808	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c  >=  ':')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }    else    if(c    ==    'n'    ||    c    >=    ':')    {    	compilable	  [FE]  AssertionFailedError  	18	2	replace
809	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  ||  c  ==  'e')  {	  }    else    if(c    ==    '.')    {    }    else    if(c    >>    '.')    {    	compilable	  [FE]  AssertionFailedError  	161	2	replace
810	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  ||  c  ==  'e')  {	  }    else    if(c    ==    '.')    {    }    else    if(c    >>    '.')    {    	compilable	  [FE]  AssertionFailedError  	161	2	replace
811	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  >=  'n'  ||  c  ==  '*')  {	  }    else    if(c!=    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	145	2	replace
812	[BUG]  [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  >=  'n'  ||  c  ==  '*')  {	  }    else    if(c!=    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	145	2	replace
813	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c!=  '*')  {	  }    else    if(c!=    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	145	2	replace
814	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c!=  '*')  {	  }    else    if(c!=    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	145	2	replace
815	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	22	None	replace
816	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '-')    {    }  else  if(c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	239	2	add
817	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-')    {    }  else  if(c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	239	2	add
818	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '-')    {    }  else  if(c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	239	2	add
819	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c!=  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-')    {    }  else  if(c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	239	2	add
820	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  >=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '-')    {    }  else  if(c  >=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	239	2	add
821	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  >=  '-')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  >=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-')    {    }  else  if(c  >=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	239	2	add
822	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  {  '-')  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  {  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-')    {    }  else  if(c  {  '-')  {	  	non-compiled	[CE]  ')'  expected	239	None	add
823	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  >>  '-')  {  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  >>  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-')    {    }  else  if(c  >>  '-')  {	  	non-compiled	[CE]  incompatible  types	239	None	add
824	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '-')    {    }  else  if(c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	239	2	add
825	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  ==  '+')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  }  else  if(c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-')    {    }  else  if(c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	239	2	add
826	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c  ==  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	69	2	add
827	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c  ==  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	69	2	add
828	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c!=  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c!=  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	69	2	add
829	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c!=  'f'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c!=  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c!=  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	69	2	add
830	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  ==  'f'  ||  c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c  ==  'f'  ||  c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	69	2	add
831	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  ==  'f'  ||  c!=  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  ==  'f'  ||  c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c  ==  'f'  ||  c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	69	2	add
832	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  >=  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c  >=  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	69	2	add
833	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  >=  'f'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  >=  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c  >=  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	69	2	add
834	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  ==  'f'  ||  c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c  ==  'f'  ||  c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	69	2	add
835	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  ==  'f'  ||  c  >=  'n')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  ==  'f'  ||  c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c  ==  'f'  ||  c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	69	2	add
836	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  {  'f'  ||  c  ==  'n')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  }  else  if(c  {  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    }  else  if(c  {  'f'  ||  c  ==  'n')  {	  	non-compiled	[CE]  ')'  expected	69	None	add
837	[BUG]  [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	136	None	replace
838	[BUG]  [BUGGY]  Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=true;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	136	None	replace
839	[BUG]  [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')id=true;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	136	None	replace
840	[BUG]  [BUGGY]  Context.checkState(id  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(id  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(id  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=true;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	136	None	replace
841	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	125	None	add
842	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	125	2	add
843	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	125	2	add
844	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {	  	non-compiled	[CE]  orphaned  case	125	None	add
845	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')	  	non-compiled	[CE]  illegal  start  of  expression	125	None	add
846	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  if(s.charAt  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  if(s.charAt  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  if(s.charAt	  	non-compiled	[CE]  ')'  expected	125	None	add
847	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  if(s.  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  if(s.  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  if(s.	  	non-compiled	[CE]  <identifier>  expected	125	None	add
848	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'f')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'f')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'f')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	297	None	replace
849	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	297	2	replace
850	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=false;  break  complete;  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	297	2	replace
851	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	277	None	replace
852	[BUG]  [BUGGY]  deal(c)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	deal(c)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  if(!id)    {    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	263	None	replace
853	[BUG]  [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'f')  {  i  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'f')  {  i  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'f')  {  i	  if(!id)    {    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	263	None	replace
854	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    '-')    {    }  else  if(c  ==  '.'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
855	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '-')    {    }  else  if(c  ==  '.'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
856	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  }  else  if(c!=  '.'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    '-')    {    }  else  if(c!=  '.'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
857	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  }  else  if(c!=  '.'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  }  else  if(c!=  '.'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '-')    {    }  else  if(c!=  '.'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
858	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  }  else  if(c  ==  '.'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    '-')    {    }  else  if(c  ==  '.'  ||  c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
859	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  }  else  if(c  ==  '.'  ||  c!=  '-')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  }  else  if(c  ==  '.'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '-')    {    }  else  if(c  ==  '.'  ||  c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
860	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  }  else  if(c  >=  '.'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    '-')    {    }  else  if(c  >=  '.'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
861	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  }  else  if(c  >=  '.'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  }  else  if(c  >=  '.'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '-')    {    }  else  if(c  >=  '.'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
862	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  }  else  if(c  ==  '.'  ||  c  >=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    '-')    {    }  else  if(c  ==  '.'  ||  c  >=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
863	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  }  else  if(c  ==  '.'  ||  c  >=  '-')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  }  else  if(c  ==  '.'  ||  c  >=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '-')    {    }  else  if(c  ==  '.'  ||  c  >=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	39	2	add
864	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  }  else  if(c  {  '.'  ||  c  ==  '-')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  }  else  if(c  {  '.'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '-')    {    }  else  if(c  {  '.'  ||  c  ==  '-')  {	  	non-compiled	[CE]  ')'  expected	39	None	add
865	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    >=    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	222	2	add
866	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    >=    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	222	2	add
867	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    >=    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	222	2	add
868	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    >=    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	222	2	add
869	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    >=    'e')    {    }  else  if(c  ==  'e'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	222	2	add
870	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    >=    'e')    {    }  else  if(c  ==  'e'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	222	2	add
871	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'i'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    >=    'e')    {    }  else  if(c  ==  'i'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	222	2	add
872	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'i'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'i'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    >=    'e')    {    }  else  if(c  ==  'i'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	222	2	add
873	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    >=    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	222	2	add
874	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    >=    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	222	2	add
875	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    >=    'e')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	222	2	add
876	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    >=    'e')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	222	2	add
877	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	225	2	add
878	[BUG]  [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	225	2	add
879	[BUG]  [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break	  	non-compiled	[CE]  ';'  expected	225	None	add
880	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	225	2	add
881	[BUG]  [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	225	2	add
882	[BUG]  [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }	  	non-compiled	[CE]  undefined  label:  finish	225	None	add
883	[BUG]  [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete	  	non-compiled	[CE]  ';'  expected	225	None	add
884	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    >=    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	116	2	add
885	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    >=    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	116	2	add
886	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    >=    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	116	2	add
887	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    >=    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	116	2	add
888	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    >=    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	116	2	add
889	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    >=    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	116	2	add
890	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    >=    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	116	2	add
891	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    >=    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	116	2	add
892	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'i'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    >=    'f')    {    }  else  if(c  ==  'i'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	116	2	add
893	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'i'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'i'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    >=    'f')    {    }  else  if(c  ==  'i'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	116	2	add
894	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    >=    'f')    {    }  else  if(c  ==  'r'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	116	2	add
895	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    >=    'f')    {    }  else  if(c  ==  'r'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	116	2	add
896	[BUG]  [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    	non-compiled	[CE]  ';'  expected	255	None	replace
897	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    	non-compiled	[CE]  orphaned  case	255	None	replace
898	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    	non-compiled	[CE]  orphaned  case	255	None	replace
899	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
900	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
901	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	100	None	add
902	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {	  	non-compiled	[CE]  orphaned  case	100	None	add
903	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  '  [CE]  illegal  line  end  in  character  literal  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  '  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	100	None	add
904	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  if  [CE]  '('  expected  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  if  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  if	  	non-compiled	[CE]  '('  expected	100	None	add
905	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	142	2	add
906	[BUG]  [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	142	2	add
907	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c!=  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	142	2	add
908	[BUG]  [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c!=  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c!=  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	142	2	add
909	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	142	2	add
910	[BUG]  [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	142	2	add
911	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  '#'  ||  c!=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  '#'  ||  c!=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	142	2	add
912	[BUG]  [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  '#'  ||  c!=  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  '#'  ||  c!=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  '#'  ||  c!=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	142	2	add
913	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	142	2	add
914	[BUG]  [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c!=  '*')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	142	2	add
915	[BUG]  [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  {  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  {  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  {  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {	  	non-compiled	[CE]  ')'  expected	142	None	add
916	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }	          if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	244	None	replace
917	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }	          if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	244	None	replace
918	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	81	2	add
919	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	81	2	add
920	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	81	2	add
921	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	81	2	add
922	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	81	2	add
923	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	81	2	add
924	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  >>  'n'  ||  c  ==  '-')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  >>  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c  >>  'n'  ||  c  ==  '-')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	81	None	add
925	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n'  ||  c  >=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  >=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	81	2	add
926	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n'  ||  c  >=  '-')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n'  ||  c  >=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  >=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	81	2	add
927	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	81	2	add
928	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	81	2	add
929	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    >=    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	64	2	add
930	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    >=    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	64	2	add
931	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    >=    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	64	2	add
932	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    >=    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	64	2	add
933	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    >=    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	64	2	add
934	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    >=    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	64	2	add
935	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    >=    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'i'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	64	2	add
936	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    >=    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'i'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	64	2	add
937	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    >=    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	64	2	add
938	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    >=    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	64	2	add
939	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    >=    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	64	2	add
940	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    >=    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	64	2	add
941	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(2)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(2)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(2)  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	137	None	replace
942	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  2)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  2)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  2)  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	137	None	replace
943	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    >=    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	114	2	add
944	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    >=    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	114	2	add
945	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c  >=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    >=    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	114	2	add
946	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c  >=  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c  >=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    >=    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	114	2	add
947	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    >=    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	114	2	add
948	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    >=    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	114	2	add
949	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c  >>  'n'  ||  c  ==  'f')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c  >>  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    >=    'n'    ||    c    ==    'f')    {    }  else  if(c  >>  'n'  ||  c  ==  'f')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	114	None	add
950	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    >=    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	114	2	add
951	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    >=    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	114	2	add
952	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    >=    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	114	2	add
953	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    >=    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	114	2	add
954	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	37	2	add
955	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	37	2	add
956	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break	  	non-compiled	[CE]  ';'  expected	37	None	add
957	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	37	None	add
958	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  &&  c  ==  '*')  {	  }    else    if(c    ==    'N'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	141	2	replace
959	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  &&  c  ==  '*')  {	  }    else    if(c    ==    'N'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	141	2	replace
960	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'N'  ||  c  ==  '*')  {	  }    else    if(c    ==    'N'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	141	2	replace
961	[BUG]  [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'N'  ||  c  ==  '*')  {	  }    else    if(c    ==    'N'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	141	2	replace
962	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c!=  '*')  {	  }    else    if(c    ==    'N'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	141	2	replace
963	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c!=  '*')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c!=  '*')  {	  }    else    if(c    ==    'N'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	141	2	replace
964	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '-'    ||    c    ==    'n')    {    }  else  if(c  ==  '-'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	83	2	add
965	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-'    ||    c    ==    'n')    {    }  else  if(c  ==  '-'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	83	2	add
966	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  }  else  if(c!=  '-'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '-'    ||    c    ==    'n')    {    }  else  if(c!=  '-'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	83	2	add
967	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  }  else  if(c!=  '-'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  }  else  if(c!=  '-'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-'    ||    c    ==    'n')    {    }  else  if(c!=  '-'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	83	2	add
968	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  }  else  if(c  ==  '-'  ||  c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '-'    ||    c    ==    'n')    {    }  else  if(c  ==  '-'  ||  c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	83	2	add
969	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  }  else  if(c  ==  '-'  ||  c!=  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  }  else  if(c  ==  '-'  ||  c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-'    ||    c    ==    'n')    {    }  else  if(c  ==  '-'  ||  c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	83	2	add
970	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  }  else  if(c  >=  '-'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '-'    ||    c    ==    'n')    {    }  else  if(c  >=  '-'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	83	2	add
971	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  }  else  if(c  >=  '-'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  }  else  if(c  >=  '-'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-'    ||    c    ==    'n')    {    }  else  if(c  >=  '-'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	83	2	add
972	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  }  else  if(c  ==  '-'  ||  c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '-'    ||    c    ==    'n')    {    }  else  if(c  ==  '-'  ||  c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	83	2	add
973	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  }  else  if(c  ==  '-'  ||  c  >=  'n')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  }  else  if(c  ==  '-'  ||  c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-'    ||    c    ==    'n')    {    }  else  if(c  ==  '-'  ||  c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	83	2	add
974	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  }  else  if(c  {  '-'  ||  c  ==  'n')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  }  else  if(c  {  '-'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-'    ||    c    ==    'n')    {    }  else  if(c  {  '-'  ||  c  ==  'n')  {	  	non-compiled	[CE]  ')'  expected	83	None	add
975	[BUG]  [BUGGY]  Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'h')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'h')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	205	None	replace
976	[BUG]  [BUGGY]  Context.checkState(id  ==  'n'  ||  c  ==  'r'  ||  c  ==  'h')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(id  ==  'n'  ||  c  ==  'r'  ||  c  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(id  ==  'n'  ||  c  ==  'r'  ||  c  ==  'h')  {  id=true;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	205	None	replace
977	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
978	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
979	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
980	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
981	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
982	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
983	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'i'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'i'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
984	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'i'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'i'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'i'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
985	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
986	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
987	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'f'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
988	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'f'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
989	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  &&  c  ==  'A')  {	  }    else    if(c    ==    'N'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	168	2	replace
990	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  &&  c  ==  'A')  {	  }    else    if(c    ==    'N'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	168	2	replace
991	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'N'  ||  c  ==  'A')  {	  }    else    if(c    ==    'N'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	168	2	replace
992	[BUG]  [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'N'  ||  c  ==  'A')  {	  }    else    if(c    ==    'N'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	168	2	replace
993	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c!=  'A')  {	  }    else    if(c    ==    'N'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	168	2	replace
994	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c!=  'A')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c!=  'A')  {	  }    else    if(c    ==    'N'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	168	2	replace
995	[BUG]  [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	234	None	replace
996	[BUG]  [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	deal(c)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	234	None	replace
997	[BUG]  [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	234	None	replace
998	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	146	None	replace
999	[BUG]  [BUGGY]  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
1000	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	272	2	add
1001	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	272	2	add
1002	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	272	2	add
1003	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	272	2	add
1004	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	272	2	add
1005	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	272	2	add
1006	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	272	2	add
1007	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '*')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	272	2	add
1008	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	272	2	add
1009	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	272	2	add
1010	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  {  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  {  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  {  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {	  	non-compiled	[CE]  ')'  expected	272	None	add
1011	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	75	2	add
1012	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	75	2	add
1013	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'n'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	75	2	add
1014	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'n'  ||  c  >=  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'n'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	75	2	add
1015	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'n'  ||  c  >>  'f')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'n'  ||  c  >>  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  ==  'n'  ||  c  >>  'f')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	75	None	add
1016	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c!=  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c!=  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	75	2	add
1017	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c!=  'n'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c!=  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c!=  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	75	2	add
1018	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	75	2	add
1019	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	75	2	add
1020	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  >=  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  >=  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	75	2	add
1021	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  >=  'n'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  >=  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  >=  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	75	2	add
1022	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    ':')    {    }  else  if(c  ==  '.'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1023	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    ':')    {    }  else  if(c  ==  '.'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1024	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  }  else  if(c!=  '.'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    ':')    {    }  else  if(c!=  '.'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1025	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  }  else  if(c!=  '.'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  }  else  if(c!=  '.'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    ':')    {    }  else  if(c!=  '.'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1026	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  }  else  if(c  ==  '.'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    ':')    {    }  else  if(c  ==  '.'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1027	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  }  else  if(c  ==  '.'  ||  c!=  ':')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  }  else  if(c  ==  '.'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    ':')    {    }  else  if(c  ==  '.'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1028	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  }  else  if(c  >=  '.'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    ':')    {    }  else  if(c  >=  '.'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1029	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  }  else  if(c  >=  '.'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  }  else  if(c  >=  '.'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    ':')    {    }  else  if(c  >=  '.'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1030	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  }  else  if(c  ==  '.'  ||  c  >=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    ':')    {    }  else  if(c  ==  '.'  ||  c  >=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1031	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  }  else  if(c  ==  '.'  ||  c  >=  ':')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  }  else  if(c  ==  '.'  ||  c  >=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    ':')    {    }  else  if(c  ==  '.'  ||  c  >=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	43	2	add
1032	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  }  else  if(c  {  '.'  ||  c  ==  ':')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  }  else  if(c  {  '.'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    ':')    {    }  else  if(c  {  '.'  ||  c  ==  ':')  {	  	non-compiled	[CE]  ')'  expected	43	None	add
1033	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    >=    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	179	2	add
1034	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    >=    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	179	2	add
1035	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    >=    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	179	2	add
1036	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    >=    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	179	2	add
1037	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    >=    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	179	2	add
1038	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    >=    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	179	2	add
1039	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    >=    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	179	2	add
1040	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    >=    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	179	2	add
1041	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    >=    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	179	2	add
1042	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    >=    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	179	2	add
1043	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'i'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    >=    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'i'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	179	2	add
1044	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'i'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'i'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    >=    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'i'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	179	2	add
1045	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  >=  'n'  ||  c  ==  'a')  {	  }    else    if(c!=    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
1046	[BUG]  [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  >=  'n'  ||  c  ==  'a')  {	  }    else    if(c!=    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
1047	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    '+')    {    }  else  if(c  ==  'N'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	187	2	add
1048	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '+')    {    }  else  if(c  ==  'N'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	187	2	add
1049	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  }  else  if(c!=  'N'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    '+')    {    }  else  if(c!=  'N'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	187	2	add
1050	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  }  else  if(c!=  'N'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  }  else  if(c!=  'N'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '+')    {    }  else  if(c!=  'N'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	187	2	add
1051	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  }  else  if(c  ==  'N'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    '+')    {    }  else  if(c  ==  'N'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	187	2	add
1052	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  }  else  if(c  ==  'N'  ||  c!=  '+')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  }  else  if(c  ==  'N'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '+')    {    }  else  if(c  ==  'N'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	187	2	add
1053	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  }  else  if(c  >=  'N'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    '+')    {    }  else  if(c  >=  'N'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	187	2	add
1054	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  }  else  if(c  >=  'N'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  }  else  if(c  >=  'N'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '+')    {    }  else  if(c  >=  'N'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	187	2	add
1055	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  }  else  if(c  ==  'N'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    '+')    {    }  else  if(c  ==  'N'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	187	2	add
1056	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  }  else  if(c  ==  'N'  ||  c  >=  '+')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  }  else  if(c  ==  'N'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '+')    {    }  else  if(c  ==  'N'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	187	2	add
1057	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  }  else  if(c  {  'N'  ||  c  ==  '+')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  }  else  if(c  {  'N'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '+')    {    }  else  if(c  {  'N'  ||  c  ==  '+')  {	  	non-compiled	[CE]  ')'  expected	187	None	add
1058	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	152	2	add
1059	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	152	2	add
1060	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	152	2	add
1061	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	152	2	add
1062	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	152	2	add
1063	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	152	2	add
1064	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	152	None	add
1065	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(4)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(4)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	152	2	add
1066	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(4)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(4)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(4)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	152	2	add
1067	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	204	None	replace
1068	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	204	None	replace
1069	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  &&  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'e'  &&  c  ==  'n')  {	  }    else    if(c    ==    'e'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	196	2	replace
1070	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  &&  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  &&  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'e'  &&  c  ==  'n')  {	  }    else    if(c    ==    'e'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	196	2	replace
1071	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'e'  ||  c  ==  'n')  {	  }    else    if(c    ==    'e'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	196	2	replace
1072	[BUG]  [BUGGY]  }  else  if(c!=  'e'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'e'  ||  c  ==  'n')  {	  }    else    if(c    ==    'e'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	196	2	replace
1073	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'e'  ||  c!=  'n')  {	  }    else    if(c    ==    'e'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	196	2	replace
1074	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c!=  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'e'  ||  c!=  'n')  {	  }    else    if(c    ==    'e'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	196	2	replace
1075	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	183	2	add
1076	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	183	2	add
1077	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	183	2	add
1078	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	183	2	add
1079	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'i'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	183	2	add
1080	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'i'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	183	2	add
1081	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'f'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	183	2	add
1082	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'f'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	183	2	add
1083	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'r'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'r'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	183	2	add
1084	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'r'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'r'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'r'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	183	2	add
1085	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	183	2	add
1086	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	183	2	add
1087	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
1088	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
1089	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
1090	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
1091	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
1092	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
1093	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
1094	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'a')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
1095	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
1096	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
1097	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  {  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  {  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  {  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {	  	non-compiled	[CE]  ')'  expected	1	None	add
1098	[BUG]  [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	270	None	replace
1099	[BUG]  [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	270	None	replace
1100	[BUG]  [BUGGY]  Context.checkState(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'd'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	138	None	replace
1101	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(1)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'd'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	138	None	replace
1102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  &&  c  ==  'n')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	70	2	replace
1103	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  &&  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  &&  c  ==  'n')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	70	2	replace
1104	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'f'  ||  c  ==  'n')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	70	2	replace
1105	[BUG]  [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'f'  ||  c  ==  'n')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	70	2	replace
1106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c!=  'n')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	70	2	replace
1107	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c!=  'n')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	70	2	replace
1108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    'e')    {    }  else  if(c  ==  'N'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	199	2	add
1109	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'e')    {    }  else  if(c  ==  'N'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	199	2	add
1110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  }  else  if(c!=  'N'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    'e')    {    }  else  if(c!=  'N'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	199	2	add
1111	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  }  else  if(c!=  'N'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  }  else  if(c!=  'N'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'e')    {    }  else  if(c!=  'N'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	199	2	add
1112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  }  else  if(c  ==  'N'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    'e')    {    }  else  if(c  ==  'N'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	199	2	add
1113	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  }  else  if(c  ==  'N'  ||  c!=  'e')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  }  else  if(c  ==  'N'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'e')    {    }  else  if(c  ==  'N'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	199	2	add
1114	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  }  else  if(c  >=  'N'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    'e')    {    }  else  if(c  >=  'N'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	199	2	add
1115	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  }  else  if(c  >=  'N'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  }  else  if(c  >=  'N'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'e')    {    }  else  if(c  >=  'N'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	199	2	add
1116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  }  else  if(c  ==  'N'  ||  c  >=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    'e')    {    }  else  if(c  ==  'N'  ||  c  >=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	199	2	add
1117	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  }  else  if(c  ==  'N'  ||  c  >=  'e')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  }  else  if(c  ==  'N'  ||  c  >=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'e')    {    }  else  if(c  ==  'N'  ||  c  >=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	199	2	add
1118	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  }  else  if(c  {  'N'  ||  c  ==  'e')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  }  else  if(c  {  'N'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'e')    {    }  else  if(c  {  'N'  ||  c  ==  'e')  {	  	non-compiled	[CE]  ')'  expected	199	None	add
1119	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    'A')    {    }  else  if(c  ==  'N'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	167	2	add
1120	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'A')    {    }  else  if(c  ==  'N'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	167	2	add
1121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  }  else  if(c!=  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    'A')    {    }  else  if(c!=  'N'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	167	2	add
1122	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  }  else  if(c!=  'N'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  }  else  if(c!=  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'A')    {    }  else  if(c!=  'N'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	167	2	add
1123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  }  else  if(c  ==  'N'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    'A')    {    }  else  if(c  ==  'N'  ||  c!=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	167	2	add
1124	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  }  else  if(c  ==  'N'  ||  c!=  'A')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  }  else  if(c  ==  'N'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'A')    {    }  else  if(c  ==  'N'  ||  c!=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	167	2	add
1125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  }  else  if(c  >=  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    'A')    {    }  else  if(c  >=  'N'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	167	2	add
1126	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  }  else  if(c  >=  'N'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  }  else  if(c  >=  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'A')    {    }  else  if(c  >=  'N'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	167	2	add
1127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  }  else  if(c  ==  'N'  ||  c  >=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    'A')    {    }  else  if(c  ==  'N'  ||  c  >=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	167	2	add
1128	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  }  else  if(c  ==  'N'  ||  c  >=  'A')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  }  else  if(c  ==  'N'  ||  c  >=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'A')    {    }  else  if(c  ==  'N'  ||  c  >=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	167	2	add
1129	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  }  else  if(c  {  'N'  ||  c  ==  'A')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  }  else  if(c  {  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'A')    {    }  else  if(c  {  'N'  ||  c  ==  'A')  {	  	non-compiled	[CE]  ')'  expected	167	None	add
1130	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	165	2	add
1131	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	165	2	add
1132	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	165	2	add
1133	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	165	2	add
1134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	165	2	add
1135	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	165	2	add
1136	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  >>  'n'  ||  c  ==  'A')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  >>  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c  >>  'n'  ||  c  ==  'A')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	165	None	add
1137	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  >=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  >=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	165	2	add
1138	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  >=  'A')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  >=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  >=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	165	2	add
1139	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	165	2	add
1140	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	165	2	add
1141	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c  ==  'n'  ||  c  ==  ':')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }    else    if(c    {    'n'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	19	2	replace
1142	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c  ==  'n'  ||  c  ==  ':')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }    else    if(c    {    'n'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	19	2	replace
1143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'n'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c  ==  'n'  ||  c  ==  'n')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }    else    if(c    {    'n'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	19	2	replace
1144	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'n'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'n'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c  ==  'n'  ||  c  ==  'n')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }    else    if(c    {    'n'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	19	2	replace
1145	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  &&  c  ==  '-')  {	  }    else    if(c    ==    'N'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	80	2	replace
1146	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  &&  c  ==  '-')  {	  }    else    if(c    ==    'N'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	80	2	replace
1147	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'N'  ||  c  ==  '-')  {	  }    else    if(c    ==    'N'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	80	2	replace
1148	[BUG]  [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'N'  ||  c  ==  '-')  {	  }    else    if(c    ==    'N'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	80	2	replace
1149	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c!=  '-')  {	  }    else    if(c    ==    'N'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	80	2	replace
1150	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c!=  '-')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c!=  '-')  {	  }    else    if(c    ==    'N'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	80	2	replace
1151	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	290	2	add
1152	[BUG]  [BUGGY]          if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	290	2	add
1153	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	290	2	add
1154	[BUG]  [BUGGY]          if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	290	2	add
1155	[BUG]  [BUGGY]          if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	290	None	add
1156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	290	2	add
1157	[BUG]  [BUGGY]          if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	290	2	add
1158	[BUG]  [BUGGY]          if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  finish;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  finish;  }  }	  	non-compiled	[CE]  undefined  label:  finish	290	None	add
1159	[BUG]  [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'd'  ||  c  ==  'o')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'd'  ||  c  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'n'  ||  c  ==  'd'  ||  c  ==  'o')  {  id=true;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'd'    ||    c    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	139	None	replace
1160	[BUG]  [BUGGY]  Context.checkState(c  ==  'd'  ||  c  ==  'n'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'd'  ||  c  ==  'n'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'd'  ||  c  ==  'n'  ||  c  ==  'o')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'd'    ||    c    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	139	None	replace
1161	[BUG]  [BUGGY]  Context.checkState(c!=  'n'  ||  c  ==  'd'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c!=  'n'  ||  c  ==  'd'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c!=  'n'  ||  c  ==  'd'  ||  c  ==  'o')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'd'    ||    c    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	139	None	replace
1162	[BUG]  [BUGGY]  Context.checkState(c  ==  'N'  ||  c  ==  'd'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'N'  ||  c  ==  'd'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'N'  ||  c  ==  'd'  ||  c  ==  'o')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'd'    ||    c    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	139	None	replace
1163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  &&  c  ==  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  &&  c  ==  '@')  {	  }    else    if(c    ==    '.'    ||    c    ==    '@')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1164	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  &&  c  ==  '@')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  &&  c  ==  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  &&  c  ==  '@')  {	  }    else    if(c    ==    '.'    ||    c    ==    '@')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  '.'  ||  c  ==  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  '.'  ||  c  ==  '@')  {	  }    else    if(c    ==    '.'    ||    c    ==    '@')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1166	[BUG]  [BUGGY]  }  else  if(c!=  '.'  ||  c  ==  '@')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  '.'  ||  c  ==  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  '.'  ||  c  ==  '@')  {	  }    else    if(c    ==    '.'    ||    c    ==    '@')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1167	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c!=  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  ||  c!=  '@')  {	  }    else    if(c    ==    '.'    ||    c    ==    '@')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1168	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c!=  '@')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c!=  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  ||  c!=  '@')  {	  }    else    if(c    ==    '.'    ||    c    ==    '@')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '-'  ||  c  ==  '@')  {	  }    else    if(c    ==    '.'    ||    c    ==    '@')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1170	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '@')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '-'  ||  c  ==  '@')  {	  }    else    if(c    ==    '.'    ||    c    ==    '@')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1171	[BUG]  [BUGGY]  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  ||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	||  c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
1172	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	135	None	replace
1173	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	202	None	replace
1174	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	262	None	replace
1175	[BUG]  [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'f')  {  if(s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'f')  {  if(s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'f')  {  if(s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	262	None	replace
1176	[BUG]  [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'i')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'i')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'i')  {  id=true;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	262	None	replace
1177	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  c  ==  'a')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  c  ==  'a')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  c  ==  'a')  {  id=true;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	262	None	replace
1178	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    '-')    {    }  else  if(c  ==  'N'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	79	2	add
1179	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '-')    {    }  else  if(c  ==  'N'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	79	2	add
1180	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  }  else  if(c!=  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    '-')    {    }  else  if(c!=  'N'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	79	2	add
1181	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  }  else  if(c!=  'N'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  }  else  if(c!=  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '-')    {    }  else  if(c!=  'N'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	79	2	add
1182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  }  else  if(c  ==  'N'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    '-')    {    }  else  if(c  ==  'N'  ||  c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	79	2	add
1183	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  }  else  if(c  ==  'N'  ||  c!=  '-')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  }  else  if(c  ==  'N'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '-')    {    }  else  if(c  ==  'N'  ||  c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	79	2	add
1184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  }  else  if(c  >=  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    '-')    {    }  else  if(c  >=  'N'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	79	2	add
1185	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  }  else  if(c  >=  'N'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  }  else  if(c  >=  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '-')    {    }  else  if(c  >=  'N'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	79	2	add
1186	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  }  else  if(c  ==  'N'  ||  c  >=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    '-')    {    }  else  if(c  ==  'N'  ||  c  >=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	79	2	add
1187	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  }  else  if(c  ==  'N'  ||  c  >=  '-')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  }  else  if(c  ==  'N'  ||  c  >=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '-')    {    }  else  if(c  ==  'N'  ||  c  >=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	79	2	add
1188	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  }  else  if(c  {  'N'  ||  c  ==  '-')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  }  else  if(c  {  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '-')    {    }  else  if(c  {  'N'  ||  c  ==  '-')  {	  	non-compiled	[CE]  ')'  expected	79	None	add
1189	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c  ==  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c!=    '.')    {    }  else  if(c  ==  '.')  {	  	compilable	  [FE]  AssertionFailedError  	156	2	add
1190	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c  ==  '.')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c  ==  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c!=    '.')    {    }  else  if(c  ==  '.')  {	  	compilable	  [FE]  AssertionFailedError  	156	2	add
1191	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c!=  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c!=    '.')    {    }  else  if(c!=  '.')  {	  	compilable	  [FE]  AssertionFailedError  	156	2	add
1192	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c!=  '.')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c!=  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c!=    '.')    {    }  else  if(c!=  '.')  {	  	compilable	  [FE]  AssertionFailedError  	156	2	add
1193	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c  >=  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c!=    '.')    {    }  else  if(c  >=  '.')  {	  	compilable	  [FE]  AssertionFailedError  	156	2	add
1194	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c  >=  '.')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c  >=  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c!=    '.')    {    }  else  if(c  >=  '.')  {	  	compilable	  [FE]  AssertionFailedError  	156	2	add
1195	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c!=    '.')    {    }  else  if(c  ==  '.'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	156	2	add
1196	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c!=    '.')    {    }  else  if(c  ==  '.'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	156	2	add
1197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c!=    '.')    {    }  else  if(c  ==  '.'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	156	2	add
1198	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c!=    '.')    {    }  else  if(c  ==  '.'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	156	2	add
1199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c!=    '.')    {    }  else  if(c  ==  '.'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	156	2	add
1200	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c!=    '.')    {    }  else  if(c  ==  '.'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	156	2	add
1201	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  &&  c  ==  ':')  {	  }    else    if(c    ==    'N'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	120	2	replace
1202	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  &&  c  ==  ':')  {	  }    else    if(c    ==    'N'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	120	2	replace
1203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'N'  ||  c  ==  ':')  {	  }    else    if(c    ==    'N'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	120	2	replace
1204	[BUG]  [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'N'  ||  c  ==  ':')  {	  }    else    if(c    ==    'N'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	120	2	replace
1205	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c!=  ':')  {	  }    else    if(c    ==    'N'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	120	2	replace
1206	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c!=  ':')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c!=  ':')  {	  }    else    if(c    ==    'N'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	120	2	replace
1207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	110	2	add
1208	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	110	2	add
1209	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	110	2	add
1210	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	110	2	add
1211	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	110	2	add
1212	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	110	2	add
1213	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	110	2	add
1214	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	110	2	add
1215	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'i'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  ==  'i'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	110	2	add
1216	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'i'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'i'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  ==  'i'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	110	2	add
1217	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  ==  'r'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	110	2	add
1218	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'r'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  ==  'r'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	110	2	add
1219	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
1220	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
1221	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c  >=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
1222	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c  >=  'a')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c  >=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
1223	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c  >>  'a')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c  >>  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'n'  ||  c  >>  'a')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	5	None	add
1224	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c!=  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c!=  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
1225	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c!=  'n'  ||  c!=  'a')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c!=  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c!=  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
1226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  >=  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  >=  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
1227	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  >=  'n'  ||  c!=  'a')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  >=  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  >=  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	5	2	add
1228	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c  [BUGGY]  'a')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c  [BUGGY]  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'n'  ||  c  [BUGGY]  'a')  {	  	non-compiled	[CE]  ')'  expected	5	None	add
1229	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	87	2	replace
1230	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	87	2	replace
1231	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	87	2	replace
1232	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	87	2	replace
1233	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  >=  'n'  ||  c  ==  '-')  {	  }    else    if(c!=    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	82	2	replace
1234	[BUG]  [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  >=  'n'  ||  c  ==  '-')  {	  }    else    if(c!=    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	82	2	replace
1235	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	173	2	add
1236	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	173	2	add
1237	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'N'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	173	2	add
1238	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'N'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	173	2	add
1239	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	173	2	add
1240	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	173	2	add
1241	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'i'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'i'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	173	2	add
1242	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'i'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'i'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'i'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	173	2	add
1243	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	173	2	add
1244	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	173	2	add
1245	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'r'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'r'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	173	2	add
1246	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'r'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'r'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'r'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	173	2	add
1247	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	289	2	replace
1248	[BUG]  [BUGGY]  }  else  if(c!=  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	289	2	replace
1249	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'u'  ||  c!=  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	289	2	replace
1250	[BUG]  [BUGGY]  }  else  if(c  ==  'u'  ||  c!=  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'u'  ||  c!=  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	289	2	replace
1251	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c!=  'e')  {	  }    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	289	2	replace
1252	[BUG]  [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c!=  'e')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c!=  'e')  {	  }    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	289	2	replace
1253	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  >=  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	289	2	replace
1254	[BUG]  [BUGGY]  }  else  if(c  >=  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  >=  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	289	2	replace
1255	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'f')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	171	2	add
1256	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'f')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	171	2	add
1257	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'f')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	171	2	add
1258	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'f')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	171	2	add
1259	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'f')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	171	2	add
1260	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'f')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	171	2	add
1261	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(  'r'  &&  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(  'r'  &&  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'f')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(  'r'  &&  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  }	  	non-compiled	[CE]  ')'  expected	171	None	add
1262	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	296	2	replace
1263	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=true;  break  complete;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	296	2	replace
1264	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	88	None	replace
1265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	299	2	replace
1266	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	299	2	replace
1267	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	299	2	replace
1268	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	299	2	replace
1269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c  ==  'a'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	299	2	replace
1270	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c  ==  'a'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	299	2	replace
1271	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c!=  'a'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	299	2	replace
1272	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c!=  'a'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	299	2	replace
1273	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  &&  c  ==  'e')  {	  }    else    if(c    ==    'N'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	200	2	replace
1274	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  &&  c  ==  'e')  {	  }    else    if(c    ==    'N'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	200	2	replace
1275	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c  ==  'E')  {	  }    else    if(c    ==    'N'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	200	2	replace
1276	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'E')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c  ==  'E')  {	  }    else    if(c    ==    'N'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	200	2	replace
1277	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'N'  ||  c  ==  'e')  {	  }    else    if(c    ==    'N'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	200	2	replace
1278	[BUG]  [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'N'  ||  c  ==  'e')  {	  }    else    if(c    ==    'N'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	200	2	replace
1279	[BUG]  [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	deal(c)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	269	None	replace
1280	[BUG]  [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	deal(c)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	269	None	replace
1281	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	214	2	add
1282	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	214	2	add
1283	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'e'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	214	2	add
1284	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'e'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	214	2	add
1285	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'i'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'i'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	214	2	add
1286	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'i'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'i'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'i'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	214	2	add
1287	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	214	2	add
1288	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	214	2	add
1289	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	214	2	add
1290	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	214	2	add
1291	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	214	2	add
1292	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	214	2	add
1293	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }    else    if(c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	215	2	replace
1294	[BUG]  [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }    else    if(c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	215	2	replace
1295	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'a')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }    else    if(c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	90	2	replace
1296	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'a')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }    else    if(c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	90	2	replace
1297	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	282	2	replace
1298	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	282	2	replace
1299	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(0)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(0)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	282	2	replace
1300	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(0)  ==  'o')  {  id=false;  break  complete;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(0)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(0)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	282	2	replace
1301	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(3)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(3)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	282	2	replace
1302	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(3)  ==  'o')  {  id=false;  break  complete;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(3)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(3)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	282	2	replace
1303	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':')  {  }  else  if(c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    ':')    {    }  else  if(c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	302	2	add
1304	[BUG]  [BUGGY]  }  else  if(c  ==  ':')  {  }  else  if(c  ==  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':')  {  }  else  if(c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    ':')    {    }  else  if(c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	302	2	add
1305	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':')  {  }  else  if(c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    ':')    {    }  else  if(c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	302	2	add
1306	[BUG]  [BUGGY]  }  else  if(c  ==  ':')  {  }  else  if(c!=  ':')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':')  {  }  else  if(c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    ':')    {    }  else  if(c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	302	2	add
1307	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':')  {  }  else  if(c  >=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    ':')    {    }  else  if(c  >=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	302	2	add
1308	[BUG]  [BUGGY]  }  else  if(c  ==  ':')  {  }  else  if(c  >=  ':')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':')  {  }  else  if(c  >=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    ':')    {    }  else  if(c  >=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	302	2	add
1309	[BUG]  [BUGGY]  }  else  if(c  ==  ':')  {  }  else  if(c  {  ':')  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':')  {  }  else  if(c  {  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    ':')    {    }  else  if(c  {  ':')  {	  	non-compiled	[CE]  ')'  expected	302	None	add
1310	[BUG]  [BUGGY]  }  else  if(c  ==  ':')  {  }  else  if(c  >>  ':')  {  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':')  {  }  else  if(c  >>  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    ':')    {    }  else  if(c  >>  ':')  {	  	non-compiled	[CE]  incompatible  types	302	None	add
1311	[BUG]  [BUGGY]  }  else  if(c  ==  ':')  {  }  else  if(c  [BUGGY]  ':')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':')  {  }  else  if(c  [BUGGY]  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    ':')    {    }  else  if(c  [BUGGY]  ':')  {	  	non-compiled	[CE]  ')'  expected	302	None	add
1312	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	103	None	replace
1313	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    >=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	32	2	add
1314	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    >=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	32	2	add
1315	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    >=    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	32	2	add
1316	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    >=    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	32	2	add
1317	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    >=    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	32	2	add
1318	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    >=    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	32	2	add
1319	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    >=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'N'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	32	2	add
1320	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    >=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'N'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	32	2	add
1321	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    >=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'i'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	32	2	add
1322	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    >=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'i'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	32	2	add
1323	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    >=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	32	2	add
1324	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    >=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	32	2	add
1325	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	26	2	add
1326	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	26	2	add
1327	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'N'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	26	2	add
1328	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'N'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	26	2	add
1329	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	26	2	add
1330	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	26	2	add
1331	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'i'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	26	2	add
1332	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'i'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	26	2	add
1333	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	26	2	add
1334	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	26	2	add
1335	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	26	2	add
1336	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'd'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'd'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	26	2	add
1337	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
1338	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
1339	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
1340	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
1341	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
1342	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
1343	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
1344	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
1345	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
1346	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
1347	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
1348	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
1349	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    ':')    {    }  else  if(c  ==  'N'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	119	2	add
1350	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    ':')    {    }  else  if(c  ==  'N'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	119	2	add
1351	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  }  else  if(c  ==  'N'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    ':')    {    }  else  if(c  ==  'N'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	119	2	add
1352	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  }  else  if(c  ==  'N'  ||  c!=  ':')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  }  else  if(c  ==  'N'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    ':')    {    }  else  if(c  ==  'N'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	119	2	add
1353	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  }  else  if(c!=  'N'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    ':')    {    }  else  if(c!=  'N'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	119	2	add
1354	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  }  else  if(c!=  'N'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  }  else  if(c!=  'N'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    ':')    {    }  else  if(c!=  'N'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	119	2	add
1355	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  }  else  if(c  >=  'N'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    ':')    {    }  else  if(c  >=  'N'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	119	2	add
1356	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  }  else  if(c  >=  'N'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  }  else  if(c  >=  'N'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    ':')    {    }  else  if(c  >=  'N'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	119	2	add
1357	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  }  else  if(c  ==  'N'  ||  c  >=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    ':')    {    }  else  if(c  ==  'N'  ||  c  >=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	119	2	add
1358	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  }  else  if(c  ==  'N'  ||  c  >=  ':')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  }  else  if(c  ==  'N'  ||  c  >=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    ':')    {    }  else  if(c  ==  'N'  ||  c  >=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	119	2	add
1359	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  }  else  if(c  {  'N'  ||  c  ==  ':')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  }  else  if(c  {  'N'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    ':')    {    }  else  if(c  {  'N'  ||  c  ==  ':')  {	  	non-compiled	[CE]  ')'  expected	119	None	add
1360	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  &&  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  &&  c  ==  '+')  {	  }    else    if(c    ==    '.'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	42	2	replace
1361	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  &&  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  &&  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  &&  c  ==  '+')  {	  }    else    if(c    ==    '.'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	42	2	replace
1362	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  '.'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  '.'  ||  c  ==  '+')  {	  }    else    if(c    ==    '.'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	42	2	replace
1363	[BUG]  [BUGGY]  }  else  if(c!=  '.'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  '.'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  '.'  ||  c  ==  '+')  {	  }    else    if(c    ==    '.'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	42	2	replace
1364	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  ||  c!=  '+')  {	  }    else    if(c    ==    '.'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	42	2	replace
1365	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c!=  '+')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  ||  c!=  '+')  {	  }    else    if(c    ==    '.'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	42	2	replace
1366	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'N'  ||  c  ==  '+')  {	  }    else    if(c    ==    'N'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	188	2	replace
1367	[BUG]  [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'N'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'N'  ||  c  ==  '+')  {	  }    else    if(c    ==    'N'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	188	2	replace
1368	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  &&  c  ==  '+')  {	  }    else    if(c    ==    'N'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	188	2	replace
1369	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  &&  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  &&  c  ==  '+')  {	  }    else    if(c    ==    'N'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	188	2	replace
1370	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c!=  '+')  {	  }    else    if(c    ==    'N'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	188	2	replace
1371	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c!=  '+')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c!=  '+')  {	  }    else    if(c    ==    'N'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	188	2	replace
1372	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	177	2	add
1373	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	177	2	add
1374	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	177	2	add
1375	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	177	2	add
1376	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	177	2	add
1377	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	177	2	add
1378	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	177	2	add
1379	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	177	2	add
1380	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	177	2	add
1381	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	177	2	add
1382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'i'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'i'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	177	2	add
1383	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'i'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'i'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'i'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	177	2	add
1384	[BUG]  [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'f')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'f')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'f')  {  id=false;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	236	None	replace
1385	[BUG]  [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  break  complete;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	236	None	replace
1386	[BUG]  [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'd')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'd')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o'  ||  c  ==  'd')  {  id=false;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	236	None	replace
1387	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    'f')    {    }  else  if(c  ==  'N'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	73	2	add
1388	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'f')    {    }  else  if(c  ==  'N'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	73	2	add
1389	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  }  else  if(c!=  'N'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    'f')    {    }  else  if(c!=  'N'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	73	2	add
1390	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  }  else  if(c!=  'N'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  }  else  if(c!=  'N'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'f')    {    }  else  if(c!=  'N'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	73	2	add
1391	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  }  else  if(c  ==  'N'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    'f')    {    }  else  if(c  ==  'N'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	73	2	add
1392	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  }  else  if(c  ==  'N'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  }  else  if(c  ==  'N'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'f')    {    }  else  if(c  ==  'N'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	73	2	add
1393	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  }  else  if(c  >=  'N'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    'f')    {    }  else  if(c  >=  'N'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	73	2	add
1394	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  }  else  if(c  >=  'N'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  }  else  if(c  >=  'N'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'f')    {    }  else  if(c  >=  'N'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	73	2	add
1395	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  }  else  if(c  ==  'N'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'N'    ||    c    ==    'f')    {    }  else  if(c  ==  'N'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	73	2	add
1396	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  }  else  if(c  ==  'N'  ||  c  >=  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  }  else  if(c  ==  'N'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'f')    {    }  else  if(c  ==  'N'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	73	2	add
1397	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  }  else  if(c  {  'N'  ||  c  ==  'f')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  }  else  if(c  {  'N'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'f')    {    }  else  if(c  {  'N'  ||  c  ==  'f')  {	  	non-compiled	[CE]  ')'  expected	73	None	add
1398	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  'else')  {  [CE]  unclosed  character  literal  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  'else')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  ||  c  ==  'else')  {	  }    else    if(c    ==    '.')    {    else    if(c    ==    '.')    {    	non-compiled	[CE]  unclosed  character  literal	232	None	replace
1399	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  ||  c  ==  'f')  {	  }    else    if(c    ==    '.')    {    else    if(c    ==    '.')    {    	compilable	  [FE]  AssertionFailedError  	232	2	replace
1400	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  ||  c  ==  'f')  {	  }    else    if(c    ==    '.')    {    else    if(c    ==    '.')    {    	compilable	  [FE]  AssertionFailedError  	232	2	replace
1401	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
1402	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
1403	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
1404	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
1405	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
1406	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
1407	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  >>  'n'  ||  c  ==  '*')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  >>  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c  >>  'n'  ||  c  ==  '*')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	144	None	add
1408	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n'  ||  c  >=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  >=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
1409	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n'  ||  c  >=  '*')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n'  ||  c  >=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  >=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
1410	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
1411	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	144	2	add
1412	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  >=  'n'  ||  c  ==  '+')  {	  }    else    if(c!=    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	190	2	replace
1413	[BUG]  [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  >=  'n'  ||  c  ==  '+')  {	  }    else    if(c!=    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	190	2	replace
1414	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	93	2	add
1415	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	93	2	add
1416	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	93	2	add
1417	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	93	2	add
1418	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	93	2	add
1419	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	93	2	add
1420	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	93	2	add
1421	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	93	2	add
1422	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'i'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	93	2	add
1423	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'i'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	93	2	add
1424	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'f'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	93	2	add
1425	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'f'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	93	2	add
1426	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  &&  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  &&  c!=  'a')  {	  }    else    if(c    ==    'n'    ||    c!=    'a')    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
1427	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  &&  c!=  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  &&  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  &&  c!=  'a')  {	  }    else    if(c    ==    'n'    ||    c!=    'a')    {    	compilable	  [FE]  AssertionFailedError  	6	2	replace
1428	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	148	None	replace
1429	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	77	2	add
1430	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	77	2	add
1431	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	77	2	add
1432	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	77	2	add
1433	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	77	2	add
1434	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'f'  ||  c!=  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	77	2	add
1435	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	77	2	add
1436	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '-')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	77	2	add
1437	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	77	2	add
1438	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	77	2	add
1439	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  {  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  {  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  {  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {	  	non-compiled	[CE]  ')'  expected	77	None	add
1440	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  finish;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  finish;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  finish;  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	213	None	replace
1441	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  finish;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  finish;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  finish;  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	213	None	replace
1442	[BUG]  [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  finish;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  finish;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  finish;  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    finish;    }    }    	non-compiled	[CE]  ';'  expected	213	None	replace
1443	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	128	None	add
1444	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	128	2	add
1445	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	128	2	add
1446	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {	  	non-compiled	[CE]  orphaned  case	128	None	add
1447	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')	  	non-compiled	[CE]  illegal  start  of  expression	128	None	add
1448	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	128	2	add
1449	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	128	2	add
1450	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	128	None	add
1451	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    >=    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	66	2	add
1452	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    >=    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	66	2	add
1453	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'n'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    >=    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	66	2	add
1454	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'n'  ||  c  >=  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'n'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    >=    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	66	2	add
1455	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    >=    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	66	2	add
1456	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    >=    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	66	2	add
1457	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    >=    '+')    {    }  else  if(c  ==  'i'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	66	2	add
1458	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    >=    '+')    {    }  else  if(c  ==  'i'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	66	2	add
1459	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    >=    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	66	2	add
1460	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    >=    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	66	2	add
1461	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    >=    '+')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	66	2	add
1462	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    >=    '+')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	66	2	add
1463	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  &&  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'a'  &&  c  ==  'n')  {	  }    else    if(c    ==    'a'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	251	2	replace
1464	[BUG]  [BUGGY]  }  else  if(c  ==  'a'  &&  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  &&  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'a'  &&  c  ==  'n')  {	  }    else    if(c    ==    'a'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	251	2	replace
1465	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'n')  {	  }    else    if(c    ==    'a'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	251	2	replace
1466	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'a'  ||  c  ==  'n')  {	  }    else    if(c    ==    'a'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	251	2	replace
1467	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'A'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'A'  ||  c  ==  'n')  {	  }    else    if(c    ==    'a'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	251	2	replace
1468	[BUG]  [BUGGY]  }  else  if(c  ==  'A'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'A'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'A'  ||  c  ==  'n')  {	  }    else    if(c    ==    'a'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	251	2	replace
1469	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'a'  &&  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'a'  &&  c  ==  'n')  {	  }    else    if(c    ==    'a'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	251	2	replace
1470	[BUG]  [BUGGY]  }  else  if(c!=  'a'  &&  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'a'  &&  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'a'  &&  c  ==  'n')  {	  }    else    if(c    ==    'a'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	251	2	replace
1471	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  ':'  ||  c  ==  '+')  {	  }    else    if(c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	303	2	replace
1472	[BUG]  [BUGGY]  }  else  if(c  ==  ':'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  ':'  ||  c  ==  '+')  {	  }    else    if(c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	303	2	replace
1473	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  ':'  ||  c  ==  '-')  {	  }    else    if(c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	303	2	replace
1474	[BUG]  [BUGGY]  }  else  if(c  ==  ':'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  ':'  ||  c  ==  '-')  {	  }    else    if(c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	303	2	replace
1475	[BUG]  [BUGGY]  }  else  if(c  ==  ':'  ||  c  =='<  ')  {  [CE]  unclosed  character  literal  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':'  ||  c  =='<  ')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  ':'  ||  c  =='<  ')  {	  }    else    if(c    ==    ':')    {    	non-compiled	[CE]  unclosed  character  literal	303	None	replace
1476	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':'  ||  c  ==  '#')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  ':'  ||  c  ==  '#')  {	  }    else    if(c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	303	2	replace
1477	[BUG]  [BUGGY]  }  else  if(c  ==  ':'  ||  c  ==  '#')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':'  ||  c  ==  '#')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  ':'  ||  c  ==  '#')  {	  }    else    if(c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	303	2	replace
1478	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	131	None	replace
1479	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	71	2	add
1480	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	71	2	add
1481	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	71	2	add
1482	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	71	2	add
1483	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  >=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	71	2	add
1484	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  >=  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  >=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	71	2	add
1485	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  >>  'n'  ||  c  ==  'f')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  >>  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c  >>  'n'  ||  c  ==  'f')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	71	None	add
1486	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	71	2	add
1487	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  >=  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	71	2	add
1488	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	71	2	add
1489	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	71	2	add
1490	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
1491	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
1492	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
1493	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
1494	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
1495	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
1496	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  ==  'i'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
1497	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'i'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  ==  'i'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
1498	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  ==  'f'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
1499	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'f'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  ==  'f'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
1500	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'r'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  ==  'r'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
1501	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'r'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'r'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  ==  'r'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
1502	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  if(s.charAt(2)  ==  'i')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  if(s.charAt(2)  ==  'i')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'r')  {  if(s.charAt(2)  ==  'i')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	264	None	replace
1503	[BUG]  [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'i')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'i')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'i')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	264	None	replace
1504	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(1)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	264	None	replace
1505	[BUG]  [BUGGY]  if(c  ==  '+')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '+')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '+')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }	          if(c    ==    '+')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	242	None	replace
1506	[BUG]  [BUGGY]  if(c  ==  '+')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '+')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '+')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	          if(c    ==    '+')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	242	None	replace
1507	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c!=    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	28	2	add
1508	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c!=    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	28	2	add
1509	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c!=    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	28	2	add
1510	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c!=    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	28	2	add
1511	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c!=    '-')    {    }  else  if(c  ==  'N'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	28	2	add
1512	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c!=    '-')    {    }  else  if(c  ==  'N'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	28	2	add
1513	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c!=    '-')    {    }  else  if(c  ==  'i'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	28	2	add
1514	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c!=    '-')    {    }  else  if(c  ==  'i'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	28	2	add
1515	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c!=    '-')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	28	2	add
1516	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c!=    '-')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	28	2	add
1517	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'n'  ||  c  >=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c!=    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	28	2	add
1518	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'n'  ||  c  >=  '-')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'n'  ||  c  >=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c!=    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	28	2	add
1519	[BUG]  [BUGGY]  ||  c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  ||  c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	||  c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
1520	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    '@')    {    }  else  if(c  ==  '.'  ||  c  ==  '@')  {	  	compilable	  [FE]  AssertionFailedError  	45	2	add
1521	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '@')    {    }  else  if(c  ==  '.'  ||  c  ==  '@')  {	  	compilable	  [FE]  AssertionFailedError  	45	2	add
1522	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  }  else  if(c!=  '.'  ||  c  ==  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    '@')    {    }  else  if(c!=  '.'  ||  c  ==  '@')  {	  	compilable	  [FE]  AssertionFailedError  	45	2	add
1523	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  }  else  if(c!=  '.'  ||  c  ==  '@')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  }  else  if(c!=  '.'  ||  c  ==  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '@')    {    }  else  if(c!=  '.'  ||  c  ==  '@')  {	  	compilable	  [FE]  AssertionFailedError  	45	2	add
1524	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  }  else  if(c  ==  '.'  ||  c!=  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    '@')    {    }  else  if(c  ==  '.'  ||  c!=  '@')  {	  	compilable	  [FE]  AssertionFailedError  	45	2	add
1525	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  }  else  if(c  ==  '.'  ||  c!=  '@')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  }  else  if(c  ==  '.'  ||  c!=  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '@')    {    }  else  if(c  ==  '.'  ||  c!=  '@')  {	  	compilable	  [FE]  AssertionFailedError  	45	2	add
1526	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  }  else  if(c  >=  '.'  ||  c  ==  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    '@')    {    }  else  if(c  >=  '.'  ||  c  ==  '@')  {	  	compilable	  [FE]  AssertionFailedError  	45	2	add
1527	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  }  else  if(c  >=  '.'  ||  c  ==  '@')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  }  else  if(c  >=  '.'  ||  c  ==  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '@')    {    }  else  if(c  >=  '.'  ||  c  ==  '@')  {	  	compilable	  [FE]  AssertionFailedError  	45	2	add
1528	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  }  else  if(c  ==  '.'  ||  c  >=  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '.'    ||    c    ==    '@')    {    }  else  if(c  ==  '.'  ||  c  >=  '@')  {	  	compilable	  [FE]  AssertionFailedError  	45	2	add
1529	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  }  else  if(c  ==  '.'  ||  c  >=  '@')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  }  else  if(c  ==  '.'  ||  c  >=  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '@')    {    }  else  if(c  ==  '.'  ||  c  >=  '@')  {	  	compilable	  [FE]  AssertionFailedError  	45	2	add
1530	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  }  else  if(c  {  '.'  ||  c  ==  '@')  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  }  else  if(c  {  '.'  ||  c  ==  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '@')    {    }  else  if(c  {  '.'  ||  c  ==  '@')  {	  	non-compiled	[CE]  ')'  expected	45	None	add
1531	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	132	None	replace
1532	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  finish;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  finish;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  finish;  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	132	None	replace
1533	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  finish;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  finish;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  finish;  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	132	None	replace
1534	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    >=    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	34	2	add
1535	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    >=    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	34	2	add
1536	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    >=    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	34	2	add
1537	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    >=    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	34	2	add
1538	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    >=    '-')    {    }  else  if(c  ==  'N'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	34	2	add
1539	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    >=    '-')    {    }  else  if(c  ==  'N'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	34	2	add
1540	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'n'  ||  c  >=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    >=    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	34	2	add
1541	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'n'  ||  c  >=  '-')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'n'  ||  c  >=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    >=    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	34	2	add
1542	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    >=    '-')    {    }  else  if(c  ==  'i'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	34	2	add
1543	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    >=    '-')    {    }  else  if(c  ==  'i'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	34	2	add
1544	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    >=    '-')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	34	2	add
1545	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'f'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    >=    '-')    {    }  else  if(c  ==  'f'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	34	2	add
1546	[BUG]  [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	228	None	replace
1547	[BUG]  [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	deal(c)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	228	None	replace
1548	[BUG]  [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'f')  {  id=true;  break  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'f')  {  id=true;  break  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	deal(c)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'f')  {  id=true;  break	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	228	None	replace
1549	[BUG]  [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	241	None	replace
1550	[BUG]  [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	deal(c)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	241	None	replace
1551	[BUG]  [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'z')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'z')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'd'  ||  c  ==  'a'  ||  c  ==  'z')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	241	None	replace
1552	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	169	2	add
1553	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	169	2	add
1554	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	169	2	add
1555	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	169	2	add
1556	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	169	2	add
1557	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	169	2	add
1558	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	169	None	add
1559	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]            AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }	  	non-compiled	[CE]  undefined  label:  finish	169	None	add
1560	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c  ==  'r')  {	  }    else    if(c    ==    '.')    {    }    else    if(c    ==    '.')    {    	compilable	  [FE]  AssertionFailedError  	155	2	replace
1561	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c  ==  'r')  {	  }    else    if(c    ==    '.')    {    }    else    if(c    ==    '.')    {    	compilable	  [FE]  AssertionFailedError  	155	2	replace
1562	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	78	2	replace
1563	[BUG]  [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	78	2	replace
1564	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  {  'n'  ||  c  ==  'A')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  {  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  {  'n'  ||  c  ==  'A')  {	  	non-compiled	[CE]  ')'  expected	183	None	add
1565	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	183	2	add
1566	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	183	2	add
1567	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'N'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	183	2	add
1568	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'N'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	183	2	add
1569	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '+')  {	  }    else    if(c    ==    '-'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	301	2	replace
1570	[BUG]  [BUGGY]  }  else  if(c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '+')  {	  }    else    if(c    ==    '-'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	301	2	replace
1571	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '-'  ||  c!=  '+')  {	  }    else    if(c    ==    '-'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	301	2	replace
1572	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c!=  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '-'  ||  c!=  '+')  {	  }    else    if(c    ==    '-'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	301	2	replace
1573	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  'A')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	164	2	replace
1574	[BUG]  [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  'A')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	164	2	replace
1575	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  else  if(c  ==  '.'  ||  c  ==  '-')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '-')  {  else  if(c  ==  '.'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '-')    {    else  if(c  ==  '.'  ||  c  ==  '-')  {	  	non-compiled	[CE]  'else'  without  'if'	39	None	add
1576	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'n'  ||  c  >>  '+')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'n'  ||  c  >>  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    >=    '+')    {    }  else  if(c  ==  'n'  ||  c  >>  '+')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	66	None	add
1577	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  {  'n'  ||  c  ==  '+')  {  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  {  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    >=    '+')    {    }  else  if(c  {  'n'  ||  c  ==  '+')  {	  	non-compiled	[CE]  ')'  expected	66	None	add
1578	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;	  	non-compiled	[CE]  orphaned  case	86	None	add
1579	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete	  	non-compiled	[CE]  ';'  expected	86	None	add
1580	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break	  	non-compiled	[CE]  ';'  expected	86	None	add
1581	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  else  if(c!=  'n'  ||  c  ==  'A')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'A')  {  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'A')    {    else  if(c!=  'n'  ||  c  ==  'A')  {	  	non-compiled	[CE]  'else'  without  'if'	165	None	add
1582	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }    else    if(c    {    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	118	2	replace
1583	[BUG]  [BUGGY]  }  else  if(c  ==  'f')  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }    else    if(c    {    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	118	2	replace
1584	[BUG]  [BUGGY]  if(c  ==  '+')  {  if(s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '+')  {  if(s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '+')  {  if(s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }	          if(c    ==    '+')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	243	None	replace
1585	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  '+')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  '+')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  '+')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	          if(c    ==    '+')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	243	None	replace
1586	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c  >=  'e')  {	  }    else    if(c!=    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	198	2	replace
1587	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c  >=  'e')  {	  }    else    if(c!=    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	198	2	replace
1588	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  else  if(c!=  'n'  ||  c  ==  'a')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'a')  {  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'a')    {    else  if(c!=  'n'  ||  c  ==  'a')  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
1589	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;	  	non-compiled	[CE]  orphaned  case	102	None	add
1590	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	102	None	add
1591	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	294	None	add
1592	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c!=    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	175	2	add
1593	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c!=    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	175	2	add
1594	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  {  'n'  ||  c  ==  'A')  {  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  {  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c!=    'A')    {    }  else  if(c  {  'n'  ||  c  ==  'A')  {	  	non-compiled	[CE]  ')'  expected	175	None	add
1595	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c  >=  '*')  {	  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }    else    if(c    ==    'n'    ||    c    >=    '*')    {    	compilable	  [FE]  AssertionFailedError  	56	2	replace
1596	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c  >=  '*')  {	  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }    else    if(c    ==    'n'    ||    c    >=    '*')    {    	compilable	  [FE]  AssertionFailedError  	56	2	replace
1597	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N')  {	  }    else    if(c    ==    'N'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	80	2	replace
1598	[BUG]  [BUGGY]  }  else  if(c  ==  'N')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N')  {	  }    else    if(c    ==    'N'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	80	2	replace
1599	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'a'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }    else    if(c    {    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	260	2	replace
1600	[BUG]  [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'a'  ||  c  ==  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }    else    if(c    {    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	260	2	replace
1601	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'n')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	276	None	replace
1602	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(3)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	276	None	replace
1603	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  else  if(c  ==  'N'  ||  c  ==  '+')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '+')  {  else  if(c  ==  'N'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '+')    {    else  if(c  ==  'N'  ||  c  ==  '+')  {	  	non-compiled	[CE]  'else'  without  'if'	187	None	add
1604	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  else  if(c  ==  'n'  ||  c!=  '+')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  '+')  {  else  if(c  ==  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    '+')    {    else  if(c  ==  'n'  ||  c!=  '+')  {	  	non-compiled	[CE]  'else'  without  'if'	191	None	add
1605	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	264	None	replace
1606	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  >>  'n'  ||  c  ==  '-')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  >>  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c  >>  'n'  ||  c  ==  '-')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	30	None	add
1607	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	30	2	add
1608	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	30	2	add
1609	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n'  ||  c  >=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  >=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	30	2	add
1610	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n'  ||  c  >=  '-')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n'  ||  c  >=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  >=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	30	2	add
1611	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  else  if(c  ==  'N'  ||  c  ==  'a')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a')  {  else  if(c  ==  'N'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'a')    {    else  if(c  ==  'N'  ||  c  ==  'a')  {	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
1612	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	194	2	replace
1613	[BUG]  [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	194	2	replace
1614	[BUG]  [BUGGY]  Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c!=  'n'  ||  c  ==  'r'  ||  c  ==  'f')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	136	None	replace
1615	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c!=    '*')    {    }  else  if(c  ==  'N'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
1616	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c!=    '*')    {    }  else  if(c  ==  'N'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
1617	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c!=    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
1618	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c!=    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
1619	[BUG]  [BUGGY]  Context.checkState(c!=  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c!=  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c!=  'f'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    'f'    ||    c    ==    'r'    ||    c    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
1620	[BUG]  [BUGGY]  if(id)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	295	None	replace
1621	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  {  'n'  ||  c  ==  'e')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  {  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    >=    'e')    {    }  else  if(c  {  'n'  ||  c  ==  'e')  {	  	non-compiled	[CE]  ')'  expected	222	None	add
1622	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'e'  ||  c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    >=    'e')    {    }  else  if(c  ==  'e'  ||  c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	222	2	add
1623	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'e'  ||  c  >=  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'e'  ||  c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    >=    'e')    {    }  else  if(c  ==  'e'  ||  c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	222	2	add
1624	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    >=    'e')    {    }  else  if(c  ==  'f'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	222	2	add
1625	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    >=    'e')    {    }  else  if(c  ==  'f'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	222	2	add
1626	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  {  'n'  ||  c  ==  'a')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  {  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  {  'n'  ||  c  ==  'a')  {	  	non-compiled	[CE]  ')'  expected	91	None	add
1627	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	91	2	add
1628	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	91	2	add
1629	[BUG]  [BUGGY]  if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	208	None	replace
1630	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	208	None	replace
1631	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  }	          if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	293	2	replace
1632	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  }	          if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	293	2	replace
1633	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c  >=  '+')  {	  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }    else    if(c!=    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	61	2	replace
1634	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c  >=  '+')  {	  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }    else    if(c!=    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	61	2	replace
1635	[BUG]  [BUGGY]  if(id  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	133	None	replace
1636	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c!=    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	28	2	add
1637	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c!=    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	28	2	add
1638	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-1')  {  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-1')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c!=    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-1')  {	  	non-compiled	[CE]  unclosed  character  literal	28	None	add
1639	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    >=    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	34	2	add
1640	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    >=    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	34	2	add
1641	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-1')  {  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '-1')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    >=    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-1')  {	  	non-compiled	[CE]  unclosed  character  literal	34	None	add
1642	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	          if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	226	None	replace
1643	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	289	2	replace
1644	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	289	2	replace
1645	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'u'  ||  c  ==  'n')  {	  }    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	289	2	replace
1646	[BUG]  [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'u'  ||  c  ==  'n')  {	  }    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	289	2	replace
1647	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete	  	non-compiled	[CE]  ';'  expected	152	None	add
1648	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;	  	non-compiled	[CE]  orphaned  case	152	None	add
1649	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break	  	non-compiled	[CE]  ';'  expected	152	None	add
1650	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '-'  ||  c  ==  '*')  {	  }    else    if(c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	240	2	replace
1651	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '-'  ||  c  ==  '*')  {	  }    else    if(c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	240	2	replace
1652	[BUG]  [BUGGY]  if(c  ==  'a')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'a')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'a')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(id    ==    false)    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	271	None	replace
1653	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  >>  'n'  ||  c  ==  'a')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  >>  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    >=    'n'    ||    c    ==    'a')    {    }  else  if(c  >>  'n'  ||  c  ==  'a')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	95	None	add
1654	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    >=    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	95	2	add
1655	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'n'  ||  c!=  'a')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    >=    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c!=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	95	2	add
1656	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    >=    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	95	2	add
1657	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {  }  else  if(c  >=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    >=    'n'    ||    c    ==    'a')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	95	2	add
1658	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  if(c  ==  '+')  {  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  if(c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '-')  {  if(c  ==  '+')  {	  }    else    if(c    ==    '.')    {    if(c    ==    '.')    {    	non-compiled	[CE]  orphaned  case	233	None	replace
1659	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  if(c  ==  'E')  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e')  {  if(c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'e')  {  if(c  ==  'E')  {	  }    else    if(c    ==    '.')    {    if(c    ==    '.')    {    	non-compiled	[CE]  orphaned  case	233	None	replace
1660	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  if(c  ==  ':')  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  if(c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '-')  {  if(c  ==  ':')  {	  }    else    if(c    ==    '.')    {    if(c    ==    '.')    {    	non-compiled	[CE]  orphaned  case	233	None	replace
1661	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	247	None	replace
1662	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  {  'n'  ||  c  ==  'e')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  {  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  {  'n'  ||  c  ==  'e')  {	  	non-compiled	[CE]  ')'  expected	214	None	add
1663	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	132	None	replace
1664	[BUG]  [BUGGY]  if(X  ==  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X  ==  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X  ==  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	132	None	replace
1665	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	132	None	replace
1666	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  else  if(c!=  'n'  ||  c  ==  '-')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '-')  {  else  if(c!=  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '-')    {    else  if(c!=  'n'  ||  c  ==  '-')  {	  	non-compiled	[CE]  'else'  without  'if'	81	None	add
1667	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  {  'n'  ||  c  ==  'f')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  {  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  {  'n'  ||  c  ==  'f')  {	  	non-compiled	[CE]  ')'  expected	108	None	add
1668	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c  >=  'f')  {	  }    else    if(c!=    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	72	2	replace
1669	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c  >=  'f')  {	  }    else    if(c!=    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	72	2	replace
1670	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c  ==  't')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }    else    if(c!=    'n'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	14	2	replace
1671	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c  ==  't')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }    else    if(c!=    'n'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	14	2	replace
1672	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	134	None	replace
1673	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  '.')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	134	None	replace
1674	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  else  if(c  ==  'n'  ||  c!=  'f')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'f')  {  else  if(c  ==  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    'f')    {    else  if(c  ==  'n'  ||  c!=  'f')  {	  	non-compiled	[CE]  'else'  without  'if'	75	None	add
1675	[BUG]  [BUGGY]  if(id  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	23	None	replace
1676	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  {  'n'  ||  c  ==  ':')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  {  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  {  'n'  ||  c  ==  ':')  {	  	non-compiled	[CE]  ')'  expected	9	None	add
1677	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	9	2	add
1678	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	9	2	add
1679	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ';')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ';')  {	  	compilable	  [FE]  AssertionFailedError  	9	2	add
1680	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ';')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ';')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ';')  {	  	compilable	  [FE]  AssertionFailedError  	9	2	add
1681	[BUG]  [BUGGY]  if(X  ==  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X  ==  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X  ==  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	129	None	replace
1682	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  else  if(c  ==  '-'  ||  c  ==  'n')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  'n')  {  else  if(c  ==  '-'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-'    ||    c    ==    'n')    {    else  if(c  ==  '-'  ||  c  ==  'n')  {	  	non-compiled	[CE]  'else'  without  'if'	83	None	add
1683	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  >>  'n'  ||  c  ==  '*')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  >>  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    >=    'n'    ||    c    ==    '*')    {    }  else  if(c  >>  'n'  ||  c  ==  '*')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	53	None	add
1684	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    >=    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	53	2	add
1685	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'n'  ||  c!=  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'n'  ||  c!=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    >=    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c!=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	53	2	add
1686	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'i'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    >=    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'i'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	53	2	add
1687	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'i'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'n'  ||  c  ==  '*')  {  }  else  if(c  >=  'i'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    >=    'n'    ||    c    ==    '*')    {    }  else  if(c  >=  'i'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	53	2	add
1688	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  else  if(c!=  'n'  ||  c  ==  '+')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '+')  {  else  if(c!=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '+')    {    else  if(c!=  'n'  ||  c  ==  '+')  {	  	non-compiled	[CE]  'else'  without  'if'	189	None	add
1689	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	146	None	replace
1690	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  else  if(c  ==  '.'  ||  c  ==  '+')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '+')  {  else  if(c  ==  '.'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '+')    {    else  if(c  ==  '.'  ||  c  ==  '+')  {	  	non-compiled	[CE]  'else'  without  'if'	41	None	add
1691	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'N'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  >=  'N'  ||  c  ==  '*')  {	  }    else    if(c    ==    'N'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	141	2	replace
1692	[BUG]  [BUGGY]  }  else  if(c  >=  'N'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'N'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  >=  'N'  ||  c  ==  '*')  {	  }    else    if(c    ==    'N'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	141	2	replace
1693	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  {  'n'  ||  c  ==  ':')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  {  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  {  'n'  ||  c  ==  ':')  {	  	non-compiled	[CE]  ')'  expected	11	None	add
1694	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ';')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ';')  {	  	compilable	  [FE]  AssertionFailedError  	11	2	add
1695	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ';')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n'  ||  c  ==  ';')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ';')  {	  	compilable	  [FE]  AssertionFailedError  	11	2	add
1696	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  else  if(c  ==  'N'  ||  c  ==  '-')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '-')  {  else  if(c  ==  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '-')    {    else  if(c  ==  'N'  ||  c  ==  '-')  {	  	non-compiled	[CE]  'else'  without  'if'	79	None	add
1697	[BUG]  [BUGGY]  if(id  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	20	None	replace
1698	[BUG]  [BUGGY]  if(c  ==  'F')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'F')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'F')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	20	None	replace
1699	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    	non-compiled	[CE]  ';'  expected	209	None	replace
1700	[BUG]  [BUGGY]  if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    	non-compiled	[CE]  ';'  expected	209	None	replace
1701	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    	non-compiled	[CE]  orphaned  case	209	None	replace
1702	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(2)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(2)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	282	2	replace
1703	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(2)  ==  'o')  {  id=true;  break  complete;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(2)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(2)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	282	2	replace
1704	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  >>  'n'  ||  c  ==  '-')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  >>  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    >=    'n'    ||    c    ==    '-')    {    }  else  if(c  >>  'n'  ||  c  ==  '-')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	32	None	add
1705	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'n'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    >=    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	32	2	add
1706	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'n'  ||  c!=  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'n'  ||  c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    >=    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	32	2	add
1707	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'i'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    >=    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'i'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	32	2	add
1708	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'i'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'i'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    >=    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'i'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	32	2	add
1709	[BUG]  [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;	  	non-compiled	[CE]  orphaned  case	292	None	add
1710	[BUG]  [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete	  	non-compiled	[CE]  ';'  expected	292	None	add
1711	[BUG]  [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {	  	non-compiled	[CE]  orphaned  case	292	None	add
1712	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete    	non-compiled	[CE]  ';'  expected	257	None	replace
1713	[BUG]  [BUGGY]  if(X  ==  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X  ==  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X  ==  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete    	non-compiled	[CE]  ';'  expected	257	None	replace
1714	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	287	None	replace
1715	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	287	None	replace
1716	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	234	None	replace
1717	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	234	None	replace
1718	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	234	None	replace
1719	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	234	2	replace
1720	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	234	2	replace
1721	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  {  'n'  ||  c  ==  'a')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  {  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  {  'n'  ||  c  ==  'a')  {	  	non-compiled	[CE]  ')'  expected	89	None	add
1722	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
1723	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
1724	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  else  if(c  ==  'n'  ||  c!=  'a')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  'a')  {  else  if(c  ==  'n'  ||  c!=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    'a')    {    else  if(c  ==  'n'  ||  c!=  'a')  {	  	non-compiled	[CE]  'else'  without  'if'	5	None	add
1725	[BUG]  [BUGGY]  if(id  ==  false)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id  ==  false)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id  ==  false)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  if(X!=    null)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	229	None	replace
1726	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(2)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(2)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(2)  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	137	None	replace
1727	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	274	None	replace
1728	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c  >=  'a')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }    else    if(c    ==    'n'    ||    c    >=    'a')    {    	compilable	  [FE]  AssertionFailedError  	98	2	replace
1729	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c  >=  'a')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }    else    if(c    ==    'n'    ||    c    >=    'a')    {    	compilable	  [FE]  AssertionFailedError  	98	2	replace
1730	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  {  'n'  ||  c  ==  '*')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  {  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  {  'n'  ||  c  ==  '*')  {	  	non-compiled	[CE]  ')'  expected	47	None	add
1731	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'N'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
1732	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'N'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
1733	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
1734	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
1735	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'e')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    else    if(c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	275	2	replace
1736	[BUG]  [BUGGY]  }  else  if(c  ==  'e')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'e')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    else    if(c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	275	2	replace
1737	[BUG]  [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    else  if(c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {	  	non-compiled	[CE]  'else'  without  'if'	142	None	add
1738	[BUG]  [BUGGY]  if(id  ==  false)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id  ==  false)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id  ==  false)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	25	None	replace
1739	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;	  	non-compiled	[CE]  orphaned  case	128	None	add
1740	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete	  	non-compiled	[CE]  ';'  expected	128	None	add
1741	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(2)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(2)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	203	None	replace
1742	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  else  if(c  ==  '.'  ||  c  ==  '@')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '@')  {  else  if(c  ==  '.'  ||  c  ==  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    '@')    {    else  if(c  ==  '.'  ||  c  ==  '@')  {	  	non-compiled	[CE]  'else'  without  'if'	45	None	add
1743	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  {  'n'  ||  c  ==  '-')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  {  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  {  'n'  ||  c  ==  '-')  {	  	non-compiled	[CE]  ')'  expected	26	None	add
1744	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	26	2	add
1745	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	26	2	add
1746	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	206	None	replace
1747	[BUG]  [BUGGY]  if(id  ==  false)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id  ==  false)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id  ==  false)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	206	None	replace
1748	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	103	None	replace
1749	[BUG]  [BUGGY]  if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	103	None	replace
1750	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  >>  'n'  ||  c  ==  '*')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c  >>  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c  >>  'n'  ||  c  ==  '*')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	49	None	add
1751	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'i'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'i'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
1752	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'i'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'i'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'i'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
1753	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	186	2	replace
1754	[BUG]  [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	186	2	replace
1755	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ')')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  ')')  {	  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }    else    if(c    {    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	68	2	replace
1756	[BUG]  [BUGGY]  }  else  if(c  ==  ')')  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ')')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  ')')  {	  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }    else    if(c    {    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	68	2	replace
1757	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  >>  'n'  ||  c  ==  'e')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  >>  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    >=    'n'    ||    c    ==    'e')    {    }  else  if(c  >>  'n'  ||  c  ==  'e')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	220	None	add
1758	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    >=    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	220	2	add
1759	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'n'  ||  c!=  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'n'  ||  c!=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    >=    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c!=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	220	2	add
1760	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    >=    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'e'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	220	2	add
1761	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'e'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'n'  ||  c  ==  'e')  {  }  else  if(c  >=  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    >=    'n'    ||    c    ==    'e')    {    }  else  if(c  >=  'e'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	220	2	add
1762	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  else  if(c  ==  '.'  ||  c  ==  ',')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ',')  {  else  if(c  ==  '.'  ||  c  ==  ',')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    ',')    {    else  if(c  ==  '.'  ||  c  ==  ',')  {	  	non-compiled	[CE]  'else'  without  'if'	285	None	add
1763	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  {  'n'  ||  c  ==  'A')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  {  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  {  'n'  ||  c  ==  'A')  {	  	non-compiled	[CE]  ')'  expected	173	None	add
1764	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	173	2	add
1765	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	173	2	add
1766	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  else  if(c!=  'n'  ||  c  ==  '*')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  '*')  {  else  if(c!=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    '*')    {    else  if(c!=  'n'  ||  c  ==  '*')  {	  	non-compiled	[CE]  'else'  without  'if'	144	None	add
1767	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {	  	non-compiled	[CE]  'else'  without  'if'	193	None	add
1768	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	268	None	replace
1769	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	268	None	replace
1770	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	268	None	replace
1771	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  else  if(c  ==  'N'  ||  c  ==  'e')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  else  if(c  ==  'N'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'e')    {    else  if(c  ==  'N'  ||  c  ==  'e')  {	  	non-compiled	[CE]  'else'  without  'if'	199	None	add
1772	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'f')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	171	None	add
1773	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'f')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	171	None	add
1774	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	266	None	replace
1775	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r')  {  if(s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r')  {  if(s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r')  {  if(s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	266	None	replace
1776	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	266	None	replace
1777	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	266	None	replace
1778	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  else  if(c  ==  '.'  ||  c  ==  ':')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  ':')  {  else  if(c  ==  '.'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '.'    ||    c    ==    ':')    {    else  if(c  ==  '.'  ||  c  ==  ':')  {	  	non-compiled	[CE]  'else'  without  'if'	43	None	add
1779	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    >=    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	55	2	add
1780	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c!=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    >=    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	55	2	add
1781	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	235	None	replace
1782	[BUG]  [BUGGY]  if(id  ==  false)  {  if(s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id  ==  false)  {  if(s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id  ==  false)  {  if(s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	235	None	replace
1783	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	291	None	replace
1784	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	291	None	replace
1785	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ','  ||  c  ==  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  ','  ||  c  ==  '@')  {	  }    else    if(c    ==    '.'    ||    c    ==    '@')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1786	[BUG]  [BUGGY]  }  else  if(c  ==  ','  ||  c  ==  '@')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ','  ||  c  ==  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  ','  ||  c  ==  '@')  {	  }    else    if(c    ==    '.'    ||    c    ==    '@')    {    	compilable	  [FE]  AssertionFailedError  	46	2	replace
1787	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    	non-compiled	[CE]  ';'  expected	256	None	replace
1788	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'A')    {    else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'A')  {	  	non-compiled	[CE]  'else'  without  'if'	163	None	add
1789	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;	  	non-compiled	[CE]  orphaned  case	100	None	add
1790	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	100	None	add
1791	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':'  ||  c  ==  '/')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  ':'  ||  c  ==  '/')  {	  }    else    if(c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	303	2	replace
1792	[BUG]  [BUGGY]  }  else  if(c  ==  ':'  ||  c  ==  '/')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':'  ||  c  ==  '/')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  ':'  ||  c  ==  '/')  {	  }    else    if(c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	303	2	replace
1793	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	107	None	replace
1794	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	107	None	replace
1795	[BUG]  [BUGGY]  if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	107	None	replace
1796	[BUG]  [BUGGY]  if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  orphaned  case	107	None	replace
1797	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	236	None	replace
1798	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r')  {  id=false;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	236	None	replace
1799	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  ';'  expected	236	None	replace
1800	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  else  if(c!=  'n'  ||  c  ==  'e')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'e')  {  else  if(c!=  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'e')    {    else  if(c!=  'n'  ||  c  ==  'e')  {	  	non-compiled	[CE]  'else'  without  'if'	197	None	add
1801	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;	  	non-compiled	[CE]  orphaned  case	125	None	add
1802	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete	  	non-compiled	[CE]  ';'  expected	125	None	add
1803	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {	  	non-compiled	[CE]  'else'  without  'if'	77	None	add
1804	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  >>  'n'  ||  c  ==  'a')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c  >>  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c  >>  'n'  ||  c  ==  'a')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	93	None	add
1805	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	93	2	add
1806	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	93	2	add
1807	[BUG]  [BUGGY]  }  else  if(c  ==  ':')  {  else  if(c  ==  ':')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':')  {  else  if(c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    ':')    {    else  if(c  ==  ':')  {	  	non-compiled	[CE]  'else'  without  'if'	302	None	add
1808	[BUG]  [BUGGY]  }  else  if(c  ==  ':')  {  if(c  ==  ':')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':')  {  if(c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    ':')    {    if(c  ==  ':')  {	  	non-compiled	[CE]  orphaned  case	302	None	add
1809	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	106	None	replace
1810	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  >>  'n'  ||  c  ==  'e')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c  >>  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c  >>  'n'  ||  c  ==  'e')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	218	None	add
1811	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  >=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  >=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
1812	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  >=  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n'  ||  c  >=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  >=  'e')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
1813	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  {  'n'  ||  c  ==  'a')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  {  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  {  'n'  ||  c  ==  'a')  {	  	non-compiled	[CE]  ')'  expected	97	None	add
1814	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
1815	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
1816	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'n'  ||  c  >=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
1817	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'n'  ||  c  >=  'a')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'n'  ||  c  >=  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
1818	[BUG]  [BUGGY]  if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete    	non-compiled	[CE]  ';'  expected	210	None	replace
1819	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete	  	non-compiled	[CE]  ';'  expected	37	None	add
1820	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c  >>  '.')  {  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c  >>  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c!=    '.')    {    }  else  if(c  >>  '.')  {	  	non-compiled	[CE]  incompatible  types	156	None	add
1821	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c!=    '.')    {    }  else  if(c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	156	2	add
1822	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c!=  '-')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c!=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c!=    '.')    {    }  else  if(c!=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	156	2	add
1823	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c!=  '!')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c!=    '.')    {    }  else  if(c!=  '!')  {	  	compilable	  [FE]  AssertionFailedError  	156	2	add
1824	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c!=  '!')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c!=  '!')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c!=    '.')    {    }  else  if(c!=  '!')  {	  	compilable	  [FE]  AssertionFailedError  	156	2	add
1825	[BUG]  [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  else  if(c  ==  'a'  ||  c  ==  'n')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  else  if(c  ==  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'a'    ||    c    ==    'n')    {    else  if(c  ==  'a'  ||  c  ==  'n')  {	  	non-compiled	[CE]  'else'  without  'if'	250	None	add
1826	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  }  else  if(c  ==  'A'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    'a'    ||    c    ==    'n')    {    }  else  if(c  ==  'A'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
1827	[BUG]  [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  }  else  if(c  ==  'A'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  }  else  if(c  ==  'A'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'a'    ||    c    ==    'n')    {    }  else  if(c  ==  'A'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	250	2	add
1828	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete	  	non-compiled	[CE]  ';'  expected	207	None	add
1829	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break	  	non-compiled	[CE]  ';'  expected	207	None	add
1830	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;	  	non-compiled	[CE]  orphaned  case	207	None	add
1831	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	207	None	add
1832	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
1833	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
1834	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
1835	[BUG]  [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	273	2	replace
1836	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;	  	non-compiled	[CE]  orphaned  case	130	None	add
1837	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete	  	non-compiled	[CE]  ';'  expected	130	None	add
1838	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'd'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	138	None	replace
1839	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'd'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	138	None	replace
1840	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c  >=  '-')  {	  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }    else    if(c    ==    'n'    ||    c    >=    '-')    {    	compilable	  [FE]  AssertionFailedError  	35	2	replace
1841	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  >=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c  >=  '-')  {	  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }    else    if(c    ==    'n'    ||    c    >=    '-')    {    	compilable	  [FE]  AssertionFailedError  	35	2	replace
1842	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete	  	non-compiled	[CE]  ';'  expected	211	None	add
1843	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;	  	non-compiled	[CE]  orphaned  case	211	None	add
1844	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '*')    {    else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '*')  {	  	non-compiled	[CE]  'else'  without  'if'	272	None	add
1845	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
1846	[BUG]  [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'F'  ||  c  ==  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
1847	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
1848	[BUG]  [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  >=  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
1849	[BUG]  [BUGGY]  if(id  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	201	None	replace
1850	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c  >=  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    >=    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	114	2	add
1851	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c  >=  'n'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c  >=  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    >=    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c!=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	114	2	add
1852	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c  >=  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    >=    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	114	2	add
1853	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c  >=  'f'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'n'  ||  c  ==  'f')  {  }  else  if(c  >=  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    >=    'n'    ||    c    ==    'f')    {    }  else  if(c  >=  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	114	2	add
1854	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	38	None	replace
1855	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  else  if(c  ==  'N'  ||  c  ==  'f')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  else  if(c  ==  'N'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'f')    {    else  if(c  ==  'N'  ||  c  ==  'f')  {	  	non-compiled	[CE]  'else'  without  'if'	73	None	add
1856	[BUG]  [BUGGY]          if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;	  	non-compiled	[CE]  orphaned  case	290	None	add
1857	[BUG]  [BUGGY]          if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {	  	non-compiled	[CE]  orphaned  case	290	None	add
1858	[BUG]  [BUGGY]          if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete	  	non-compiled	[CE]  ';'  expected	290	None	add
1859	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  {  'n'  ||  c  ==  '+')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  {  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  {  'n'  ||  c  ==  '+')  {	  	non-compiled	[CE]  ')'  expected	62	None	add
1860	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	62	2	add
1861	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	62	2	add
1862	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'f'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	62	2	add
1863	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'f'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'f'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	62	2	add
1864	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'n')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	299	2	replace
1865	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'n')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	299	2	replace
1866	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  't')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    else    if(c    ==    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	227	2	replace
1867	[BUG]  [BUGGY]  }  else  if(c  ==  't')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  't')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    else    if(c    ==    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	227	2	replace
1868	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'N'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  >=  'N'  ||  c  ==  '+')  {	  }    else    if(c    ==    'N'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	188	2	replace
1869	[BUG]  [BUGGY]  }  else  if(c  >=  'N'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  >=  'N'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  >=  'N'  ||  c  ==  '+')  {	  }    else    if(c    ==    'N'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	188	2	replace
1870	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  {  'n'  ||  c  ==  'e')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  {  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c!=    'e')    {    }  else  if(c  {  'n'  ||  c  ==  'e')  {	  	non-compiled	[CE]  ')'  expected	216	None	add
1871	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c!=    'e')    {    }  else  if(c  ==  'f'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
1872	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'f'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c!=    'e')    {    }  else  if(c  ==  'f'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
1873	[BUG]  [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	225	None	add
1874	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
1875	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
1876	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  =='s')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  =='s')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
1877	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  =='s')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  =='s')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  =='s')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
1878	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '!')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  ==  '!')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
1879	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '!')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  '!')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  ==  '!')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
1880	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  else  if(c  ==  '-'  ||  c  ==  '+')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  else  if(c  ==  '-'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-'    ||    c    ==    '+')    {    else  if(c  ==  '-'  ||  c  ==  '+')  {	  	non-compiled	[CE]  'else'  without  'if'	300	None	add
1881	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  else  if(c  ==  'N'  ||  c  ==  'A')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'A')  {  else  if(c  ==  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'A')    {    else  if(c  ==  'N'  ||  c  ==  'A')  {	  	non-compiled	[CE]  'else'  without  'if'	167	None	add
1882	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  >>  'n'  ||  c  ==  '+')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c  >>  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c  >>  'n'  ||  c  ==  '+')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	60	None	add
1883	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'i'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'i'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	60	2	add
1884	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'i'  ||  c  ==  'r')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'i'  ||  c  ==  'r')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'i'  ||  c  ==  'r')  {	  	compilable	  [FE]  AssertionFailedError  	60	2	add
1885	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	228	None	replace
1886	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	228	None	replace
1887	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r')  {  &&  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r')  {  &&  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r')  {  &&  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	228	None	replace
1888	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r')  {  &&  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r')  {  &&  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r')  {  &&  s.charAt(  1)  ==  'f')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  illegal  start  of  expression	228	None	replace
1889	[BUG]  [BUGGY]  if(id  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	149	None	replace
1890	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r')  {  if(s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  }  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r')  {  if(s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r')  {  if(s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  }	  if(X!=    null)    {    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	261	None	replace
1891	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  if(X!=    null)    {    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	261	None	replace
1892	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete    	non-compiled	[CE]  ';'  expected	254	None	replace
1893	[BUG]  [BUGGY]  if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X  ==  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete    	non-compiled	[CE]  ';'  expected	254	None	replace
1894	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	283	None	replace
1895	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  else  if(c  ==  'e'  ||  c  ==  'n')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  else  if(c  ==  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'e'    ||    c    ==    'n')    {    else  if(c  ==  'e'  ||  c  ==  'n')  {	  	non-compiled	[CE]  'else'  without  'if'	195	None	add
1896	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  if(c  ==  'e'  ||  c  ==  'n')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n')  {  if(c  ==  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'e'    ||    c    ==    'n')    {    if(c  ==  'e'  ||  c  ==  'n')  {	  	non-compiled	[CE]  orphaned  case	195	None	add
1897	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	88	None	replace
1898	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break	  	non-compiled	[CE]  ';'  expected	169	None	add
1899	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete	  	non-compiled	[CE]  ';'  expected	169	None	add
1900	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;	  	non-compiled	[CE]  orphaned  case	169	None	add
1901	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	297	None	replace
1902	[BUG]  [BUGGY]  if(id  ==  false)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id  ==  false)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id  ==  false)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	297	None	replace
1903	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	297	None	replace
1904	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  >>  'n'  ||  c  ==  '+')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  >>  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    >=    'n'    ||    c    ==    '+')    {    }  else  if(c  >>  'n'  ||  c  ==  '+')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	64	None	add
1905	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    >=    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	64	2	add
1906	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'n'  ||  c!=  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'n'  ||  c!=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    >=    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c!=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	64	2	add
1907	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'i'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    >=    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'i'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	64	2	add
1908	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'i'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'i'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    >=    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'i'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	64	2	add
1909	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  else  if(c!=  'n'  ||  c  ==  'f')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  'f')  {  else  if(c!=  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    'f')    {    else  if(c!=  'n'  ||  c  ==  'f')  {	  	non-compiled	[CE]  'else'  without  'if'	71	None	add
1910	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	296	None	replace
1911	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	204	None	replace
1912	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  else  if(c  ==  'e'  ||  c  ==  'E')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'E')  {  else  if(c  ==  'e'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'e'    ||    c    ==    'E')    {    else  if(c  ==  'e'  ||  c  ==  'E')  {	  	non-compiled	[CE]  'else'  without  'if'	230	None	add
1913	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	284	None	replace
1914	[BUG]  [BUGGY]  Context.checkState(c  ==  'd'  ||  c  ==  'n')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'd'  ||  c  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'd'  ||  c  ==  'n')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'd'    ||    c    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	139	None	replace
1915	[BUG]  [BUGGY]  Context.checkState(id  ==  'n'  ||  c  ==  'd'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(id  ==  'n'  ||  c  ==  'd'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(id  ==  'n'  ||  c  ==  'd'  ||  c  ==  'o')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'd'    ||    c    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	139	None	replace
1916	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  {  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  {  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  {  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {	  	non-compiled	[CE]  ')'  expected	185	None	add
1917	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [CE]  'else'  without  'if'  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {	  	non-compiled	[CE]  'else'  without  'if'	185	None	add
1918	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  {  'n'  ||  c  ==  '+')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  {  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  {  'n'  ||  c  ==  '+')  {	  	non-compiled	[CE]  ')'  expected	58	None	add
1919	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	58	2	add
1920	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	58	2	add
1921	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'a')    {    else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'a')  {	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
1922	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'd')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'd')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	241	None	replace
1923	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	241	None	replace
1924	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	241	None	replace
1925	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	270	None	replace
1926	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'e'  ||  c  ==  'E')  {	  }    else    if(c    ==    'e'    ||    c    ==    'E')    {    	compilable	  [FE]  AssertionFailedError  	231	2	replace
1927	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e'  ||  c  ==  'E')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e'  ||  c  ==  'E')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'e'  ||  c  ==  'E')  {	  }    else    if(c    ==    'e'    ||    c    ==    'E')    {    	compilable	  [FE]  AssertionFailedError  	231	2	replace
1928	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'E'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'E'  ||  c  ==  'e')  {	  }    else    if(c    ==    'e'    ||    c    ==    'E')    {    	compilable	  [FE]  AssertionFailedError  	231	2	replace
1929	[BUG]  [BUGGY]  }  else  if(c  ==  'E'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'E'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'E'  ||  c  ==  'e')  {	  }    else    if(c    ==    'e'    ||    c    ==    'E')    {    	compilable	  [FE]  AssertionFailedError  	231	2	replace
1930	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete	  	non-compiled	[CE]  ';'  expected	278	None	add
1931	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  	non-compiled	[CE]  orphaned  case	278	None	add
1932	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  >=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c    >=    '.')    {    }  else  if(c  >=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	158	2	add
1933	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  >=  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  >=  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c    >=    '.')    {    }  else  if(c  >=  '-')  {	  	compilable	  [FE]  AssertionFailedError  	158	2	add
1934	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  >=  '!')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c    >=    '.')    {    }  else  if(c  >=  '!')  {	  	compilable	  [FE]  AssertionFailedError  	158	2	add
1935	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  >=  '!')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  >=  '!')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c    >=    '.')    {    }  else  if(c  >=  '!')  {	  	compilable	  [FE]  AssertionFailedError  	158	2	add
1936	[BUG]  [BUGGY]  if(id  ==  false)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id  ==  false)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id  ==  false)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  if(X!=    null)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	237	None	replace
1937	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	148	None	replace
1938	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  >>  'n'  ||  c  ==  'A')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  >>  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    >=    'n'    ||    c    ==    'A')    {    }  else  if(c  >>  'n'  ||  c  ==  'A')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	179	None	add
1939	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'n'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    >=    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c!=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	179	2	add
1940	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'n'  ||  c!=  'A')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'n'  ||  c!=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    >=    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c!=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	179	2	add
1941	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    >=    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	179	2	add
1942	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    >=    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	179	2	add
1943	[BUG]  [BUGGY]  if(id  ==  false)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id  ==  false)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id  ==  false)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    	non-compiled	[CE]  orphaned  case	252	None	replace
1944	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	277	None	replace
1945	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  else  if(c  ==  '-')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  else  if(c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-')    {    else  if(c  ==  '-')  {	  	non-compiled	[CE]  'else'  without  'if'	239	None	add
1946	[BUG]  [BUGGY]  }  else  if(c  ==  '-')  {  if(c  ==  '-')  {  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-')  {  if(c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-')    {    if(c  ==  '-')  {	  	non-compiled	[CE]  orphaned  case	239	None	add
1947	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	135	None	replace
1948	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	85	None	replace
1949	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	85	None	replace
1950	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  if(!id)    {    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	263	None	replace
1951	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  }	  if(!id)    {    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	263	None	replace
1952	[BUG]  [BUGGY]  if(id)  {  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r')  {  &&  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r')  {  &&  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r')  {  &&  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  }	  if(!id)    {    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  illegal  start  of  expression	263	None	replace
1953	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ','  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  ','  ||  c  ==  ':')  {	  }    else    if(c    ==    '.'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	44	2	replace
1954	[BUG]  [BUGGY]  }  else  if(c  ==  ','  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ','  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  ','  ||  c  ==  ':')  {	  }    else    if(c    ==    '.'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	44	2	replace
1955	[BUG]  [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  {  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  {  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  {  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {	  	non-compiled	[CE]  ')'  expected	288	None	add
1956	[BUG]  [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [CE]  'else'  without  'if'  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    else  if(c  ==  'u'  ||  c  ==  'n'  ||  c  ==  'e')  {	  	non-compiled	[CE]  'else'  without  'if'	288	None	add
1957	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  else  if(c  ==  'N'  ||  c  ==  '*')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  else  if(c  ==  'N'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    '*')    {    else  if(c  ==  'N'  ||  c  ==  '*')  {	  	non-compiled	[CE]  'else'  without  'if'	140	None	add
1958	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '+'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '+'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
1959	[BUG]  [BUGGY]  }  else  if(c  ==  '+'  ||  c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '+'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '+'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
1960	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  >>  'n'  ||  c  ==  ':')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c  >>  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c  >>  'n'  ||  c  ==  ':')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	13	None	add
1961	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ';')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ';')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
1962	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ';')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  ==  ';')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ';')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
1963	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  >>  'n'  ||  c  ==  'f')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c  >>  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c  >>  'n'  ||  c  ==  'f')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	112	None	add
1964	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	112	2	add
1965	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'f'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'f'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	112	2	add
1966	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  else  if(c  ==  'f'  ||  c  ==  'n')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n')  {  else  if(c  ==  'f'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'f'    ||    c    ==    'n')    {    else  if(c  ==  'f'  ||  c  ==  'n')  {	  	non-compiled	[CE]  'else'  without  'if'	69	None	add
1967	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    >=    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	181	2	add
1968	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    >=    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	181	2	add
1969	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  {  'n'  ||  c  ==  'A')  {  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  {  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    >=    'A')    {    }  else  if(c  {  'n'  ||  c  ==  'A')  {	  	non-compiled	[CE]  ')'  expected	181	None	add
1970	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  >>  'n'  ||  c  ==  ':')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  >>  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    >=    'n'    ||    c    ==    ':')    {    }  else  if(c  >>  'n'  ||  c  ==  ':')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	15	None	add
1971	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    >=    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
1972	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'n'  ||  c!=  ':')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    >=    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c!=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
1973	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'i'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    >=    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'i'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
1974	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'i'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'i'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    >=    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'i'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
1975	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete	  	non-compiled	[CE]  ';'  expected	281	None	add
1976	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break	  	non-compiled	[CE]  ';'  expected	281	None	add
1977	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  {  'n'  ||  c  ==  'f')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  {  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  {  'n'  ||  c  ==  'f')  {	  	non-compiled	[CE]  ')'  expected	110	None	add
1978	[BUG]  [BUGGY]  if(X!=  null)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(X!=  null)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(X!=  null)  {  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	87	None	replace
1979	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  {  'n'  ||  c  ==  ':')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  {  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    >=    ':')    {    }  else  if(c  {  'n'  ||  c  ==  ':')  {	  	non-compiled	[CE]  ')'  expected	17	None	add
1980	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    >=    ':')    {    }  else  if(c  ==  'N'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
1981	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    >=    ':')    {    }  else  if(c  ==  'N'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
1982	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'i')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'i')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'i')  {  id=true;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	262	None	replace
1983	[BUG]  [BUGGY]  if(!id)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(!id)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(!id)  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	262	None	replace
1984	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	262	None	replace
1985	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'i')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'i')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'i')  {  id=true;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	262	None	replace
1986	[BUG]  [BUGGY]  if(c  ==  '+')  {  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '+')  {  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '+')  {  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }	          if(c    ==    '+')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	242	None	replace
1987	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  >>  'n'  ||  c  ==  'A')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c  >>  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c  >>  'n'  ||  c  ==  'A')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	177	None	add
1988	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	177	2	add
1989	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {	  	compilable	  [FE]  AssertionFailedError  	177	2	add
1990	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c    ==    'a'    ||    c    ==    'f')    {    else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  'f')  {	  	non-compiled	[CE]  'else'  without  'if'	298	None	add
1991	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'e'  ||  c  ==  'n')  {	  }    else    if(c    ==    'e'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	196	2	replace
1992	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'e'  ||  c  ==  'n')  {	  }    else    if(c    ==    'e'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	196	2	replace
1993	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'N')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'e'  ||  c  ==  'N')  {	  }    else    if(c    ==    'e'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	196	2	replace
1994	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'N')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'N')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'e'  ||  c  ==  'N')  {	  }    else    if(c    ==    'e'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	196	2	replace
1995	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  {  'n'  ||  c  ==  'f')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  {  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    >=    'f')    {    }  else  if(c  {  'n'  ||  c  ==  'f')  {	  	non-compiled	[CE]  ')'  expected	116	None	add
1996	[BUG]  [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  else  if(c!=  'n'  ||  c  ==  ':')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  ||  c  ==  ':')  {  else  if(c!=  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c!=    'n'    ||    c    ==    ':')    {    else  if(c!=  'n'  ||  c  ==  ':')  {	  	non-compiled	[CE]  'else'  without  'if'	121	None	add
1997	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  else  if(c  ==  'n'  ||  c!=  ':')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c!=  ':')  {  else  if(c  ==  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'n'    ||    c!=    ':')    {    else  if(c  ==  'n'  ||  c!=  ':')  {	  	non-compiled	[CE]  'else'  without  'if'	123	None	add
1998	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  else  if(c  ==  'N'  ||  c  ==  ':')  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  ':')  {  else  if(c  ==  'N'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    ':')    {    else  if(c  ==  'N'  ||  c  ==  ':')  {	  	non-compiled	[CE]  'else'  without  'if'	119	None	add
1999	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  }  else  if(c  ==  'N'  ||  c  {  'e')  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  }  else  if(c  ==  'N'  ||  c  {  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    'N'    ||    c    ==    'e')    {    }  else  if(c  ==  'N'  ||  c  {  'e')  {	  	non-compiled	[CE]  ')'  expected	199	None	add
2000	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'y')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'y')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'y')  {  id=true;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	262	None	replace
2001	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	208	2	replace
2002	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	208	2	replace
2003	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'A'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'A'  ||  c  ==  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }    else    if(c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	184	2	replace
2004	[BUG]  [BUGGY]  }  else  if(c  ==  'A'  ||  c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'A'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'A'  ||  c  ==  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }    else    if(c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	184	2	replace
2005	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'a'  ||  c  ==  'n'  ||  c  ==  'A')  {	  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }    else    if(c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	184	2	replace
2006	[BUG]  [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'a'  ||  c  ==  'n'  ||  c  ==  'A')  {	  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }    else    if(c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	184	2	replace
2007	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=true;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	149	2	replace
2008	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=true;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	149	2	replace
2009	[BUG]  [BUGGY]  nisipTo(c)  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  nisipTo(c)  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	nisipTo(c)  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  not  a  statement	149	None	replace
2010	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'n'  &&  c  ==  'a')  {	  }    else    if(c!=    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
2011	[BUG]  [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'n'  &&  c  ==  'a')  {	  }    else    if(c!=    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
2012	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	297	None	replace
2013	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	206	None	replace
2014	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	206	2	replace
2015	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'h')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	206	2	replace
2016	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c!=    '*')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
2017	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c!=  '*')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c!=    '*')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	51	2	add
2018	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  >=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  >=  ':')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }    else    if(c    ==    'n'    ||    c    >=    ':')    {    	compilable	  [FE]  AssertionFailedError  	18	2	replace
2019	[BUG]  [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  >=  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  >=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  >=  ':')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }    else    if(c    ==    'n'    ||    c    >=    ':')    {    	compilable	  [FE]  AssertionFailedError  	18	2	replace
2020	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  ':')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }    else    if(c    ==    'n'    ||    c    >=    ':')    {    	compilable	  [FE]  AssertionFailedError  	18	2	replace
2021	[BUG]  [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  ':')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }    else    if(c    ==    'n'    ||    c    >=    ':')    {    	compilable	  [FE]  AssertionFailedError  	18	2	replace
2022	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  0)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'f')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  0)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	171	2	add
2023	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  0)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  0)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'f')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  0)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	171	2	add
2024	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  ||  c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
2025	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  ||  c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
2026	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '['  ||  c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '['  ||  c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
2027	[BUG]  [BUGGY]  }  else  if(c  ==  '['  ||  c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '['  ||  c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '['  ||  c  ==  '#'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
2028	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '@'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '@'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
2029	[BUG]  [BUGGY]  }  else  if(c  ==  '@'  ||  c  ==  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '@'  ||  c  ==  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '@'  ||  c  ==  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    '#'    ||    c    ==    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	143	2	replace
2030	[BUG]  [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  <=  id;  break  complete;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  <=  id;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'f')  <=  id;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  not  a  statement	136	None	replace
2031	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	11	2	add
2032	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	11	2	add
2033	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	11	2	add
2034	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c!=  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c!=    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	11	2	add
2035	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'a'  ||  c  ==  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }    else    if(c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	90	2	replace
2036	[BUG]  [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n'  ||  c  ==  'a')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'a'  ||  c  ==  'n'  ||  c  ==  'a')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'a'  ||  c  ==  'n'  ||  c  ==  'a')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }    else    if(c    ==    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	90	2	replace
2037	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n'  ||  c  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	276	2	replace
2038	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [FE]  AssertionFailedError  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'd'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	276	2	replace
2039	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  0)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  0)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  0)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(0)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	276	None	replace
2040	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	173	2	add
2041	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'A')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	173	2	add
2042	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  }  else  if(c  ==  '+'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}    else    if(c    ==    '-'    ||    c    ==    '+')    {    }  else  if(c  ==  '+'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	300	2	add
2043	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  }  else  if(c  ==  '+'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '+')  {  }  else  if(c  ==  '+'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    '-'    ||    c    ==    '+')    {    }  else  if(c  ==  '+'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	300	2	add
2044	[BUG]  [BUGGY]  if(c  ==  'd')  {  if(s.charAt(2)  ==  'o'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'd')  {  if(s.charAt(2)  ==  'o'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'd')  {  if(s.charAt(2)  ==  'o'  ||  s.charAt(1)  ==  'n')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'd'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	138	None	replace
2045	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'd')    {    id=true;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	146	2	replace
2046	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'd')    {    id=true;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	146	2	replace
2047	[BUG]  [BUGGY]  nisipTo(c)  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  nisipTo(c)  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	nisipTo(c)  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'd')    {    id=true;    break    complete;    }    	non-compiled	[CE]  not  a  statement	146	None	replace
2048	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '+'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '+'  ||  c  ==  '+')  {	  }    else    if(c    ==    'e'    ||    c    ==    'E')    {    	compilable	  [FE]  AssertionFailedError  	231	2	replace
2049	[BUG]  [BUGGY]  }  else  if(c  ==  '+'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '+'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '+'  ||  c  ==  '+')  {	  }    else    if(c    ==    'e'    ||    c    ==    'E')    {    	compilable	  [FE]  AssertionFailedError  	231	2	replace
2050	[BUG]  [BUGGY]  Context.checkState(c  ==  'd'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'd'  ||  c  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'd'  ||  c  ==  'o')  {  id=false;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'd'    ||    c    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	139	None	replace
2051	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete    	non-compiled	[CE]  orphaned  case	257	None	replace
2052	[BUG]  [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'e')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete    	non-compiled	[CE]  orphaned  case	257	None	replace
2053	[BUG]  [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  ';')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete    	non-compiled	[CE]  ';'  expected	257	None	replace
2054	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	9	2	add
2055	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'n'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'n'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  'n'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	9	2	add
2056	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	9	2	add
2057	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  ==  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	9	2	add
2058	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	207	2	add
2059	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	207	2	add
2060	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	207	2	add
2061	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	207	2	add
2062	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    >=    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
2063	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n'  ||  c  ==  ':')  {  }  else  if(c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    >=    'n'    ||    c    ==    ':')    {    }  else  if(c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	15	2	add
2064	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	105	2	replace
2065	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	105	2	replace
2066	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c!=    '.')    {    }  else  if(c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	156	2	add
2067	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c!=  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c!=  '.')  {  }  else  if(c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c!=    '.')    {    }  else  if(c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	156	2	add
2068	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c!=    'A')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	175	2	add
2069	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c!=  'A')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c!=    'A')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	175	2	add
2070	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':'  &&  s.charAt(2)  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  ':'  &&  s.charAt(2)  ==  '-')  {	  }    else    if(c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	303	2	replace
2071	[BUG]  [BUGGY]  }  else  if(c  ==  ':'  &&  s.charAt(2)  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':'  &&  s.charAt(2)  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  ':'  &&  s.charAt(2)  ==  '-')  {	  }    else    if(c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	303	2	replace
2072	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':'  &&!id)  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  ':'  &&!id)  {	  }    else    if(c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	303	2	replace
2073	[BUG]  [BUGGY]  }  else  if(c  ==  ':'  &&!id)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':'  &&!id)  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  ':'  &&!id)  {	  }    else    if(c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	303	2	replace
2074	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'e'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
2075	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'e'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'e'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
2076	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'N'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'N'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
2077	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'N'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'N'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'N'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
2078	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
2079	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n'  ||  c  ==  'e')  {  }  else  if(c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c!=    'n'    ||    c    ==    'e')    {    }  else  if(c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	218	2	add
2080	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  <=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  <=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	78	2	replace
2081	[BUG]  [BUGGY]  }  else  if(c  <=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  <=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  <=  'f'  ||  c  ==  'n'  ||  c  ==  '-')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	78	2	replace
2082	[BUG]  [BUGGY]  if(id  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	287	None	replace
2083	[BUG]  [BUGGY]  if(c  ==  'd')  {  if(s.charAt(2)  ==  'o'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'd')  {  if(s.charAt(2)  ==  'o'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'd')  {  if(s.charAt(2)  ==  'o'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(id    ==    false)    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	271	None	replace
2084	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c!=    'e')    {    }  else  if(c  ==  'N'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
2085	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c!=  'e')  {  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c!=    'e')    {    }  else  if(c  ==  'N'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	216	2	add
2086	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	211	2	add
2087	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=false;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	211	2	add
2088	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	148	2	replace
2089	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'd')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	148	2	replace
2090	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  if(s.charAt(2)  ==  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  if(s.charAt(2)  ==  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  else  if(c  ==  'f')  {  if(s.charAt(2)  ==  	  	non-compiled	[CE]  illegal  start  of  expression	125	None	add
2091	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'i')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'i')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'i')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	274	None	replace
2092	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	274	None	replace
2093	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	274	None	replace
2094	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'a')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'a')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'a')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	274	None	replace
2095	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'a'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  ==  'a'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
2096	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'a'  ||  c  >=  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'a'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  ==  'a'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
2097	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'a'  ||  c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  ==  'a'  ||  c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
2098	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'a'  ||  c  >=  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'a'  ||  c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  ==  'a'  ||  c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
2099	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'a'  ||  c  >=  'z')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  ==  'a'  ||  c  >=  'z')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
2100	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'a'  ||  c  >=  'z')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  >=  'a')  {  }  else  if(c  ==  'a'  ||  c  >=  'z')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    >=    'a')    {    }  else  if(c  ==  'a'  ||  c  >=  'z')  {	  	compilable	  [FE]  AssertionFailedError  	97	2	add
2101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  <=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  <=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	186	2	replace
2102	[BUG]  [BUGGY]  }  else  if(c  <=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  <=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  <=  'f'  ||  c  ==  'n'  ||  c  ==  '+')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	186	2	replace
2103	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(2)  ==  'o')id=false;  break  complete;  }  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(2)  ==  'o')id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(2)  ==  'o')id=false;  break  complete;  }	  if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  'else'  without  'if'	282	None	replace
2104	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '/')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '-'  ||  c  ==  '/')  {	  }    else    if(c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	240	2	replace
2105	[BUG]  [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '/')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '-'  ||  c  ==  '/')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '-'  ||  c  ==  '/')  {	  }    else    if(c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	240	2	replace
2106	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  ||  c  ==  '.')  {	  }    else    if(c    ==    '.')    {    }    else    if(c    >>    '.')    {    	compilable	  [FE]  AssertionFailedError  	161	2	replace
2107	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '.')  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '.')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  ||  c  ==  '.')  {	  }    else    if(c    ==    '.')    {    }    else    if(c    >>    '.')    {    	compilable	  [FE]  AssertionFailedError  	161	2	replace
2108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
2109	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
2110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
2111	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
2112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
2113	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	100	2	add
2114	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'f'  ||  c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    >=    'f')    {    }  else  if(c  ==  'f'  ||  c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	116	2	add
2115	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'f'  ||  c  >=  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'f'  ||  c  >=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    >=    'f')    {    }  else  if(c  ==  'f'  ||  c  >=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	116	2	add
2116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    >=    'f')    {    }  else  if(c  ==  'N'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	116	2	add
2117	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  >=  'f')  {  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    >=    'f')    {    }  else  if(c  ==  'N'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	116	2	add
2118	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  0)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  0)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	294	2	add
2119	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  0)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  0)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  &&  s.charAt(  0)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	294	2	add
2120	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'h')    {    id=true;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	204	2	replace
2121	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'h')    {    id=true;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	204	2	replace
2122	[BUG]  [BUGGY]  if(id  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	204	None	replace
2123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'N'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	214	2	add
2124	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  ==  'e')  {  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'N'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	214	2	add
2125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	102	2	add
2126	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	102	2	add
2127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	102	2	add
2128	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	102	2	add
2129	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	102	2	add
2130	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	102	2	add
2131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    >=    '*')    {    }  else  if(c  ==  'N'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	55	2	add
2132	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  >=  '*')  {  }  else  if(c  ==  'N'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    >=    '*')    {    }  else  if(c  ==  'N'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	55	2	add
2133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'N'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'N'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	112	2	add
2134	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'N'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'N'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'N'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	112	2	add
2135	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	112	2	add
2136	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	112	2	add
2137	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	112	2	add
2138	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  >=  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  ==  'f')  {  }  else  if(c!=  'n'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c!=    'n'    ||    c    ==    'f')    {    }  else  if(c!=  'n'  ||  c  >=  'f')  {	  	compilable	  [FE]  AssertionFailedError  	112	2	add
2139	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'a'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	183	2	add
2140	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'a'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	183	2	add
2141	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'a'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	183	2	add
2142	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'a'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	183	2	add
2143	[BUG]  [BUGGY]  if(id  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	296	None	replace
2144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    >=    ':')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
2145	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    >=    ':')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
2146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    >=    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
2147	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c  ==  'n'  ||  c  >=  ':')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c    ==    'n'    ||    c    >=    ':')    {    }  else  if(c  ==  'i'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	17	2	add
2148	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	126	2	replace
2149	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	126	2	replace
2150	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'N'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'N'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	60	2	add
2151	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'N'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'N'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'N'  ||  c  ==  '+')  {	  	compilable	  [FE]  AssertionFailedError  	60	2	add
2152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	60	2	add
2153	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	60	2	add
2154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	60	2	add
2155	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  >=  '+')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  ==  '+')  {  }  else  if(c!=  'n'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c!=    'n'    ||    c    ==    '+')    {    }  else  if(c!=  'n'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	60	2	add
2156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
2157	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n'  ||  c  ==  '*')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	47	2	add
2158	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	133	None	replace
2159	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  '.'  ||  c  ==  '*')  {	  }    else    if(c    ==    '.')    {    }    else    if(c    ==    '.')    {    	compilable	  [FE]  AssertionFailedError  	155	2	replace
2160	[BUG]  [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  '.'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  '.'  ||  c  ==  '*')  {	  }    else    if(c    ==    '.')    {    }    else    if(c    ==    '.')    {    	compilable	  [FE]  AssertionFailedError  	155	2	replace
2161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'i'  ||  c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	26	2	add
2162	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  'n'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  'n'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'i'  ||  c  ==  'n'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	26	2	add
2163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	26	2	add
2164	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	26	2	add
2165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'i'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	26	2	add
2166	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  ==  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'i'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	26	2	add
2167	[BUG]  [BUGGY]  if(id)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'h')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	268	None	replace
2168	[BUG]  [BUGGY]  }  else  if(c  ==  ':')  {  <  }  else  if(c  ==  ':')  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  ':')  {  <  }  else  if(c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}    else    if(c    ==    ':')    {    <  }  else  if(c  ==  ':')  {	  	non-compiled	[CE]  illegal  start  of  type	302	None	add
2169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n'  ||  c  >=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'e'  ||  c  ==  'n'  ||  c  >=  'e')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }    else    if(c    ==    'n'    ||    c    >=    'e')    {    	compilable	  [FE]  AssertionFailedError  	223	2	replace
2170	[BUG]  [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n'  ||  c  >=  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'e'  ||  c  ==  'n'  ||  c  >=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'e'  ||  c  ==  'n'  ||  c  >=  'e')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }    else    if(c    ==    'n'    ||    c    >=    'e')    {    	compilable	  [FE]  AssertionFailedError  	223	2	replace
2171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  >=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  >=  'e')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }    else    if(c    ==    'n'    ||    c    >=    'e')    {    	compilable	  [FE]  AssertionFailedError  	223	2	replace
2172	[BUG]  [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  >=  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  >=  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  >=  'e')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }    else    if(c    ==    'n'    ||    c    >=    'e')    {    	compilable	  [FE]  AssertionFailedError  	223	2	replace
2173	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    finish;    }    }    	non-compiled	[CE]  undefined  label:  finish	213	None	replace
2174	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    finish;    }    }    	non-compiled	[CE]  undefined  label:  finish	213	None	replace
2175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  >='s')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c    >=    '.')    {    }  else  if(c  >='s')  {	  	compilable	  [FE]  AssertionFailedError  	158	2	add
2176	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  >='s')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  >=  '.')  {  }  else  if(c  >='s')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c    >=    '.')    {    }  else  if(c  >='s')  {	  	compilable	  [FE]  AssertionFailedError  	158	2	add
2177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    >=    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'N'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	179	2	add
2178	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'N'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'n'  ||  c  ==  'A')  {  }  else  if(c  >=  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    >=    'n'    ||    c    ==    'A')    {    }  else  if(c  >=  'N'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	179	2	add
2179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  =='s')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    else    if(c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	275	2	replace
2180	[BUG]  [BUGGY]  }  else  if(c  =='s')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  =='s')  {	  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    else    if(c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	275	2	replace
2181	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'N'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	30	2	add
2182	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'N'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'N'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	30	2	add
2183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	30	2	add
2184	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n'  ||  c  ==  '-')  {  }  else  if(c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c!=    'n'    ||    c    ==    '-')    {    }  else  if(c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	30	2	add
2185	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	177	2	add
2186	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	177	2	add
2187	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'N'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	177	2	add
2188	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'N'  ||  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'N'  ||  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'N'  ||  c  ==  'A')  {	  	compilable	  [FE]  AssertionFailedError  	177	2	add
2189	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  >=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  >=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	177	2	add
2190	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  >=  'A')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  ==  'A')  {  }  else  if(c!=  'n'  ||  c  >=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c!=    'n'    ||    c    ==    'A')    {    }  else  if(c!=  'n'  ||  c  >=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	177	2	add
2191	[BUG]  [BUGGY]  if(c  ==  't')  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  't')  {  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  if(!id)    {    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	non-compiled	[CE]  orphaned  case	263	None	replace
2192	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(0)  ==  'd'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	88	None	replace
2193	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	103	2	replace
2194	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	103	2	replace
2195	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    >=    'e')    {    }  else  if(c  ==  'N'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	222	2	add
2196	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'e')    {    }  else  if(c  ==  'n'  ||  c  >=  'e')  {  }  else  if(c  ==  'N'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'e')        {        }    else    if(c    ==    'n'    ||    c    >=    'e')    {    }  else  if(c  ==  'N'  ||  c  ==  'e')  {	  	compilable	  [FE]  AssertionFailedError  	222	2	add
2197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  <=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  <=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	194	2	replace
2198	[BUG]  [BUGGY]  }  else  if(c  <=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  <=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  <=  'f'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'f'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	194	2	replace
2199	[BUG]  [BUGGY]  if(id)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	269	None	replace
2200	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'o')  {  id=true;  break  complete;  }	  if(X!=    null)    {    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ')'  expected	265	None	replace
2201	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'a'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
2202	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'a'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
2203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'a'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
2204	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'a'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
2205	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
2206	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
2207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'a'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
2208	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  't')  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  't')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'a'  ||  c  ==  't')  {	  	compilable	  [FE]  AssertionFailedError  	89	2	add
2209	[BUG]  [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')id=false;  break  complete;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  'o')id=false;  break  complete;  }	  Context.checkState(c    ==    'n'    ||    c    ==    'r'    ||    c    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ';'  expected	24	None	replace
2210	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'i')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'i')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'i')  {  id=true;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	247	None	replace
2211	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'a')  {  id=true;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	247	None	replace
2212	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	247	None	replace
2213	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'y')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'y')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'y')  {  id=true;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	247	None	replace
2214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	131	2	replace
2215	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	131	2	replace
2216	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'f')    {    id=true;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	135	2	replace
2217	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'f')    {    id=true;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	135	2	replace
2218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'f')id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'f')id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'f')    {    id=true;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	135	2	replace
2219	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'f')id=true;  break  complete;  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'f')id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(1)  ==  'f')id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'f')    {    id=true;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	135	2	replace
2220	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'K'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'K'  ||  c  ==  '-')  {	  }    else    if(c    ==    'N'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	80	2	replace
2221	[BUG]  [BUGGY]  }  else  if(c  ==  'K'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'K'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'K'  ||  c  ==  '-')  {	  }    else    if(c    ==    'N'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	80	2	replace
2222	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'a'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	91	2	add
2223	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'a'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	91	2	add
2224	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'a'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	91	2	add
2225	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'a'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	91	2	add
2226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'h')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'h')  {	  	compilable	  [FE]  AssertionFailedError  	91	2	add
2227	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'h')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c  ==  'n'  ||  c!=  'a')  {  }  else  if(c  ==  'n'  ||  c  ==  'h')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c    ==    'n'    ||    c!=    'a')    {    }  else  if(c  ==  'n'  ||  c  ==  'h')  {	  	compilable	  [FE]  AssertionFailedError  	91	2	add
2228	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    >=    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'N'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	32	2	add
2229	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'N'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'n'  ||  c  ==  '-')  {  }  else  if(c  >=  'N'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    >=    'n'    ||    c    ==    '-')    {    }  else  if(c  >=  'N'  ||  c  ==  '-')  {	  	compilable	  [FE]  AssertionFailedError  	32	2	add
2230	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c  ==  'a'  ||  c  ==  'e')  {	  }    else    if(c    ==    'N'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
2231	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c  ==  'a'  ||  c  ==  'e')  {	  }    else    if(c    ==    'N'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
2232	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c  ==  'a'  ||  c  ==  'n')  {	  }    else    if(c    ==    'N'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
2233	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c  ==  'a'  ||  c  ==  'n')  {	  }    else    if(c    ==    'N'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	8	2	replace
2234	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  '-')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }    else    if(c    {    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	99	2	replace
2235	[BUG]  [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'n'  ||  c  ==  'a'  ||  c  ==  '-')  {	  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }    else    if(c    {    'n'    ||    c    ==    'a')    {    	compilable	  [FE]  AssertionFailedError  	99	2	replace
2236	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  undefined  label:  finish	107	None	replace
2237	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'n'  &&  c  ==  ':')  {	  }    else    if(c!=    'n'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	122	2	replace
2238	[BUG]  [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'n'  &&  c  ==  ':')  {	  }    else    if(c!=    'n'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	122	2	replace
2239	[BUG]  [BUGGY]  nisipTo(c)  ==  'n')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  nisipTo(c)  ==  'n')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	nisipTo(c)  ==  'n')  {  if(s.charAt(  2)  ==  'd'  &&  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'd'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  not  a  statement	270	None	replace
2240	[BUG]  [BUGGY]  if(id)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(id)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(id)  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  if(!id)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	228	None	replace
2241	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'K'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'K'  ||  c  ==  ':')  {	  }    else    if(c    ==    'N'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	120	2	replace
2242	[BUG]  [BUGGY]  }  else  if(c  ==  'K'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'K'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'K'  ||  c  ==  ':')  {	  }    else    if(c    ==    'N'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	120	2	replace
2243	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'N'  ||  c  ==  '@')  {	  }    else    if(c    ==    'N'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	120	2	replace
2244	[BUG]  [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '@')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'N'  ||  c  ==  '@')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'N'  ||  c  ==  '@')  {	  }    else    if(c    ==    'N'    ||    c    ==    ':')    {    	compilable	  [FE]  AssertionFailedError  	120	2	replace
2245	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
2246	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
2247	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'N'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'N'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
2248	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'N'  ||  c  ==  ':')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'N'  ||  c  ==  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'N'  ||  c  ==  ':')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
2249	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  >=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  >=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
2250	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  >=  ':')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  ==  ':')  {  }  else  if(c!=  'n'  ||  c  >=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        ':')        {        }    else    if(c!=    'n'    ||    c    ==    ':')    {    }  else  if(c!=  'n'  ||  c  >=  ':')  {	  	compilable	  [FE]  AssertionFailedError  	13	2	add
2251	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'n'  &&  c  ==  'f')  {	  }    else    if(c!=    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	72	2	replace
2252	[BUG]  [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'n'  &&  c  ==  'f')  {	  }    else    if(c!=    'n'    ||    c    ==    'f')    {    	compilable	  [FE]  AssertionFailedError  	72	2	replace
2253	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	129	2	replace
2254	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	129	2	replace
2255	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	37	2	add
2256	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	37	2	add
2257	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c!=    '-')    {    }  else  if(c  ==  'i'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	28	2	add
2258	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c!=    '-')    {    }  else  if(c  ==  'i'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	28	2	add
2259	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c!=    '-')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	28	2	add
2260	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c!=  '-')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c!=    '-')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	28	2	add
2261	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(2)  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	235	None	replace
2262	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r')id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r')id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	235	2	replace
2263	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r')id=false;  break  complete;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r')id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r')id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	235	2	replace
2264	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'n'  ||  c  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	235	2	replace
2265	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  id=false;  break  complete;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n'  ||  c  ==  'r')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r')    {    id=false;    break    complete;    }    	compilable	  [FE]  AssertionFailedError  	235	2	replace
2266	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'n'  ||  c  >>  '+')  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  ==  '+')  {  }  else  if(c  >=  'n'  ||  c  >>  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    >=    'n'    ||    c    ==    '+')    {    }  else  if(c  >=  'n'  ||  c  >>  '+')  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	64	None	add
2267	[BUG]  [BUGGY]  nisipTo(c)  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  nisipTo(c)  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	nisipTo(c)  ==  '.')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    '.')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  not  a  statement	201	None	replace
2268	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	62	2	add
2269	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	62	2	add
2270	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'i'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	62	2	add
2271	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c!=  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c!=    '+')    {    }  else  if(c  ==  'i'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	62	2	add
2272	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'n'  &&  c  ==  'A')  {	  }    else    if(c!=    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	166	2	replace
2273	[BUG]  [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'n'  &&  c  ==  'A')  {	  }    else    if(c!=    'n'    ||    c    ==    'A')    {    	compilable	  [FE]  AssertionFailedError  	166	2	replace
2274	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  =='s'  ||  c  ==  'e'  ||  c  ==  'n')  {	  }    else    if(c    ==    'e'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	196	2	replace
2275	[BUG]  [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'e'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  =='s'  ||  c  ==  'e'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  =='s'  ||  c  ==  'e'  ||  c  ==  'n')  {	  }    else    if(c    ==    'e'    ||    c    ==    'n')    {    	compilable	  [FE]  AssertionFailedError  	196	2	replace
2276	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	93	2	add
2277	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	93	2	add
2278	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'a'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	93	2	add
2279	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'a'  ||  c  ==  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'a'  ||  c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'a'  ||  c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	93	2	add
2280	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'a'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	93	2	add
2281	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'a'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'n'  ||  c  ==  'a')  {  }  else  if(c!=  'a'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'a')        {        }    else    if(c!=    'n'    ||    c    ==    'a')    {    }  else  if(c!=  'a'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	93	2	add
2282	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  >=  '+')  {	  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }    else    if(c    ==    'n'    ||    c    >=    '+')    {    	compilable	  [FE]  AssertionFailedError  	67	2	replace
2283	[BUG]  [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  >=  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  >=  '+')  {	  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }    else    if(c    ==    'n'    ||    c    >=    '+')    {    	compilable	  [FE]  AssertionFailedError  	67	2	replace
2284	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  '+')  {	  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }    else    if(c    ==    'n'    ||    c    >=    '+')    {    	compilable	  [FE]  AssertionFailedError  	67	2	replace
2285	[BUG]  [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  't'  ||  c  ==  'n'  ||  c  ==  '+')  {	  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }    else    if(c    ==    'n'    ||    c    >=    '+')    {    	compilable	  [FE]  AssertionFailedError  	67	2	replace
2286	[BUG]  [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    	non-compiled	[CE]  ';'  expected	255	None	replace
2287	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'N'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    >=    '+')    {    }  else  if(c  ==  'N'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	66	2	add
2288	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'N'  ||  c  >=  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'N'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    >=    '+')    {    }  else  if(c  ==  'N'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	66	2	add
2289	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'i'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    >=    '+')    {    }  else  if(c  ==  'i'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	66	2	add
2290	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'i'  ||  c  >=  '+')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  >=  '+')  {  }  else  if(c  ==  'i'  ||  c  >=  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    >=    '+')    {    }  else  if(c  ==  'i'  ||  c  >=  '+')  {	  	compilable	  [FE]  AssertionFailedError  	66	2	add
2291	[BUG]  [BUGGY]  nisipTo(c)  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  nisipTo(c)  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	nisipTo(c)  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  not  a  statement	23	None	replace
2292	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r'    ||    s.charAt(    1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  orphaned  case	23	None	replace
2293	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'n'  &&  c  ==  '*')  {	  }    else    if(c!=    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	145	2	replace
2294	[BUG]  [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'n'  &&  c  ==  '*')  {	  }    else    if(c!=    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	145	2	replace
2295	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	104	2	add
2296	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	104	2	add
2297	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(4)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(4)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	104	2	add
2298	[BUG]  [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(4)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'n')  {  if(s.charAt(4)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'n')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'n')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'n')  {  if(s.charAt(4)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	104	2	add
2299	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'n'  &&  c  ==  '+')  {	  }    else    if(c!=    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	190	2	replace
2300	[BUG]  [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'n'  &&  c  ==  '+')  {	  }    else    if(c!=    'n'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	190	2	replace
2301	[BUG]  [BUGGY]  nisipTo(c)  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  nisipTo(c)  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	nisipTo(c)  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'f')  {  id=true;  break  complete;  }	  if(X!=    null)    {    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'f')    {    id=true;    break    complete;    }    	non-compiled	[CE]  not  a  statement	229	None	replace
2302	[BUG]  [BUGGY]  if(c  ==  '+')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '+')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '+')  {  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'o')  {  id=false;  break  complete;  }	          if(c    ==    '+')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    	non-compiled	[CE]  ')'  expected	243	None	replace
2303	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  >=  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }    else    if(c    ==    'n'    ||    c    >=    'f')    {    	compilable	  [FE]  AssertionFailedError  	117	2	replace
2304	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  >=  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  >=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  >=  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }    else    if(c    ==    'n'    ||    c    >=    'f')    {    	compilable	  [FE]  AssertionFailedError  	117	2	replace
2305	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'N'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'N'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
2306	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'N'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'N'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'N'  ||  c  ==  '*')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
2307	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
2308	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
2309	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n'  ||  c  >=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  >=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
2310	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n'  ||  c  >=  '*')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  ==  '*')  {  }  else  if(c!=  'n'  ||  c  >=  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '*')        {        }    else    if(c!=    'n'    ||    c    ==    '*')    {    }  else  if(c!=  'n'  ||  c  >=  '*')  {	  	compilable	  [FE]  AssertionFailedError  	49	2	add
2311	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'F')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  'F')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  if(c    ==    'f')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	172	2	replace
2312	[BUG]  [BUGGY]  if(c  ==  'F')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'F')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'F')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  if(c    ==    'f')    {    if(s.charAt(0)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	172	2	replace
2313	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'n'  ||  c  >=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    >=    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	181	2	add
2314	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'n'  ||  c  >=  'A')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {  }  else  if(c  ==  'n'  ||  c  >=  'A')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'A')        {        }    else    if(c    ==    'n'    ||    c    >=    'A')    {    }  else  if(c  ==  'n'  ||  c  >=  'A')  {	  	compilable	  [FE]  AssertionFailedError  	181	2	add
2315	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  <=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  <=  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }    else    if(c    >=    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	54	2	replace
2316	[BUG]  [BUGGY]  }  else  if(c  <=  'n'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  <=  'n'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  <=  'n'  ||  c  ==  '*')  {	  }    else    if(c    ==    'n'    ||    c    ==    '*')    {    }    else    if(c    >=    'n'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	54	2	replace
2317	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'S'  ||  c  ==  'N'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'S'  ||  c  ==  'N'  ||  c  ==  '+')  {	  }    else    if(c    ==    'N'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	188	2	replace
2318	[BUG]  [BUGGY]  }  else  if(c  ==  'S'  ||  c  ==  'N'  ||  c  ==  '+')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'S'  ||  c  ==  'N'  ||  c  ==  '+')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'S'  ||  c  ==  'N'  ||  c  ==  '+')  {	  }    else    if(c    ==    'N'    ||    c    ==    '+')    {    	compilable	  [FE]  AssertionFailedError  	188	2	replace
2319	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'K'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'K'  ||  c  ==  '*')  {	  }    else    if(c    ==    'N'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	141	2	replace
2320	[BUG]  [BUGGY]  }  else  if(c  ==  'K'  ||  c  ==  '*')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'K'  ||  c  ==  '*')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'K'  ||  c  ==  '*')  {	  }    else    if(c    ==    'N'    ||    c    ==    '*')    {    	compilable	  [FE]  AssertionFailedError  	141	2	replace
2321	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	108	2	add
2322	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	108	2	add
2323	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'N'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	108	2	add
2324	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c  ==  'f')  {  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'N'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	108	2	add
2325	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }    else    if(c    ==    'n'    ||    c!=    'f')    {    	compilable	  [FE]  AssertionFailedError  	111	2	replace
2326	[BUG]  [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'f'  ||  c  ==  'n'  ||  c!=  'f')  {	  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }    else    if(c    ==    'n'    ||    c!=    'f')    {    	compilable	  [FE]  AssertionFailedError  	111	2	replace
2327	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete	          if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    if(c    ==    'n')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete    	non-compiled	[CE]  ';'  expected	210	None	replace
2328	[BUG]  [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'f')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  undefined  label:  finish	132	None	replace
2329	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  undefined  label:  finish	132	None	replace
2330	[BUG]  [BUGGY]  if(c  ==  'a')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [CE]  undefined  label:  finish  [FE]                    AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'a')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'a')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  finish;  }  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    finish;    }    }    	non-compiled	[CE]  undefined  label:  finish	132	None	replace
2331	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  [CE]  undefined  label:  finish  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c    ==    'n'    ||    c    ==    'r'    ||    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    if(c  ==  'n'  ||  c  ==  'r'  ||  s.charAt(1)  ==  'o')  {  id=false;  break  finish;  }	  	non-compiled	[CE]  undefined  label:  finish	281	None	add
2332	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'n'  &&  c  ==  '-')  {	  }    else    if(c!=    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	82	2	replace
2333	[BUG]  [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  '-')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  '-')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'n'  &&  c  ==  '-')  {	  }    else    if(c!=    'n'    ||    c    ==    '-')    {    	compilable	  [FE]  AssertionFailedError  	82	2	replace
2334	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(4)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(4)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	128	2	add
2335	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(4)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(4)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(4)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	128	2	add
2336	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	128	2	add
2337	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	128	2	add
2338	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    >=    '-')    {    }  else  if(c  ==  'i'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	34	2	add
2339	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '-')    {    }  else  if(c  ==  'n'  ||  c  >=  '-')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '-')        {        }    else    if(c    ==    'n'    ||    c    >=    '-')    {    }  else  if(c  ==  'i'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	34	2	add
2340	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'i')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'i')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'i')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	264	None	replace
2341	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  'n')  {  if(s.charAt(2)  ==  'r'  ||  s.charAt(2)  ==  'r')  {  id=true;  break  complete;  }	  if(c    ==    'n')    {    if(s.charAt(    2)    ==    'r')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	264	None	replace
2342	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  't'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'u'  ||  c  ==  't'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	289	2	replace
2343	[BUG]  [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  't'  ||  c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  ||  c  ==  't'  ||  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'u'  ||  c  ==  't'  ||  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	289	2	replace
2344	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  &&  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  'u'  &&  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	289	2	replace
2345	[BUG]  [BUGGY]  }  else  if(c  ==  'u'  &&  c  ==  'n'  ||  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  'u'  &&  c  ==  'n'  ||  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  'u'  &&  c  ==  'n'  ||  c  ==  'e')  {	  }    else    if(c    ==    'u'    ||    c    ==    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	289	2	replace
2346	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	291	2	replace
2347	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'd')    {    id=true;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	291	2	replace
2348	[BUG]  [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  't')  {  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }	          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    	non-compiled	[CE]  orphaned  case	256	None	replace
2349	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  ==  'N'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	110	2	add
2350	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    'f')    {    }  else  if(c  ==  'n'  ||  c!=  'f')  {  }  else  if(c  ==  'N'  ||  c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        'f')        {        }    else    if(c    ==    'n'    ||    c!=    'f')    {    }  else  if(c  ==  'N'  ||  c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	110	2	add
2351	[BUG]  [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  <=  id;  break  complete;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  <=  id;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'o')  <=  id;  break  complete;  }	  Context.checkState(c    ==    'f'    ||    c    ==    'r'    ||    c    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  not  a  statement	21	None	replace
2352	[BUG]  [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'O')  {  id=true;  break  complete;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'O')  {  id=true;  break  complete;  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	Context.checkState(c  ==  'f'  ||  c  ==  'r'  ||  c  ==  'O')  {  id=true;  break  complete;  }	  Context.checkState(c    ==    'f'    ||    c    ==    'r'    ||    c    ==    'o')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
2353	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
2354	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  'f')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  'f')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  ==  'f')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
2355	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
2356	[BUG]  [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    '.')    {    }  else  if(c  ==  '.')  {  }  else  if(c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        '.')        {        }    else    if(c    ==    '.')    {    }  else  if(c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	154	2	add
2357	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	130	2	add
2358	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	130	2	add
2359	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	130	2	add
2360	[BUG]  [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]          if(c    ==    'f')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }  [BUGGY]      }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	                if(c        ==        'f')        {        if(s.charAt(2)        ==        'r'        &&        s.charAt(1)        ==        'o')        {        id=true;        break        complete;        }        }        if(c    ==    'f')    {    if(s.charAt(1)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=true;    break    complete;    }    }    if(c  ==  'f')  {  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  }	  	compilable	  [FE]  AssertionFailedError  	130	2	add
2361	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c!=  'n'  &&  c  ==  'e')  {	  }    else    if(c!=    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	198	2	replace
2362	[BUG]  [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  'e')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c!=  'n'  &&  c  ==  'e')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c!=  'n'  &&  c  ==  'e')  {	  }    else    if(c!=    'n'    ||    c    ==    'e')    {    	compilable	  [FE]  AssertionFailedError  	198	2	replace
2363	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	58	2	add
2364	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'n')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n')  {	  	compilable	  [FE]  AssertionFailedError  	58	2	add
2365	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'i'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	58	2	add
2366	[BUG]  [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'n'  ||  c  ==  '+')  {  }  else  if(c  ==  'i'  ||  c  ==  'd')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}        else        if(c        ==        'n'        ||        c        ==        '+')        {        }    else    if(c    ==    'n'    ||    c    ==    '+')    {    }  else  if(c  ==  'i'  ||  c  ==  'd')  {	  	compilable	  [FE]  AssertionFailedError  	58	2	add
2367	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	          if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	226	2	replace
2368	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	if(c  ==  '.')  {  if(s.charAt(1)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=false;  break  complete;  }  }	          if(c    ==    '.')    {    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    id=false;    break    complete;    }    }    	compilable	  [FE]  AssertionFailedError  	226	2	replace
2369	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	add	}  else  if(c  ==  't'  ||  c  ==  'n'  ||  c!=  ':')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }    else    if(c    ==    'n'    ||    c!=    ':')    {    	compilable	  [FE]  AssertionFailedError  	12	2	replace
2370	[BUG]  [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c!=  ':')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  boolean  isKeyword(String  name)  {  boolean  id  =  false;  String  s  =  name;  complete:  {  String  X  =  null;  int  c;  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}      [BUGGY]  }  else  if(c  ==  't'  ||  c  ==  'n'  ||  c!=  ':')  {  [BUGGY]      if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.8164965809277261	67	67	2	replace	}  else  if(c  ==  't'  ||  c  ==  'n'  ||  c!=  ':')  {	  }    else    if(c    ==    'n'    ||    c    ==    ':')    {    }    else    if(c    ==    'n'    ||    c!=    ':')    {    	compilable	  [FE]  AssertionFailedError  	12	2	replace
