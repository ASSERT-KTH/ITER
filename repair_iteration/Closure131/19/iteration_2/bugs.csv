bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  case  0:  c=s.charAt(1);  break  complete;  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  0:  c=s.charAt(1);  break  complete;  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  0:  c=s.charAt(1);  break  complete;	      case    0:    c=s.charAt(0);    break    complete;    	non-compiled	[CE]  orphaned  case	22	None	replace
2	[BUG]  [BUGGY]  case  0:  c=s.charAt(2);  break  complete;  [CE]  orphaned  case  [FE]      AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  0:  c=s.charAt(2);  break  complete;  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  0:  c=s.charAt(2);  break  complete;	      case    0:    c=s.charAt(0);    break    complete;    	non-compiled	[CE]  orphaned  case	22	None	replace
3	[BUG]  [BUGGY]  case  0:  c=s.charAt(0);  break  partial;  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  0:  c=s.charAt(0);  break  partial;  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  0:  c=s.charAt(0);  break  partial;	      case    0:    c=s.charAt(0);    break    complete;    	non-compiled	[CE]  orphaned  case	22	None	replace
4	[BUG]  [BUGGY]  case  3:  c=s.charAt(1);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  c=s.charAt(1);  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  3:  c=s.charAt(1);	      case    3:    c=s.charAt(2);    	non-compiled	[CE]  orphaned  case	3	None	replace
5	[BUG]  [BUGGY]  case  3:  c=s.charAt(0);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  c=s.charAt(0);  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  3:  c=s.charAt(0);	      case    3:    c=s.charAt(2);    	non-compiled	[CE]  orphaned  case	3	None	replace
6	[BUG]  [BUGGY]  case  3:  c=s.charAt(3);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  c=s.charAt(3);  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  3:  c=s.charAt(3);	      case    3:    c=s.charAt(2);    	non-compiled	[CE]  orphaned  case	3	None	replace
7	[BUG]  [BUGGY]  case  'f':  if(c  ==  'r'  &&  c  ==  'e')  {  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(c  ==  'r'  &&  c  ==  'e')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(c  ==  'r'  &&  c  ==  'e')  {	  case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'e')    {    	non-compiled	[CE]  orphaned  case	10	None	replace
8	[BUG]  [BUGGY]  case  'f':  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'e')  {  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'e')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'e')  {	  case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'e')    {    	non-compiled	[CE]  orphaned  case	10	None	replace
9	[BUG]  [BUGGY]  case  'f':  if(s.charAt(  2)  ==  'r')  {  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(s.charAt(  2)  ==  'r')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(s.charAt(  2)  ==  'r')  {	  case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'e')    {    	non-compiled	[CE]  orphaned  case	10	None	replace
10	[BUG]  [BUGGY]  case  'f':  if(c  ==  'r'  &&  s.charAt(1)  ==  'e')  {  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(c  ==  'r'  &&  s.charAt(1)  ==  'e')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(c  ==  'r'  &&  s.charAt(1)  ==  'e')  {	  case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'e')    {    	non-compiled	[CE]  orphaned  case	10	None	replace
11	[BUG]  [BUGGY]  case  3:  c=s.charAt(0);  break  complete;  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  c=s.charAt(0);  break  complete;  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  3:  c=s.charAt(0);  break  complete;	      case    3:    c=s.charAt(    1);    break    complete;    	non-compiled	[CE]  orphaned  case	4	None	replace
12	[BUG]  [BUGGY]  case  3:  c=s.charAt(3);  break  complete;  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  c=s.charAt(3);  break  complete;  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  3:  c=s.charAt(3);  break  complete;	      case    3:    c=s.charAt(    1);    break    complete;    	non-compiled	[CE]  orphaned  case	4	None	replace
13	[BUG]  [BUGGY]  case  'f':  if(c  ==  'r'  &&  c  ==  'n')  {  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(c  ==  'r'  &&  c  ==  'n')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(c  ==  'r'  &&  c  ==  'n')  {	  case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    	non-compiled	[CE]  orphaned  case	11	None	replace
14	[BUG]  [BUGGY]  case  'f':  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {	  case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    	non-compiled	[CE]  orphaned  case	11	None	replace
15	[BUG]  [BUGGY]  case  'f':  if(c  ==  'r'  &&  s.charAt(1)  ==  'n')  {  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(c  ==  'r'  &&  s.charAt(1)  ==  'n')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(c  ==  'r'  &&  s.charAt(1)  ==  'n')  {	  case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    	non-compiled	[CE]  orphaned  case	11	None	replace
16	[BUG]  [BUGGY]  case  3:  switch(s.charAt(1))  {  case  3:  switch(s.charAt(1))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(1))  {  case  3:  switch(s.charAt(1))  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(1))    {    case  3:  switch(s.charAt(1))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
17	[BUG]  [BUGGY]  case  3:  switch(s.charAt(1))  {  case  3:  switch(s.charAt(2))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(1))  {  case  3:  switch(s.charAt(2))  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(1))    {    case  3:  switch(s.charAt(2))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
18	[BUG]  [BUGGY]  case  3:  switch(s.charAt(1))  {  Case  3:  switch(s.charAt(1))  {  [CE]  case,  default,  or  '}'  expected  [FE]        AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(1))  {  Case  3:  switch(s.charAt(1))  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(1))    {    Case  3:  switch(s.charAt(1))  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	12	None	add
19	[BUG]  [BUGGY]  case  3:  switch(s.charAt(1))  {  case  3:  switch(s.charAt(3))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(1))  {  case  3:  switch(s.charAt(3))  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(1))    {    case  3:  switch(s.charAt(3))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
20	[BUG]  [BUGGY]  case  3:  switch(s.charAt(1))  {  Case  3:  switch(s.charAt(2))  {  [CE]  case,  default,  or  '}'  expected  [FE]            AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(1))  {  Case  3:  switch(s.charAt(2))  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(1))    {    Case  3:  switch(s.charAt(2))  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	12	None	add
21	[BUG]  [BUGGY]  case  2:  c=s.charAt(1);case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  2:  c=s.charAt(1);case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  2:  c=s.charAt(1);case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	      case    2:    switch(s.charAt(2))    {    case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	18	None	replace
22	[BUG]  [BUGGY]  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	      case    2:    switch(s.charAt(2))    {    case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	18	None	replace
23	[BUG]  [BUGGY]  case  2:  c=s.charAt(2);case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  2:  c=s.charAt(2);case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  2:  c=s.charAt(2);case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	      case    2:    switch(s.charAt(2))    {    case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	18	None	replace
24	[BUG]  [BUGGY]      case  0:  c=s.charAt(0);  break  complete;  case  0:  c=s.charAt(0);  break  complete;  [CE]  duplicate  case  label  [FE]    AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]      case  0:  c=s.charAt(0);  break  complete;  case  0:  c=s.charAt(0);  break  complete;  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	        case    0:    c=s.charAt(0);    break    complete;    case  0:  c=s.charAt(0);  break  complete;	  	non-compiled	[CE]  duplicate  case  label	21	None	add
25	[BUG]  [BUGGY]      case  0:  c=s.charAt(0);  break  complete;  case  0:  c=s.charAt(1);  break  complete;  [CE]  duplicate  case  label  [FE]      AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]      case  0:  c=s.charAt(0);  break  complete;  case  0:  c=s.charAt(1);  break  complete;  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	        case    0:    c=s.charAt(0);    break    complete;    case  0:  c=s.charAt(1);  break  complete;	  	non-compiled	[CE]  duplicate  case  label	21	None	add
26	[BUG]  [BUGGY]      case  0:  c=s.charAt(0);  break  complete;  Case  0:  c=s.charAt(0);  break  complete;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]      case  0:  c=s.charAt(0);  break  complete;  Case  0:  c=s.charAt(0);  break  complete;  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	        case    0:    c=s.charAt(0);    break    complete;    Case  0:  c=s.charAt(0);  break  complete;	  	non-compiled	[CE]  not  a  statement	21	None	add
27	[BUG]  [BUGGY]      case  0:  c=s.charAt(0);  break  complete;  Case  0:  c=s.charAt(1);  break  complete;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]      case  0:  c=s.charAt(0);  break  complete;  Case  0:  c=s.charAt(1);  break  complete;  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	        case    0:    c=s.charAt(0);    break    complete;    Case  0:  c=s.charAt(1);  break  complete;	  	non-compiled	[CE]  not  a  statement	21	None	add
28	[BUG]  [BUGGY]  case  4:  c=s.charAt(2);  break  complete;  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  4:  c=s.charAt(2);  break  complete;  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  4:  c=s.charAt(2);  break  complete;	      case    4:    c=s.charAt(    1);    break    complete;    	non-compiled	[CE]  orphaned  case	6	None	replace
29	[BUG]  [BUGGY]  case  4:  c=s.charAt(0);  break  complete;  [CE]  orphaned  case  [FE]                    AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  4:  c=s.charAt(0);  break  complete;  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  4:  c=s.charAt(0);  break  complete;	      case    4:    c=s.charAt(    1);    break    complete;    	non-compiled	[CE]  orphaned  case	6	None	replace
30	[BUG]  [BUGGY]  case  4:  c=s.charAt(3);  break  complete;  [CE]  orphaned  case  [FE]                      AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  4:  c=s.charAt(3);  break  complete;  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  4:  c=s.charAt(3);  break  complete;	      case    4:    c=s.charAt(    1);    break    complete;    	non-compiled	[CE]  orphaned  case	6	None	replace
31	[BUG]  [BUGGY]  case  2:  c=s.charAt(0);  break  complete;  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  2:  c=s.charAt(0);  break  complete;  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  2:  c=s.charAt(0);  break  complete;	      case    2:    c=s.charAt(1);    break    complete;    	non-compiled	[CE]  orphaned  case	5	None	replace
32	[BUG]  [BUGGY]  case  2:  c=s.charAt(3);  break  complete;  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  2:  c=s.charAt(3);  break  complete;  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  2:  c=s.charAt(3);  break  complete;	      case    2:    c=s.charAt(1);    break    complete;    	non-compiled	[CE]  orphaned  case	5	None	replace
33	[BUG]  [BUGGY]  case  2:  c=s.charAt(0);  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  2:  c=s.charAt(0);  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  2:  c=s.charAt(0);	      case    2:    c=s.charAt(2);    	non-compiled	[CE]  orphaned  case	2	None	replace
34	[BUG]  [BUGGY]  case  2:  c=s.charAt(3);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  2:  c=s.charAt(3);  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  2:  c=s.charAt(3);	      case    2:    c=s.charAt(2);    	non-compiled	[CE]  orphaned  case	2	None	replace
35	[BUG]  [BUGGY]  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'h')  {	  case    3:    switch(s.charAt(1))    {    	non-compiled	[CE]  orphaned  case	13	None	replace
36	[BUG]  [BUGGY]  case  3:  switch(s.charAt(2))  {  case  3:  switch(s.charAt(2))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(2))  {  case  3:  switch(s.charAt(2))  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(2))    {    case  3:  switch(s.charAt(2))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
37	[BUG]  [BUGGY]  case  3:  switch(s.charAt(2))  {  Case  3:  switch(s.charAt(2))  {  [CE]  case,  default,  or  '}'  expected  [FE]      AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(2))  {  Case  3:  switch(s.charAt(2))  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(2))    {    Case  3:  switch(s.charAt(2))  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	7	None	add
38	[BUG]  [BUGGY]  case  3:  switch(s.charAt(2))  {  case  3:  switch(s.charAt(3))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(2))  {  case  3:  switch(s.charAt(3))  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(2))    {    case  3:  switch(s.charAt(3))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
39	[BUG]  [BUGGY]  case  3:  switch(s.charAt(2))  {  case  3:  switch(s.charAt(1))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(2))  {  case  3:  switch(s.charAt(1))  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(2))    {    case  3:  switch(s.charAt(1))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
40	[BUG]  [BUGGY]  case  3:  switch(s.charAt(2))  {  case  3:  switch(s.charAt(4))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(2))  {  case  3:  switch(s.charAt(4))  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(2))    {    case  3:  switch(s.charAt(4))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
41	[BUG]  [BUGGY]  case  3:  switch(s.charAt(3))  {  case  3:  switch(s.charAt(3))  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(3))  {  case  3:  switch(s.charAt(3))  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(3))    {    case  3:  switch(s.charAt(3))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
42	[BUG]  [BUGGY]  case  3:  switch(s.charAt(3))  {  case  3:  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  [CE]  orphaned  case  [FE]      RuntimeException    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(3))  {  case  3:  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(3))    {    case  3:  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {	  	non-compiled	[CE]  orphaned  case	14	None	add
43	[BUG]  [BUGGY]  case  3:  switch(s.charAt(3))  {  case  3:  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'e')  {  [CE]  orphaned  case  [FE]        RuntimeException    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(3))  {  case  3:  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'e')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(3))    {    case  3:  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'e')  {	  	non-compiled	[CE]  orphaned  case	14	None	add
44	[BUG]  [BUGGY]  case  3:  switch(s.charAt(3))  {  case  3:  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'r'  &&  s.charAt(3)  ==  'e')  {  [CE]  orphaned  case  [FE]          RuntimeException    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(3))  {  case  3:  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'r'  &&  s.charAt(3)  ==  'e')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(3))    {    case  3:  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'r'  &&  s.charAt(3)  ==  'e')  {	  	non-compiled	[CE]  orphaned  case	14	None	add
45	[BUG]  [BUGGY]  case  3:  switch(s.charAt(3))  {  case  3:  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  [CE]  orphaned  case  [FE]            RuntimeException    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(3))  {  case  3:  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(3))    {    case  3:  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {	  	non-compiled	[CE]  orphaned  case	14	None	add
46	[BUG]  [BUGGY]  case  3:  switch(s.charAt(3))  {  case  3:  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'r')  {  [CE]  orphaned  case  [FE]              RuntimeException    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(3))  {  case  3:  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'r')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(3))    {    case  3:  if(s.charAt(2)  ==  'f'  &&  s.charAt(1)  ==  'r')  {	  	non-compiled	[CE]  orphaned  case	14	None	add
47	[BUG]  [BUGGY]  case  'f':  if(c  ==  'r'  &&  c  ==  'o')  {  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(c  ==  'r'  &&  c  ==  'o')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(c  ==  'r'  &&  c  ==  'o')  {	  case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    	non-compiled	[CE]  orphaned  case	9	None	replace
48	[BUG]  [BUGGY]  case  'f':  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'o')  {	  case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    	non-compiled	[CE]  orphaned  case	9	None	replace
49	[BUG]  [BUGGY]  case  'f':  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'o')  {  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'o')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(s.charAt(1)  ==  'r'  &&  s.charAt(2)  ==  'o')  {	  case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    	non-compiled	[CE]  orphaned  case	9	None	replace
50	[BUG]  [BUGGY]  case  3:  c=s.charAt(1);case  'f':  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  c=s.charAt(1);case  'f':  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  3:  c=s.charAt(1);case  'f':  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	      case    3:    switch(s.charAt(2))    {    case    'f':    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	17	None	replace
51	[BUG]  [BUGGY]  case  3:  if(c  ==  'f')  {  case  'r':  if(s.charAt(2)  ==  'n'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  if(c  ==  'f')  {  case  'r':  if(s.charAt(2)  ==  'n'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  3:  if(c  ==  'f')  {  case  'r':  if(s.charAt(2)  ==  'n'  &&  s.charAt(1)  ==  'd')  {  id=true;  break  complete;  }	      case    3:    switch(s.charAt(2))    {    case    'f':    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	17	None	replace
52	[BUG]  [BUGGY]  case  3:  c=s.charAt(1);case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  c=s.charAt(1);case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  3:  c=s.charAt(1);case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	      case    3:    switch(s.charAt(2))    {    case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	16	None	replace
53	[BUG]  [BUGGY]  case  3:  if(c  ==  'f')  {  case  'r':  if(s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  if(c  ==  'f')  {  case  'r':  if(s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  3:  if(c  ==  'f')  {  case  'r':  if(s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	      case    3:    switch(s.charAt(2))    {    case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	16	None	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  switch(s.charAt(2))  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	add	case  'f':  switch(s.charAt(2))  {	  case    3:    switch(s.charAt(1))    {    	compilable	  [FE]  AssertionFailedError  	13	2	replace
55	[BUG]  [BUGGY]  case  'f':  switch(s.charAt(2))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  switch(s.charAt(2))  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  switch(s.charAt(2))  {	  case    3:    switch(s.charAt(1))    {    	compilable	  [FE]  AssertionFailedError  	13	2	replace
56	[BUG]  [BUGGY]  case  'f':  if(c  ==  'r'  &&  s.charAt(1)  ==  'o')  {  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(c  ==  'r'  &&  s.charAt(1)  ==  'o')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(c  ==  'r'  &&  s.charAt(1)  ==  'o')  {	  case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    	non-compiled	[CE]  orphaned  case	9	None	replace
57	[BUG]  [BUGGY]  case  'f':  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'o')  {	  case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'o')    {    	non-compiled	[CE]  orphaned  case	9	None	replace
58	[BUG]  [BUGGY]      case  0:  c=s.charAt(0);  break  complete;  case  0:  c=s.charAt(  1;  break  complete;  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]      case  0:  c=s.charAt(0);  break  complete;  case  0:  c=s.charAt(  1;  break  complete;  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	        case    0:    c=s.charAt(0);    break    complete;    case  0:  c=s.charAt(  1;  break  complete;	  	non-compiled	[CE]  ')'  expected	21	None	add
59	[BUG]  [BUGGY]  case  3:  switch(s.charAt(3))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(3))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(3))    {    case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
60	[BUG]  [BUGGY]  case  3:  switch(s.charAt(3))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  break  partial;  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(3))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  break  partial;  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(3))    {    case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=true;  break  complete;  }  break  partial;	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
61	[BUG]  [BUGGY]  case  3:  switch(s.charAt(3))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  [CE]  orphaned  case  [FE]        RuntimeException    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(3))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(3))    {    case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {	  	non-compiled	[CE]  orphaned  case	14	None	add
62	[BUG]  [BUGGY]  case  3:  switch(s.charAt(3))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=tru;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(3))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=tru;  break  complete;  }  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(3))    {    case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=tru;  break  complete;  }	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
63	[BUG]  [BUGGY]  case  3:  switch(s.charAt(3))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=tru;  break  complete;  }  break  partial;  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(3))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=tru;  break  complete;  }  break  partial;  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(3))    {    case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  id=tru;  break  complete;  }  break  partial;	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
64	[BUG]  [BUGGY]  case  2:  switch(s.charAt(1))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  duplicate  case  label  [FE]            AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  2:  switch(s.charAt(1))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  2:  switch(s.charAt(1))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	      case    2:    switch(s.charAt(2))    {    case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  duplicate  case  label	18	None	replace
65	[BUG]  [BUGGY]  case  2:  switch(s.charAt(0))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  duplicate  case  label  [FE]              AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  2:  switch(s.charAt(0))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  2:  switch(s.charAt(0))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	      case    2:    switch(s.charAt(2))    {    case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  duplicate  case  label	18	None	replace
66	[BUG]  [BUGGY]  case  2:  switch(s.charAt(2))  {  case  'f':  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  duplicate  case  label  [FE]                AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  2:  switch(s.charAt(2))  {  case  'f':  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  2:  switch(s.charAt(2))  {  case  'f':  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	      case    2:    switch(s.charAt(2))    {    case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  duplicate  case  label	18	None	replace
67	[BUG]  [BUGGY]  case  3:  switch(s.charAt(1))  {  case  'f':  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  duplicate  case  label  [FE]          AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(1))  {  case  'f':  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  3:  switch(s.charAt(1))  {  case  'f':  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	      case    3:    switch(s.charAt(2))    {    case    'f':    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  duplicate  case  label	17	None	replace
68	[BUG]  [BUGGY]  case  3:  switch(s.charAt(1))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  duplicate  case  label  [FE]        AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(1))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  3:  switch(s.charAt(1))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	      case    3:    switch(s.charAt(2))    {    case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  duplicate  case  label	16	None	replace
69	[BUG]  [BUGGY]  case  3:  switch(s.charAt(0))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  duplicate  case  label  [FE]          AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(0))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  3:  switch(s.charAt(0))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	      case    3:    switch(s.charAt(2))    {    case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  duplicate  case  label	16	None	replace
70	[BUG]  [BUGGY]  case  2:  switch(s.charAt(2))  {  case  'f':  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  duplicate  case  label  [FE]            AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  2:  switch(s.charAt(2))  {  case  'f':  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  2:  switch(s.charAt(2))  {  case  'f':  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }	      case    3:    switch(s.charAt(2))    {    case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  duplicate  case  label	16	None	replace
71	[BUG]  [BUGGY]  case  'f':  if(c  ==  'r'  &&  s.charAt(2)  ==  'n')  {  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(c  ==  'r'  &&  s.charAt(2)  ==  'n')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(c  ==  'r'  &&  s.charAt(2)  ==  'n')  {	  case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    	non-compiled	[CE]  orphaned  case	11	None	replace
72	[BUG]  [BUGGY]  case  'f':  if(c  ==  'r'  &&  s.charAt(2)  ==  'e')  {  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(c  ==  'r'  &&  s.charAt(2)  ==  'e')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(c  ==  'r'  &&  s.charAt(2)  ==  'e')  {	  case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'e')    {    	non-compiled	[CE]  orphaned  case	10	None	replace
73	[BUG]  [BUGGY]  case  'f':  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'e')  {  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'e')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'e')  {	  case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'e')    {    	non-compiled	[CE]  orphaned  case	10	None	replace
74	[BUG]  [BUGGY]  case  'f':  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(s.charAt(  2)  ==  'r')  {  id=true;  break  complete;  }	      case    3:    switch(s.charAt(2))    {    case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	16	None	replace
75	[BUG]  [BUGGY]  case  'f':  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(s.charAt(  2)  ==  'r',  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }	      case    3:    switch(s.charAt(2))    {    case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  ')'  expected	16	None	replace
76	[BUG]  [BUGGY]  case  'f':  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(s.charAt(  2)  ==  'r'  ||  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }	      case    3:    switch(s.charAt(2))    {    case    'f':    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	17	None	replace
77	[BUG]  [BUGGY]  case  2:  switch(s.charAt(2))  {  case  'f':  if(s.charAt(  0)  ==  'r'  &&  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  duplicate  case  label  [FE]            AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  2:  switch(s.charAt(2))  {  case  'f':  if(s.charAt(  0)  ==  'r'  &&  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  2:  switch(s.charAt(2))  {  case  'f':  if(s.charAt(  0)  ==  'r'  &&  s.charAt(  1)  ==  'n')  {  id=true;  break  complete;  }	      case    3:    switch(s.charAt(2))    {    case    'f':    if(s.charAt(3)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  duplicate  case  label	17	None	replace
78	[BUG]  [BUGGY]  case  0:  c=s.charAt(0);  break  incomplete;  [CE]  orphaned  case  [FE]    AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  0:  c=s.charAt(0);  break  incomplete;  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  0:  c=s.charAt(0);  break  incomplete;	      case    0:    c=s.charAt(0);    break    complete;    	non-compiled	[CE]  orphaned  case	22	None	replace
79	[BUG]  [BUGGY]  case  3:  switch(s.charAt(3))  {  case  3:  switch(s.charAt(4))  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(3))  {  case  3:  switch(s.charAt(4))  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(3))    {    case  3:  switch(s.charAt(4))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
80	[BUG]  [BUGGY]  case  3:  switch(s.charAt(3))  {  Case  3:  switch(s.charAt(3))  {  [CE]  case,  default,  or  '}'  expected  [FE]      RuntimeException    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(3))  {  Case  3:  switch(s.charAt(3))  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(3))    {    Case  3:  switch(s.charAt(3))  {	  	non-compiled	[CE]  case,  default,  or  '}'  expected	14	None	add
81	[BUG]  [BUGGY]  case  3:  switch(s.charAt(3))  {  case  3:  switch(s.charAt(2))  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(3))  {  case  3:  switch(s.charAt(2))  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(3))    {    case  3:  switch(s.charAt(2))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
82	[BUG]  [BUGGY]  case  3:  switch(s.charAt(3))  {  case  3:  switch(s.charAt3())  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(3))  {  case  3:  switch(s.charAt3())  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(3))    {    case  3:  switch(s.charAt3())  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
83	[BUG]  [BUGGY]  case  2:  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  2:  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]    case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  2:  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }	      case    2:    switch(s.charAt(2))    {    case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    id=true;    break    complete;    }    	non-compiled	[CE]  orphaned  case	18	None	replace
84	[BUG]  [BUGGY]  case  3:  switch(s.charAt(1))  {  case  4:  switch(s.charAt(1))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(1))  {  case  4:  switch(s.charAt(1))  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(1))    {    case  4:  switch(s.charAt(1))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
85	[BUG]  [BUGGY]  case  3:  switch(s.charAt(2))  {  case  4:  switch(s.charAt(2))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  3:  switch(s.charAt(2))  {  case  4:  switch(s.charAt(2))  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case    3:    switch(s.charAt(2))    {    case  4:  switch(s.charAt(2))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
86	[BUG]  [BUGGY]  case  'f':  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;    [BUGGY]  case  'f':  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  [BUGGY]    case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(s.charAt(0)  ==  'r'  &&  s.charAt(1)  ==  'n')  {	  case    'f':    if(s.charAt(2)    ==    'r'    &&    s.charAt(1)    ==    'n')    {    	non-compiled	[CE]  orphaned  case	11	None	replace
