bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    case  2:  c=s.charAt(1);  [CE]  duplicate  case  label  [FE]    AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]    case  2:  c=s.charAt(1);  [BUGGY]  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	    case  2:  c=s.charAt(1);		non-compiled	[CE]  duplicate  case  label	38	None	add
2	[BUG]  [BUGGY]    case  2:  c=s.charAt(2);  [CE]  duplicate  case  label  [FE]      AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]    case  2:  c=s.charAt(2);  [BUGGY]  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	    case  2:  c=s.charAt(2);		non-compiled	[CE]  duplicate  case  label	38	None	add
3	[BUG]  [BUGGY]    case  3:  c=s.charAt(2);  [CE]  duplicate  case  label  [FE]        AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]    case  3:  c=s.charAt(2);  [BUGGY]  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	    case  3:  c=s.charAt(2);		non-compiled	[CE]  duplicate  case  label	38	None	add
4	[BUG]  [BUGGY]    case  3:  c=s.charAt(  1);  break  complete;  [CE]  duplicate  case  label  [FE]          AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]    case  3:  c=s.charAt(  1);  break  complete;  [BUGGY]  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	    case  3:  c=s.charAt(  1);  break  complete;		non-compiled	[CE]  duplicate  case  label	38	None	add
5	[BUG]  [BUGGY]    case  2:  c=s.charAt(1);  break  complete;  [CE]  duplicate  case  label  [FE]            AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]    case  2:  c=s.charAt(1);  break  complete;  [BUGGY]  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	    case  2:  c=s.charAt(1);  break  complete;		non-compiled	[CE]  duplicate  case  label	38	None	add
6	[BUG]  [BUGGY]    case  4:  c=s.charAt(  1);  break  complete;  [CE]  duplicate  case  label  [FE]              AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]    case  4:  c=s.charAt(  1);  break  complete;  [BUGGY]  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	    case  4:  c=s.charAt(  1);  break  complete;		non-compiled	[CE]  duplicate  case  label	38	None	add
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]  case  3:  switch(s.charAt(2))  {  [BUGGY]  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	add	case  3:  switch(s.charAt(2))  {	case  3:  switch  (s.charAt(0))  {  	compilable	  [FE]  AssertionFailedError  	37	2	replace
8	[BUG]  [BUGGY]  case  3:  switch(s.charAt(2))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]  case  3:  switch(s.charAt(2))  {  [BUGGY]  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  3:  switch(s.charAt(2))  {	case  3:  switch  (s.charAt(0))  {  	compilable	  [FE]  AssertionFailedError  	37	2	replace
9	[BUG]  [BUGGY]  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  [CE]  orphaned  case  [FE]      AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {  [BUGGY]  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'o')  {	case  3:  switch  (s.charAt(0))  {  	non-compiled	[CE]  orphaned  case	37	None	replace
10	[BUG]  [BUGGY]  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'e')  {  [CE]  orphaned  case  [FE]        AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'e')  {  [BUGGY]  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'e')  {	case  3:  switch  (s.charAt(0))  {  	non-compiled	[CE]  orphaned  case	37	None	replace
11	[BUG]  [BUGGY]  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  [CE]  orphaned  case  [FE]          AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  [BUGGY]  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {	case  3:  switch  (s.charAt(0))  {  	non-compiled	[CE]  orphaned  case	37	None	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]  case  3:  switch(s.charAt(1))  {  [BUGGY]  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	add	case  3:  switch(s.charAt(1))  {	case  3:  switch  (s.charAt(0))  {  	compilable	  [FE]  AssertionFailedError  	37	2	replace
13	[BUG]  [BUGGY]  case  3:  switch(s.charAt(1))  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]  case  3:  switch(s.charAt(1))  {  [BUGGY]  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  3:  switch(s.charAt(1))  {	case  3:  switch  (s.charAt(0))  {  	compilable	  [FE]  AssertionFailedError  	37	2	replace
14	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]  case  3:  switch(s.charAt(3))  {  [BUGGY]  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	add	case  3:  switch(s.charAt(3))  {	case  3:  switch  (s.charAt(0))  {  	compilable	  [FE]  RuntimeException  	37	3	replace
15	[BUG]  [BUGGY]  case  3:  switch(s.charAt(3))  {  [FE]  RuntimeException  [FE]    AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]  case  3:  switch(s.charAt(3))  {  [BUGGY]  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	case  3:  switch(s.charAt(3))  {	case  3:  switch  (s.charAt(0))  {  	compilable	  [FE]  RuntimeException  	37	3	replace
16	[BUG]  [BUGGY]    case  3:  switch(s.charAt(2))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]    case  3:  switch(s.charAt(2))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	    case  3:  switch(s.charAt(2))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
17	[BUG]  [BUGGY]    case  3:  switch(s.charAt(2))  {  case  'f':  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]    case  3:  switch(s.charAt(2))  {  case  'f':  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	    case  3:  switch(s.charAt(2))  {  case  'f':  if(s.charAt(3)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
18	[BUG]  [BUGGY]    case  2:  switch(s.charAt(2))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]    case  2:  switch(s.charAt(2))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }  [BUGGY]  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	    case  2:  switch(s.charAt(2))  {  case  'f':  if(s.charAt(2)  ==  'r'  &&  s.charAt(1)  ==  'n')  {  id=true;  break  complete;  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
19	[BUG]  [BUGGY]    case  2:  c=s.charAt(2);  break  complete;  [CE]  duplicate  case  label  [FE]    AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]    case  2:  c=s.charAt(2);  break  complete;  [BUGGY]  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	    case  2:  c=s.charAt(2);  break  complete;		non-compiled	[CE]  duplicate  case  label	38	None	add
20	[BUG]  [BUGGY]    case  3:  c=s.charAt(2);  break  complete;  [CE]  duplicate  case  label  [FE]      AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]    case  3:  c=s.charAt(2);  break  complete;  [BUGGY]  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	    case  3:  c=s.charAt(2);  break  complete;		non-compiled	[CE]  duplicate  case  label	38	None	add
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]    case  0:  c=s.charAt(0);  break  complete;  [BUGGY]  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	add	    case  0:  c=s.charAt(0);  break  complete;		compilable	  [FE]  AssertionFailedError  	38	2	add
22	[BUG]  [BUGGY]    case  0:  c=s.charAt(0);  break  complete;  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  partial:  switch  (s.length())  {  case  2:  c=s.charAt(1);  if  (c=='f')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='n')  {  if  (s.charAt(0)=='i')  {id=true;  break  complete;}  }  else  if  (c=='o')  {  if  (s.charAt(0)=='d')  {id=true;  break  complete;}  }  break  partial;  [BUGGY]    case  0:  c=s.charAt(0);  break  complete;  [BUGGY]  case  3:  switch  (s.charAt(0))  {  case  'f':  if  (s.charAt(2)=='r'  &&  s.charAt(1)=='o')  {  id=true;  break  complete;  }  break  partial;  case  'i':  if  (s.charAt(2)=='t'  &&  s.charAt(1)=='n')  {  id=true;  break  complete;  }  break  partial;  case  'n':  if  (s.charAt(2)=='w'  &&  s.charAt(1)=='e')  {  [CLASS]  TokenStream  [METHOD]  isKeyword  [RETURN_TYPE]  boolean  String  name  [VARIABLES]  boolean  id  String  X  name  s  int  c  	projects/Closure131/src/com/google/javascript/rhino/TokenStream.java	0.5	73	73	2	replace	    case  0:  c=s.charAt(0);  break  complete;		compilable	  [FE]  AssertionFailedError  	38	2	add
