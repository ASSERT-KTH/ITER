projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102privatestaticfinalMap<String,String>abbreviationMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102privatestaticfinalMap<String,String>abbreviationMap=newLinkedHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102privatestaticfinalMap<String,String>abbreviationMap=newTreeMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap.Entry<String,String>entry=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Maps.newHashMap();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Lists.newArrayList();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notNull(absbreviationMap);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102publicstaticfinalMap<String,String>abbreviationMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102if(abbreviationMap==null){abbreviationMap=newHashMap<String,String>();}else{abbreviationMap=newHashMap<String,String>();}
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102if(abbreviationMap==null){abbreviationMap=newHashMap<String,String>();}
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102if(abbreviationMap==null){abbreviationMap=newHashMap<String,String>();}else{abbreviationMap.putAll(AbbreviationMap.class);}
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notNull(abbreviationMap);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Collections.emptyMap();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=Collections.emptyMap();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Collections.newHashMap();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.class.getSimpleName();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkState(type==null);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkState(type==Token.NAME);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.sort(type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=newTreeMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102privatestaticfinalMap<String,String>abbreviationMap=newTreeMap<String,String>(String.class);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102publicstaticfinalMap<String,String>abbreviationMap=newTreeMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102abbreviationMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102absentMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102abstractMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102publicstaticfinalMap<String,String>abbreviationMap=newLinkedHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notEmpty(absbreviationMap);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102validate.notNull(absbreviationMap);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notNull(absbreviationMap,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notEmpty(abbreviationMap);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102validate.notNull(abbreviationMap);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap.Entry<String,String>entry=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap.Entry<String,String>entry=newLinkedHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalabbreviationMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102abbreviationMap=newHashMap<String,String>(System.identityHashCode(type));
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=newLinkedHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=newLinkedHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalstaticMap<String,String>abbreviationMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102abbreviationMap.putAll(AbbreviationMap.class);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102abbreviationMap.putAll(AbbreviationMap.class,abbreviationMap);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Lists.newHashMap();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Lists.newLinkedHashMap();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=Lists.newArrayList();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=Maps.newHashMap();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Maps.newHashMap(System.identityHashCode(this));
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notNull(abbreviationMap,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notNull(abbreviationMap,null);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102AnnotationFactory<String,String>abbreviationMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Lists.newArrayListWithType(type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkArgument(type==ComparisonFailure.class);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkNotNull(type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkArgument(type==ComparFailure.class);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkAndFixMethod(type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102privatestaticfinalMap<String,String>abbreviationMap=newArrayMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notNull(absbreviationMap,null);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Collections.EMPTY_MAP;
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102AbbreviationMap<String,String>abbreviationMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Lists.newArrayListWithCapacity(size()-1);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Map.Entry<String,String>entry=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkAndFixMethod(type,declaration);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkAndFixClass(type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Preconditions.checkArgument(type.isPrimitive());
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Map<String,String>abbreviationMap=Collections.emptyMap();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Map<String,String>abbreviationMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notNull(type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notNull(abbreviationMap,method);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notEmpty(type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notNull(type,abbreviationMap);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102validate.notNull(type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102validate.notEmpty(abbreviationMap);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102validate.notNull(abbreviationMap,null);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.sort(type,declaration);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.sort(type,false);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.sort(type,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkAndFixClass(declaration,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkAndFixClass(type,declaration);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkAndFixClass(type,false);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkAndFixClass(this.type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkArgument(type==ComparFailure.class,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkArgument(type==ComparFailure.class,null);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkArgument(type==ComparFailure.class,false);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notEmpty(abbreviationMap,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkAndFixMethod(declaration,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkAndFixMethod(this.type,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkAndFixMethod(method,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalstaticMap<String,String>abbreviationMap=newLinkedHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalstaticMap<String,String>abbreviationMap=newTreeMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkState(type!=null);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkState(type==null,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkState(type!=null,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102abbreviationMap.putAll(AbbreviationMap.class,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102abbreviationMap.putAll(AbbreviationMap.class,newHashMap<String,String>());
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102abbreviationMap.putAll(AbbreviationMap.class,true);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=Collections.EMPTY_MAP;
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Collections.EMPTY_MAP+1;
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=Collections.newHashMap();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkAndFixMethod(type,declaration,null);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkAndFixMethod(type,declaration,false);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkAndFixMethod(type,declaration,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notEmpty(type,abbreviationMap);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102validate.notNull(type,abbreviationMap);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=Collections.synchronizedMap(newHashMap<String,String>());
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=newArrayMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notEmpty(abbreviationMap,null);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notNull(abbreviationMap,null,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notNull(abbreviationMap,null,null);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102abbreviationMap=newHashMap<String,String>(System.identityHashCode(type),type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102abbreviationMap=newHashMap<String,String>(System.identityHashCode(type),typeFactory);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalabbreviationMap=newHashMap<String,String>(System.identityHashCode(type));
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Map<String,String>abbreviationMap=newLinkedHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102AnnotationFactory<String,String>abbreviationMap=newLinkedHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102annotationFactory<String,String>abbreviationMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102AnnotationFactory<String,String>abbreviationMap=newTreeMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=newTreeMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.class.getSimpleName(type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.class.getSimpleName(),type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.class.getSimpleName(),type;
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalAbbreviationMap<String,String>abbreviationMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102abbreviationMap<String,String>abbreviationMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Map<String,String>abbreviationMap=Collections.newHashMap();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notEmpty(absbreviationMap,null);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notNull(absbreviationMap,null,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Maps.newHashMap(System.identityHashCode(this,type));
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Maps.newHashMap(System.identityHashCode(type));
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Maps.newHashMap(System.identityHashCode(compiler));
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=Maps.newHashMap(System.identityHashCode(this));
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Lists.newArrayListWithType(type,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=Lists.newArrayListWithType(type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Lists.newArrayListWithType(type,typeFactory);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalHashMap<String,String>abbreviationMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalstaticHashMap<String,String>abbreviationMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notEmpty(absbreviationMap,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkArgument(type==ComparisonFailure.class,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkArgument(type==ComparisonFailure.class,null);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkArgument(type==ComparisonFailure.class,false);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notNull(method,abbreviationMap);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notEmpty(abbreviationMap,method);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notNull(method);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notNull(declaration,method);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap.Entry<String,String>entry=newArrayMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap.Entry<String,String>entry=newTreeMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=Lists.newHashMap();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=Lists.newLinkedHashMap();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=Lists.newArrayList(size());
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>absentMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102absMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102publicstaticfinalMap<String,String>abbreviationMap=newTreeMap<String,String>(String.class);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102publicstaticfinalMap<String,String>abbreviationMap=newTreeMap<String,String>(type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102abbreviationMap.putAll(AbbreviationMap.class,abbreviation);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102abbreviationMap.putAll(AbbreviationMap.class,abbreviationMap.length);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalstaticMap<String,String>abbreviationMap=Maps.newHashMap();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap.Entry<String,String>entry=newLinkedHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalstaticMap.Entry<String,String>entry=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkState(type==Token.NAME,declaration);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkState(type==Token.NAME,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkState(type==Token.NAME,statement);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102privatestaticfinalMap<String,String>abbreviationMap=newTreeMap<String,String>(String.class,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=newTreeMap<String,String>(String.class,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=newTreeMap<String,String>(String.class);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Map.Entry<String,String>entry=newLinkedHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Preconditions.checkArgument(type.isPrimitive()||type.isPrimitive());
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Preconditions.checkArgument(type.isPrimitive(),type.toString());
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Preconditions.checkArgument(type.isPrimitive(),type.getClass());
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102validate.notEmpty(absbreviationMap);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102validate.notNull(required);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102validate.notNull(absbreviationMap,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Lists.newArrayMap();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Lists.newArrayListWithCapacity(size());
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=Lists.newArrayListWithCapacity(size());
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abstractMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalHashMap<String,String>abstractMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalHashMap<String,String>abstractMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=newTreeMap<String,String>(type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkNotNull(declaration,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkNotNull(required);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkNotNull(type,declaration);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102absentMap=newLinkedHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102nullMap=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Lists.newArrayListWithType(typeName);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Lists.newHashMap(System.identityHashCode(this));
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap.Entry<String,String>entry=newArrayMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=Collections.emptyMap(type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkState(type>=null);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=Maps.newLinkedHashMap();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Collections.newHashMap(System.identityHashCode(this));
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.sort(this.type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap.Entry<String,String>entry=newArrayHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102validate.notNull(abbreviationMap,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Preconditions.checkArgument(type.isPrimitive()||type.isInterface());
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Preconditions.checkArgument(type.isPrimitive()||type.isEmpty());
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102privatestaticfinalMap<String,String>abbreviationMap=newTreeMap<String,String>(String.class,description);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102privatestaticfinalMap<String,String>abbreviationMap=newTreeMap<String,String>(String.class,null);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102abbreviationMap=newLinkedHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102abberMap.putAll(AbbreviationMap.class,abbreviationMap);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102AbbreviationMap.putAll(AbbreviationMap.class,abbreviationMap);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkAndFixClass(type,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Lists.newArrayHashMap();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Map<String,String>abbreviationMap=Collections.EMPTY_MAP;
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkArgument(type==ComparisonFailure.class,required);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102publicstaticfinalMap<String,String>abbreviationMap=newArrayMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102abstractMap=newLinkedHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102abstractMap=newMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkAndFixMethod(type,false);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkState(this.type==null);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=newHashMap<String,String>(System.identityHashCode(type));
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102validate.notNull(declaration);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102validate.notNull(abbreviationMap,method);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Map<String,String>abbreviationMap=Collections.emptyMap(System.identityHashCode(this));
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=Collections.emptyMapWithType(type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkArgument(type==null);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Lists.newArrayListWithType(type.toString());
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102finalMap<String,String>abbreviationMap=Lists.newArrayListWithCapacity(0);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102Validate.notNull(required);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>entry=newHashMap<String,String>();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=newTreeMap<String,String>(System.identityHashCode(type));
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102staticfinalMap<String,String>abbreviationMap=newTreeMap<String,String>(8);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.sort(this.type,type);
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java102ClassUtils.checkAndFixMethod(type,this);
