projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java230returnStringUtils.EMPTY;
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java230returncls.getName();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java230returncls==null?null:StringUtils.EMPTY;
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java230returncls==null?null:cls.getName();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java230
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java230Class<?>cls=cls.getSuperclass();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java230Class<?>cls=cls.getRawClass();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java230Class<?>primitive=cls.getDeclaredClass();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java230StringUtils.EMPTY;
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java230StringUtils.EMPTY=cls.getName();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java230if(cls==null){returnStringUtils.EMPTY;}
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java230StringUtils.copyPath(getPackageName(cls));
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java230Class<?>cls=cls.getClass();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java230returnStringUtils.EMPTY_STRING;
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java230returnStringUtils.EMPTY+cls.getName();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java230Class<?>cls=cls.getDeclaredClass();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java230Class<?>cls=cls.getReturnType();
projects/Lang41/src/java/org/apache/commons/lang/ClassUtils.java230returncls!=null?null:cls.getName();
