bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  boundaries.length;  i++)  {  [CE]  [FE]    AssertionError  [CONTEXT]    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;    [BUGGY]  for(int  i  =  0;  i  <  boundaries.length;  i++)  {  [BUGGY]  if  (Double.isInfinite(boundaries[1][i]  -  boundaries[0][i]))  {  final  double  max  =  Double.MAX_VALUE  +  boundaries[0][i];  final  NumberIsTooLargeException  e  =  new  NumberIsTooLargeException(boundaries[1][i],  max,  true);  e.getContext().addMessage(LocalizedFormats.OVERFLOW);  e.getContext().addMessage(LocalizedFormats.INDEX,  i);  throw  e;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  max  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  NumberIsTooLargeException  e  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4472135954999579	540	540	1	replace	for(int  i  =  0;  i  <  boundaries.length;  i++)  {	for  (int  i  =  0;  i  <  lB.length;  i++)  {  	non-compiled	[CE]  	24	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  lB.length;  i++)  {  [CE]  [FE]      AssertionError  [CONTEXT]    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;    [BUGGY]  for(int  i  =  1;  i  <  lB.length;  i++)  {  [BUGGY]  if  (Double.isInfinite(boundaries[1][i]  -  boundaries[0][i]))  {  final  double  max  =  Double.MAX_VALUE  +  boundaries[0][i];  final  NumberIsTooLargeException  e  =  new  NumberIsTooLargeException(boundaries[1][i],  max,  true);  e.getContext().addMessage(LocalizedFormats.OVERFLOW);  e.getContext().addMessage(LocalizedFormats.INDEX,  i);  throw  e;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  max  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  NumberIsTooLargeException  e  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4472135954999579	540	540	1	replace	for(int  i  =  1;  i  <  lB.length;  i++)  {	for  (int  i  =  0;  i  <  lB.length;  i++)  {  	non-compiled	[CE]  	24	None	replace
3	[BUG]  [BUGGY]    [CE]  [FE]        AssertionError  [CONTEXT]    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;    [BUGGY]    [BUGGY]  if  (Double.isInfinite(boundaries[1][i]  -  boundaries[0][i]))  {  final  double  max  =  Double.MAX_VALUE  +  boundaries[0][i];  final  NumberIsTooLargeException  e  =  new  NumberIsTooLargeException(boundaries[1][i],  max,  true);  e.getContext().addMessage(LocalizedFormats.OVERFLOW);  e.getContext().addMessage(LocalizedFormats.INDEX,  i);  throw  e;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  max  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  NumberIsTooLargeException  e  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4472135954999579	540	540	1	replace	  	for  (int  i  =  0;  i  <  lB.length;  i++)  {  	non-compiled	[CE]  	24	None	replace
4	[BUG]  [BUGGY]    boundaries[0]  =  lB;  boundaries[1]  =  uB;  [CE]  [FE]    AssertionError  [CONTEXT]    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;    [BUGGY]    boundaries[0]  =  lB;  boundaries[1]  =  uB;  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(boundaries[1][i]  -  boundaries[0][i]))  {  final  double  max  =  Double.MAX_VALUE  +  boundaries[0][i];  final  NumberIsTooLargeException  e  =  new  NumberIsTooLargeException(boundaries[1][i],  max,  true);  e.getContext().addMessage(LocalizedFormats.OVERFLOW);  e.getContext().addMessage(LocalizedFormats.INDEX,  i);  throw  e;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  max  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  NumberIsTooLargeException  e  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4472135954999579	540	540	1	replace	    boundaries[0]  =  lB;  boundaries[1]  =  uB;		non-compiled	[CE]  	25	None	add
5	[BUG]  [BUGGY]    boundaries[0]  =  uB;  boundaries[1]  =  lB;  [CE]  [FE]      AssertionError  [CONTEXT]    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;    [BUGGY]    boundaries[0]  =  uB;  boundaries[1]  =  lB;  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(boundaries[1][i]  -  boundaries[0][i]))  {  final  double  max  =  Double.MAX_VALUE  +  boundaries[0][i];  final  NumberIsTooLargeException  e  =  new  NumberIsTooLargeException(boundaries[1][i],  max,  true);  e.getContext().addMessage(LocalizedFormats.OVERFLOW);  e.getContext().addMessage(LocalizedFormats.INDEX,  i);  throw  e;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  max  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  NumberIsTooLargeException  e  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4472135954999579	540	540	1	replace	    boundaries[0]  =  uB;  boundaries[1]  =  lB;		non-compiled	[CE]  	25	None	add
6	[BUG]  [BUGGY]    boundaries[0]  =  uB;  boundaries[1]  =  uB;  [CE]  [FE]        AssertionError  [CONTEXT]    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;    [BUGGY]    boundaries[0]  =  uB;  boundaries[1]  =  uB;  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(boundaries[1][i]  -  boundaries[0][i]))  {  final  double  max  =  Double.MAX_VALUE  +  boundaries[0][i];  final  NumberIsTooLargeException  e  =  new  NumberIsTooLargeException(boundaries[1][i],  max,  true);  e.getContext().addMessage(LocalizedFormats.OVERFLOW);  e.getContext().addMessage(LocalizedFormats.INDEX,  i);  throw  e;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  max  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  NumberIsTooLargeException  e  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4472135954999579	540	540	1	replace	    boundaries[0]  =  uB;  boundaries[1]  =  uB;		non-compiled	[CE]  	25	None	add
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  borders.length;  i++)  {  [CE]  [FE]    AssertionError  [CONTEXT]    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;    [BUGGY]  for(int  i  =  0;  i  <  borders.length;  i++)  {  [BUGGY]  if  (Double.isInfinite(boundaries[1][i]  -  boundaries[0][i]))  {  final  double  max  =  Double.MAX_VALUE  +  boundaries[0][i];  final  NumberIsTooLargeException  e  =  new  NumberIsTooLargeException(boundaries[1][i],  max,  true);  e.getContext().addMessage(LocalizedFormats.OVERFLOW);  e.getContext().addMessage(LocalizedFormats.INDEX,  i);  throw  e;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  max  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  NumberIsTooLargeException  e  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4472135954999579	540	540	1	replace	for(int  i  =  0;  i  <  borders.length;  i++)  {	for  (int  i  =  0;  i  <  lB.length;  i++)  {  	non-compiled	[CE]  	24	None	replace
8	[BUG]  [BUGGY]    boundaries[0]  =  lB;  boundaries[2]  =  uB;  [CE]  [FE]    AssertionError  [CONTEXT]    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;    [BUGGY]    boundaries[0]  =  lB;  boundaries[2]  =  uB;  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(boundaries[1][i]  -  boundaries[0][i]))  {  final  double  max  =  Double.MAX_VALUE  +  boundaries[0][i];  final  NumberIsTooLargeException  e  =  new  NumberIsTooLargeException(boundaries[1][i],  max,  true);  e.getContext().addMessage(LocalizedFormats.OVERFLOW);  e.getContext().addMessage(LocalizedFormats.INDEX,  i);  throw  e;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  max  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  NumberIsTooLargeException  e  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4472135954999579	540	540	1	replace	    boundaries[0]  =  lB;  boundaries[2]  =  uB;		non-compiled	[CE]  	25	None	add
9	[BUG]  [BUGGY]    boundaries[0]  =  lB;  [CE]  [FE]    AssertionError  [CONTEXT]    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;    [BUGGY]    boundaries[0]  =  lB;  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(boundaries[1][i]  -  boundaries[0][i]))  {  final  double  max  =  Double.MAX_VALUE  +  boundaries[0][i];  final  NumberIsTooLargeException  e  =  new  NumberIsTooLargeException(boundaries[1][i],  max,  true);  e.getContext().addMessage(LocalizedFormats.OVERFLOW);  e.getContext().addMessage(LocalizedFormats.INDEX,  i);  throw  e;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  max  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  NumberIsTooLargeException  e  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4472135954999579	540	540	1	replace	    boundaries[0]  =  lB;		non-compiled	[CE]  	25	None	add
10	[BUG]  [BUGGY]    boundaries[0]  =  lB;  boundaries[1]  =  uB.length;  [CE]  [FE]      AssertionError  [CONTEXT]    throw  new  MathUnsupportedOperationException();  }  else  {  boundaries  =  new  double[2][];  boundaries[0]  =  lB;  boundaries[1]  =  uB;    [BUGGY]    boundaries[0]  =  lB;  boundaries[1]  =  uB.length;  [BUGGY]  for  (int  i  =  0;  i  <  lB.length;  i++)  {  if  (Double.isInfinite(boundaries[1][i]  -  boundaries[0][i]))  {  final  double  max  =  Double.MAX_VALUE  +  boundaries[0][i];  final  NumberIsTooLargeException  e  =  new  NumberIsTooLargeException(boundaries[1][i],  max,  true);  e.getContext().addMessage(LocalizedFormats.OVERFLOW);  e.getContext().addMessage(LocalizedFormats.INDEX,  i);  throw  e;  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  checkParameters  [RETURN_TYPE]  void  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  hasFiniteBounds  hasInfiniteBounds  hsig  isActiveCMA  isMinimize  isRepairMode  double[]  fitness  fitnessHistory  guess  init  inputSigma  lB  pcCol  sqrtDiagC  uB  RealMatrix  B  BD  C  D  arx  arxk  arz  bestArx  bestArz  diagC  diagD  pc  ps  weights  xmean  xold  zmean  double  DEFAULT_STOPFITNESS  bestFitness  bestValue  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  historyBest  historyWorst  logMu2  max  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  worstFitness  double[][]  boundaries  NumberIsTooLargeException  e  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  i  index  iterations  k  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.4472135954999579	540	540	1	replace	    boundaries[0]  =  lB;  boundaries[1]  =  uB.length;		non-compiled	[CE]  	25	None	add
