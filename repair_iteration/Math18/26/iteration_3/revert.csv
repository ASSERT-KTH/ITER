projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=bestValue.doubleValue();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=bestValue;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=bestValue.value();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366push(fitnessHistory,bestValue);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366push(bestValue,fitnessHistory);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366push(isMinimize?bestValue:bestValue);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=Math.max(bestValue,maxIterations);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=Math.max(bestValue,bestValue);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=getMaximumFitness();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=getBestFitness();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366push(bestValue,dimension);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366ensureFitnessHistory(bestValue);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=-bestValue;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=maxIterations;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366push(isMinimize?bestValue:-bestValue);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366push(isActiveCMA?bestValue:bestValue);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=Math.max(bestValue,dimension);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=Math.min(bestValue,maxIterations);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=bestValue.doubleValue()+1;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366pressFitness(bestValue);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=getMaximumFitness()+1;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=Math.max(bestValue,maxIterations-1);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=getFitnessHistory();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=Math.min(bestValue,bestValue);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366push(isRepairMode?bestValue:bestValue);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366ensureCapacity(isMinimize?bestValue:-bestValue);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue-=bestValue;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=getMinimumFitness();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue-=dimension;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue-=guess;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=getFitness();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366push(dimension,bestValue);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366push(groomed,bestValue);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366push(isActiveCMA?bestValue:-bestValue);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=-bestValue.doubleValue();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=getBestFitness()/2;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=Math.max(bestValue,dimension-1);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=Math.min(bestValue,maxIterations-1);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue-=maxIterations;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366push(isMinimize?bestValue:-1);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=Math.min(bestValue,dimension);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366ensureFitness(bestValue);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366ensureFitnessHistory(bestValue,statistics);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366ensureCapacity(isMinimize?bestValue:-1);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=getFitnessHistory()/2;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366pressFitness(isMinimize?bestValue:bestValue);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=getBestValue();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366add(bestValue,dimension);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=Math.max(bestValue,maxFitness);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=-bestValue+1;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366ensureCapacity(isMaximize?bestValue:-bestValue);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue-=Math.max(bestValue,maxIterations);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue=getFitnessHistory()-1;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366PressedFitness(bestValue);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366push(isRepairMode?bestValue:-bestValue);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366push(bestValue?isRepairMode:bestValue);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java366bestValue-=DEFAULT_STOPFITNESS;
