bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    this.data[0]  =  new  double[1];  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    this.data[0]  =  new  double[1];  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	247	247	1	replace	    this.data[0]  =  new  double[1];		non-compiled	[CE]  ')'  expected	12	None	add
2	[BUG]  [BUGGY]    this.sigmaHistory  =  new  Double(this.historySize);  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    this.sigmaHistory  =  new  Double(this.historySize);  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	247	247	1	replace	    this.sigmaHistory  =  new  Double(this.historySize);		non-compiled	[CE]  ')'  expected	12	None	add
3	[BUG]  [BUGGY]    this.sigmaHistory  =  new  Double(getSigmaHistory());  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    this.sigmaHistory  =  new  Double(getSigmaHistory());  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	247	247	1	replace	    this.sigmaHistory  =  new  Double(getSigmaHistory());		non-compiled	[CE]  ')'  expected	12	None	add
4	[BUG]  [BUGGY]  this.data[0]  =  new  Double(this.data[0].doubleValue());  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]  this.data[0]  =  new  Double(this.data[0].doubleValue());  [BUGGY]    [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	247	247	1	replace	this.data[0]  =  new  Double(this.data[0].doubleValue());	}  	non-compiled	[CE]  ')'  expected	11	None	replace
5	[BUG]  [BUGGY]    this(DEFAULT_RANDOMGENERATOR,  DEFAULT_CHECKFEASABLECOUNT);  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    this(DEFAULT_RANDOMGENERATOR,  DEFAULT_CHECKFEASABLECOUNT);  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	247	247	1	replace	    this(DEFAULT_RANDOMGENERATOR,  DEFAULT_CHECKFEASABLECOUNT);		non-compiled	[CE]  ')'  expected	12	None	add
6	[BUG]  [BUGGY]    this(DEFAULT_RANDOMGENERATOR);  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    this(DEFAULT_RANDOMGENERATOR);  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	247	247	1	replace	    this(DEFAULT_RANDOMGENERATOR);		non-compiled	[CE]  ')'  expected	12	None	add
7	[BUG]  [BUGGY]    this(DEFAULT_RANDOMGENERATOR,  DEFAULT_SIZE);  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    this(DEFAULT_RANDOMGENERATOR,  DEFAULT_SIZE);  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	247	247	1	replace	    this(DEFAULT_RANDOMGENERATOR,  DEFAULT_SIZE);		non-compiled	[CE]  ')'  expected	12	None	add
8	[BUG]  [BUGGY]    this.statistics  =  new  double[DEFAULT_CHECKFEASABLECOUNT];  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    this.statistics  =  new  double[DEFAULT_CHECKFEASABLECOUNT];  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	247	247	1	replace	    this.statistics  =  new  double[DEFAULT_CHECKFEASABLECOUNT];		non-compiled	[CE]  ')'  expected	12	None	add
9	[BUG]  [BUGGY]    this.statistics  =  new  double[DEFAULT_CHECKFEASABLECOUNT  +  1];  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    this.statistics  =  new  double[DEFAULT_CHECKFEASABLECOUNT  +  1];  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	247	247	1	replace	    this.statistics  =  new  double[DEFAULT_CHECKFEASABLECOUNT  +  1];		non-compiled	[CE]  ')'  expected	12	None	add
10	[BUG]  [BUGGY]    this.statistics  =  new  double[DEFAULT_SIZE];  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  public  CMAESOptimizer()  {  this(0);  [BUGGY]    this.statistics  =  new  double[DEFAULT_SIZE];  [BUGGY]  }  [CLASS]  CMAESOptimizer  DoubleIndex  FitnessFunction  [METHOD]  <init>  [RETURN_TYPE]  CMAESOptimizer()  [VARIABLES]  boolean  DEFAULT_ISACTIVECMA  generateStatistics  isActiveCMA  isMinimize  isRepairMode  double[]  fitnessHistory  inputSigma  RealMatrix  B  BD  C  D  diagC  diagD  pc  ps  weights  xmean  double  DEFAULT_STOPFITNESS  cc  ccov1  ccov1Sep  ccovmu  ccovmuSep  chiN  cs  damps  logMu2  mueff  normps  sigma  stopFitness  stopTolFun  stopTolHistFun  stopTolUpX  stopTolX  value  valueRange  double[][]  boundaries  List  statisticsDHistory  statisticsFitnessHistory  statisticsMeanHistory  statisticsSigmaHistory  int  DEFAULT_CHECKFEASABLECOUNT  DEFAULT_DIAGONALONLY  DEFAULT_MAXITERATIONS  checkFeasableCount  diagonalOnly  dimension  historySize  index  iterations  lambda  maxIterations  mu  RandomGenerator  DEFAULT_RANDOMGENERATOR  random  	projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java	0.5773502691896258	247	247	1	replace	    this.statistics  =  new  double[DEFAULT_SIZE];		non-compiled	[CE]  ')'  expected	12	None	add
