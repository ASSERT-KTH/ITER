projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java396
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java396if(i==checkFeasableCount||fitfun.isFeasible(arxk.getColumn(0))){arxk=xmean.add(times(diagD,arz.getColumnMatrix(k)).scalarMultiply(sigma));}
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java396if(i==checkFeasableCount||fitfun.isFeasible(arxk.getColumn(0))){arxk=xmean.add(times(diagD,arz.getRowMatrix(k)).scalarMultiply(sigma));}
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java396copyColumn(arxk,0,arx,k);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java396copyColumn(arxk,0,arindex,k);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java396copyColumn(arxk,0,arz,k);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java396copyColumn(arxk,0,arx,i);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java396Arxk=xmean.add(times(diagD,arz.getColumnMatrix(k)).scalarMultiply(sigma));
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java396Arxk=xmean.add(times(diagD,arz.getRowMatrix(k)).scalarMultiply(sigma));
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java396Arxk=xmean.add(times(diagD,arz.getRangeMatrix(k)).scalarMultiply(sigma));
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java396k=xmean.add(times(diagD,arz.getColumnMatrix(k)).scalarMultiply(sigma));
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java396k=xmean.add(times(diagD,arz.getRowMatrix(k)).scalarMultiply(sigma));
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java396copyColumn(arxk,0,arx,dimension);
