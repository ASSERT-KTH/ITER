projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476breakgenerationLoop;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476breakiterations;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476breakthis.generationLoop;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.getValue();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.convert(lastResult,isMinimize?bestFitness:-bestFitness);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.convert(lastResult,isMinimize?bestFitness:-1);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476breakgenerationLoop+1e7;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=current.converged(iterations,newdouble[lambda]);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=current.converged(iterations,newPointValuePair(lastResult));
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476breakthis;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(iterations,current,lastResult);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(iterations,current);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476if(lastResult==null){thrownewIllegalArgumentException("");}
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476bestValue=bestArx.getValue();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(current,iterations);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476breakgenerationLoop+1;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476breakgenerationLoop+1e0;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476bestValue=bestArx.getColumn();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=current.converged(iterations,newPointValuePair(current,lastResult));
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=current.converged(iterations,newPointValuePair(current));
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=iterations.converged(current,newdouble[lambda]);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=dataArea.converged(iterations,newdouble[lambda]);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.getValue(),isMinimize);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(lastResult,iterations,current);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(current,iterations,lastResult);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476breakthis.generationLoop-1e7;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476thrownewIllegalArgumentException("");
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476break;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.convert(isMinimize?bestFitness:-bestFitness);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.convert(isMinimize,bestFitness?lastResult:-bestFitness);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476aughtExceptionHandler.throwInternal();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476aughtExceptionHandler.throwAsStatementException("");
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476removeAllIterations(current);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476if(lastResult==null){thrownewIllegalArgumentException("");}if(lastResult==null){thrownewIllegalArgumentException("");}
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.convert(isMinimize?bestFitness:-1);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.convert(isMinimize,bestFitness?lastResult:-1);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.convert(isMinimize?bestFitness:-repairMode);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476breakthis.generationLoop+1e7;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(iterations,current,isMinimize);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476bestValue=bestArx.getColumn(1);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(lastResult,iterations,lastResult);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476aughtExceptionHandler.throwAsIgnoredException("");
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476aughtExceptionHandler.throwAsIllegalArgumentException("");
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476if(lastResult==null){breakiterations;}
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.convert(isMinimize,bestFitness?bestFitness:-1);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(iterations,current,lastResult,isMinimize);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476continueiterations;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(iterations,current,null);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=current.converged(iterations,newPointValuePair(lastResult),isMinimize);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=newPointValuePair(current.getColumn(),isMinimize?bestFitness:-lastResult);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.getValue(),isMinimize?bestValue:bestArx.getValue();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476[Delete]
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476aughtExceptionHandler(this,DEFAULT_STOPFITNESS,bestValue);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.convert(bestFitness,isMinimize?lastResult:-bestFitness);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(current,iterations,null);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476breakthis.generationLoop+1;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476breakthis.generationLoop+1e0;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=current.converged(iterations,newPointValuePair(current,isMinimize));
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=current.converged(iterations,newPointValuePair(lastResult,iterations));
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=isMinimize?bestFitness:current.convert(isMinimize?bestFitness:-1);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.convert(isMinimize,bestFitness?bestFitness:0);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476bestValue=current.getValue();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476BestValuebestValue=current.getValue();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult.setValue(getConvergenceChecker().converged(iterations,current));
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476MutableAsStatementException.throwAsStatementException("");
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476Alerts.throwAsStatementException("");
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(iterations,lastResult,current);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476assistExceptionHandler.throwInternal();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476_throwInternal();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476if(lastResult==null){breakgenerationLoop;}
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.convert(bestFitness,isMinimize?lastResult:-1);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.convert(isActiveCMA,isMinimize?lastResult:-bestFitness);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476Throwables.thrownewIllegalArgumentException("");
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=current.converged(iterations,newPointValuePair(current,isMinimize),isRepairMode);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=newPointValuePair(current.getColumn(),isMinimize?bestFitness:-bestFitness);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(iterations,current,lastResult,isActiveCMA);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(iterations,current,firstResult,isMinimize);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(iterations,current,isActiveCMA);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476if(bestValue!=null){aughtExceptionHandler(this,DEFAULT_STOPFITNESS,bestValue);}
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476if(isActiveCMA){aughtExceptionHandler(this,DEFAULT_STOPFITNESS,bestValue);}
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.getValue(),isActiveCMA);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.getValue(),isRepairMode);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.convert(isMinimize,bestFitness?lastResult:0);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.getValue(),isActiveCMA?bestValue:bestArx.getValue();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476breakthis.generationLoop-1e0;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476breakthis.generationLoop-1e;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476removeAllIterations(lastResult);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476removeAllIterations(iterations);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476bestValue=current.getColumn(1);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476BestValuebestValue=current.getColumn(1);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476bestValue=current.getColumn();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(iterations,lastResult,lastResult);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476continueiterations-1;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476continueiterations&&isMinimize;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=iterations.converged(current,newdouble[lambda/4]);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=iterations.converged(current,newdouble[lambda/2]);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(iterations,current,null,isMinimize);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476continuegenerationLoop;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476Exploluated.throwInternal();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476bestValue=bestArx.getRowValue();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(current,iterations,current,lastResult);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.convert(isMinimize,bestFitness?lastResult:-lastResult);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476removeAllIterations(current,iterations);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=current.converged(iterations,newPointValuePair(lastResult,isMinimize));
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476breakthis.generationLoop-1;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=current.converged(iterations,newPointValuePair(isMinimize));
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=current.converged(iterations,newPointValuePair(current),isMinimize);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=current.converged(iterations,newPointValuePair(current,isMinimize),isMinimize);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(current,iterations,current);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(current,iterations,lastResult,isMinimize);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476if(bestValue==null){aughtExceptionHandler(this,DEFAULT_STOPFITNESS,bestValue);}
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=current.converged(iterations,1);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=iterations.converged(newdouble[lambda]);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=bestArx.convert(isMinimize?bestFitness:-1);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.convert(historyBest,isMinimize?lastResult:-lastResult);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.convert(bestFitness,isActiveCMA?lastResult:-lastResult);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476bestValue=bestArx.getRow(1);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476safeTree();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476aughtException("");
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476bestValue=this.bestArx.getValue();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=bestArx.convert(isMinimize?bestFitness:-bestFitness);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(iterations,current,dataArea,isMinimize);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476bestValue=bestArx.getRowValue(1);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.convert(isMinimize?bestFitness:-lastResult);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476ThrownewIllegalArgumentException("");
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(iterations,current,isRepairMode);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476Alert.throwAsStatementException("");
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=current.converged(iterations,newPointValuePair(current,lastResult),isMinimize);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=bestFitness.convert(isMinimize?current:-bestFitness);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(iterations,current,result,isMinimize);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476breakgenerationLoop-1e7;
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476sigma=getConvergenceChecker().converged(iterations,current,firstResult);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476}
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.convert(isRepairMode,isMinimize?bestFitness:-1);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476Exploluates.throwInternal();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=current.convert(bestFitness,isMinimize?lastResult:-lastResult);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476if(bestValue==DEFAULT_STOPFITNESS){aughtExceptionHandler(this,DEFAULT_STOPFITNESS,bestValue);}
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java476lastResult=bestArx.convert(isMinimize?lastResult:-1);
