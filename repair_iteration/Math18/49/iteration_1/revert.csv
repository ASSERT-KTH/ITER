projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412hsig=updateEvolutionPaths(zmean,xold);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412booleandiagnosticOnly=updateEvolutionPaths(diagonalOnly,xold);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412hsig=updateEvolutionPaths(diagonalOnly,xold);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412if(diagonalOnly<=0){
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412if(hsig<=0){
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412booleandiagnosticOnly=updateDiagonalOnly(zmean,xold);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412booleandiagnosticOnly=updateDiagonalOnly(hsig,xold);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412if(hsig<0){
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412booleandiagnosticOnly=hsig.isActive();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412booleandiagnosticOnly=updateDiagonalOnly(zmean,hsig);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412booleandiagnosticOnly=updateEvolutionOnly(zmean,xold);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412if(hsig!=DEFAULT_ISACTIVECMA){
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412if(hsig==0){
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412hsig=updateEvolutionPaths(diagonalOnly,zmean);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412booleandiagnosticOnly=updateEvolutionPaths(diagonalOnly,hsig);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412booleandiagnosticOnly=updateCovariance(diagonalOnly,xold);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412hsig=updateEvolutionPaths(zmean,arindex);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412hsig=updateEvolutionPaths(xmean,zmean);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412if(hsig==DEFAULT_ISACTIVECMA){
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412booleandiagnosticOnly=updateEvolutionOnly(hsig,xold);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412if(hsig!=0){
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412hsig=updateEvolutionPaths(hsig,xold);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412booleandiagnosticOnly=updateEvolutionPaths(diagonalOnly,zmean);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412if(hsig>0){
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412if(hsig){
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412booleandiagnosticOnly=updateDiagonalOnly(hsig,xmean);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412booleandiagnosticOnly=hsig.isRepairMode();
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412hsig=updateEvolutionPaths(zmean,arz);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412hsig=updateStatistics(zmean,xold);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412booleandiagnosticOnly=updateCovarianceDiagonalOnly(diagonalOnly,xold);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412booleandiagnosticOnly=updateEvolutionPaths(zmean,xold);
projects/Math18/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java412booleandiagnosticOnly=updateEvolutionPaths(diagnal,xold);
