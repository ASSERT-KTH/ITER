projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java71
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java71CpioArchiveOutputStreamcpioArchiveOutputStream=newCpioArchiveOutputStream();names.add(cpioArchiveOutputStream);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java71CpioArchiveOutputStreamcpioArchiveOutputStream=getCpioArchiveOutputStream();names.add(cpioArchiveOutputStream);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java71CpioArchiveOutputStreamcpioArchiveOutputStream=newCpioArchiveOutputStream();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java71CpioArchiveOutputStreamcpioArchiveOutputStream=getCpioArchiveOutputStream();names.addAll(cpioArchiveOutputStream);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java71CpioArchiveOutputStreamcpioArchiveOutputStream=newCpioArchiveOutputStream();names.addAll(cpioArchiveOutputStream);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java71if(names==null){for(inti=0;i<names.size();++i){names.add(newHashMap());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java71if(names==null){for(inti=0;i<names.size();++i){names.put(i,newHashMap());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java71Iterator<Map.Entry<String,Object>entry=names.entrySet().iterator();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java71NodeTraversal.traverse(compiler,newCpioArchiveOutputStream());names.addAll(Arrays.asList(names));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java71Iterator<Map.Entry<String,Object>entry=names.entrySet().iterator().next();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java71NodeTraversal.traverse(compiler,newCpioArchiveOutputStream());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java71if(names==null){names.addAll(newHashMap());}else{names.addAll(Arrays.asList(names));}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java71NodeTraversal.traverse(compiler,newCpioArchiveOutputStream());names.addAll(false);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java71NodeTraversal.traverse(compiler,this).traverse(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java71CpioArchiveOutputStreamoutputStream=newCpioArchiveOutputStream();names.add(outputStream);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java71NodeTraversal.traverse(this,CpioArchiveOutputStream.class);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java71CpioArchiveOutputStreamoutputStream=newCpioArchiveOutputStream();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java71CpioArchiveOutputStreamout=newCpioArchiveOutputStream();
