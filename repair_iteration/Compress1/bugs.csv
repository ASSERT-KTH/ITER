bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] public CpioArchiveOutputStream(final OutputStream out, final short format) { [FE] EOFException [CONTEXT] [BUGGY] public CpioArchiveOutputStream(final OutputStream out, final short format) { [BUGGY] this.out = new FilterOutputStream(out); setFormat(format); } [CLASS] CpioArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,short)  OutputStream out final short format [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	85	85	1	replace	
2	[BUG] [BUGGY] [FE] EOFException [CONTEXT] [BUGGY] [BUGGY] public CpioArchiveOutputStream(final OutputStream out, final short format) { this.out = new FilterOutputStream(out); setFormat(format); } [CLASS] CpioArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,short)  OutputStream out final short format [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	85	85	1	add	
3	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private CpioArchiveEntry cpioEntry; [CLASS] CpioArchiveOutputStream  [VARIABLES] 	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	63	63	1	replace	
4	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private CpioArchiveEntry cpioEntry; [CLASS] CpioArchiveOutputStream  [VARIABLES] 	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	63	63	1	add	
5	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private boolean finished; [CLASS] CpioArchiveOutputStream  [VARIABLES] 	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	67	67	1	replace	
6	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private boolean finished; [CLASS] CpioArchiveOutputStream  [VARIABLES] 	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	67	67	1	add	
7	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private short entryFormat = FORMAT_NEW; [CLASS] CpioArchiveOutputStream  [VARIABLES] 	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	69	69	1	replace	
8	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private short entryFormat = FORMAT_NEW; [CLASS] CpioArchiveOutputStream  [VARIABLES] 	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	69	69	1	add	
9	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private final HashMap names = new HashMap(); [CLASS] CpioArchiveOutputStream  [VARIABLES] 	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	71	71	1	replace	
10	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private final HashMap names = new HashMap(); [CLASS] CpioArchiveOutputStream  [VARIABLES] 	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	71	71	1	add	
11	[BUG] [BUGGY] this.out = new FilterOutputStream(out); [FE] EOFException [CONTEXT] public CpioArchiveOutputStream(final OutputStream out, final short format) { [BUGGY] this.out = new FilterOutputStream(out); [BUGGY] setFormat(format); } [CLASS] CpioArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,short)  OutputStream out final short format [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	86	86	1	replace	
12	[BUG] [BUGGY] [FE] EOFException [CONTEXT] public CpioArchiveOutputStream(final OutputStream out, final short format) { [BUGGY] [BUGGY] this.out = new FilterOutputStream(out); setFormat(format); } [CLASS] CpioArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,short)  OutputStream out final short format [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	86	86	1	add	
13	[BUG] [BUGGY] setFormat(format); [FE] EOFException [CONTEXT] public CpioArchiveOutputStream(final OutputStream out, final short format) { this.out = new FilterOutputStream(out); [BUGGY] setFormat(format); [BUGGY] } [CLASS] CpioArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,short)  OutputStream out final short format [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	87	87	1	replace	
14	[BUG] [BUGGY] [FE] EOFException [CONTEXT] public CpioArchiveOutputStream(final OutputStream out, final short format) { this.out = new FilterOutputStream(out); [BUGGY] [BUGGY] setFormat(format); } [CLASS] CpioArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,short)  OutputStream out final short format [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	87	87	1	add	
15	[BUG] [BUGGY] } [FE] EOFException [CONTEXT] public CpioArchiveOutputStream(final OutputStream out, final short format) { this.out = new FilterOutputStream(out); setFormat(format); [BUGGY] } [BUGGY]  [CLASS] CpioArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,short)  OutputStream out final short format [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	88	88	1	replace	
16	[BUG] [BUGGY] [FE] EOFException [CONTEXT] public CpioArchiveOutputStream(final OutputStream out, final short format) { this.out = new FilterOutputStream(out); setFormat(format); [BUGGY] [BUGGY] } [CLASS] CpioArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,short)  OutputStream out final short format [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	88	88	1	add	
17	[BUG] [BUGGY] this(out, FORMAT_NEW); [FE] EOFException [CONTEXT] public CpioArchiveOutputStream(final OutputStream out) { [BUGGY] this(out, FORMAT_NEW); [BUGGY] } [CLASS] CpioArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream)  OutputStream out [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	98	98	1	replace	
18	[BUG] [BUGGY] [FE] EOFException [CONTEXT] public CpioArchiveOutputStream(final OutputStream out) { [BUGGY] [BUGGY] this(out, FORMAT_NEW); } [CLASS] CpioArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream)  OutputStream out [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	98	98	1	add	
19	[BUG] [BUGGY] } [FE] EOFException [CONTEXT] public CpioArchiveOutputStream(final OutputStream out) { this(out, FORMAT_NEW); [BUGGY] } [BUGGY]  [CLASS] CpioArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream)  OutputStream out [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	99	99	1	replace	
20	[BUG] [BUGGY] [FE] EOFException [CONTEXT] public CpioArchiveOutputStream(final OutputStream out) { this(out, FORMAT_NEW); [BUGGY] [BUGGY] } [CLASS] CpioArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream)  OutputStream out [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	99	99	1	add	
21	[BUG] [BUGGY] if (this.closed) { [FE] EOFException [CONTEXT] private void ensureOpen() throws IOException { [BUGGY] if (this.closed) { [BUGGY] throw new IOException("Stream closed"); } } [CLASS] CpioArchiveOutputStream [METHOD] ensureOpen [RETURN_TYPE] void  [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	108	108	1	replace	
22	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private void ensureOpen() throws IOException { [BUGGY] [BUGGY] if (this.closed) { throw new IOException("Stream closed"); } } [CLASS] CpioArchiveOutputStream [METHOD] ensureOpen [RETURN_TYPE] void  [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	108	108	1	add	
23	[BUG] [BUGGY] } [FE] EOFException [CONTEXT] private void ensureOpen() throws IOException { if (this.closed) { throw new IOException("Stream closed"); } [BUGGY] } [BUGGY]  [CLASS] CpioArchiveOutputStream [METHOD] ensureOpen [RETURN_TYPE] void  [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	
24	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private void ensureOpen() throws IOException { if (this.closed) { throw new IOException("Stream closed"); } [BUGGY] [BUGGY] } [CLASS] CpioArchiveOutputStream [METHOD] ensureOpen [RETURN_TYPE] void  [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	add	
26	[BUG] [BUGGY] break; [FE] EOFException [CONTEXT] private void setFormat(final short format) { switch (format) { case FORMAT_NEW: case FORMAT_NEW_CRC: case FORMAT_OLD_ASCII: case FORMAT_OLD_BINARY: [BUGGY] break; [BUGGY] default: throw new IllegalArgumentException("Unknown header type"); } synchronized (this) { this.entryFormat = format; } } [CLASS] CpioArchiveOutputStream [METHOD] setFormat [RETURN_TYPE] void  final short format [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	
27	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private void setFormat(final short format) { switch (format) { case FORMAT_NEW: case FORMAT_NEW_CRC: case FORMAT_OLD_ASCII: case FORMAT_OLD_BINARY: [BUGGY] [BUGGY] break; default: throw new IllegalArgumentException("Unknown header type"); } synchronized (this) { this.entryFormat = format; } } [CLASS] CpioArchiveOutputStream [METHOD] setFormat [RETURN_TYPE] void  final short format [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	
28	[BUG] [BUGGY] synchronized (this) { [FE] EOFException [CONTEXT] switch (format) { case FORMAT_NEW: case FORMAT_NEW_CRC: case FORMAT_OLD_ASCII: case FORMAT_OLD_BINARY: break; default: throw new IllegalArgumentException("Unknown header type"); } [BUGGY] synchronized (this) { [BUGGY] this.entryFormat = format; } } [CLASS] CpioArchiveOutputStream [METHOD] setFormat [RETURN_TYPE] void  final short format [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	131	131	1	replace	
29	[BUG] [BUGGY] [FE] EOFException [CONTEXT] switch (format) { case FORMAT_NEW: case FORMAT_NEW_CRC: case FORMAT_OLD_ASCII: case FORMAT_OLD_BINARY: break; default: throw new IllegalArgumentException("Unknown header type"); } [BUGGY] [BUGGY] synchronized (this) { this.entryFormat = format; } } [CLASS] CpioArchiveOutputStream [METHOD] setFormat [RETURN_TYPE] void  final short format [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	131	131	1	add	
30	[BUG] [BUGGY] this.entryFormat = format; [FE] EOFException [CONTEXT] case FORMAT_NEW: case FORMAT_NEW_CRC: case FORMAT_OLD_ASCII: case FORMAT_OLD_BINARY: break; default: throw new IllegalArgumentException("Unknown header type"); } synchronized (this) { [BUGGY] this.entryFormat = format; [BUGGY] } } [CLASS] CpioArchiveOutputStream [METHOD] setFormat [RETURN_TYPE] void  final short format [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	132	132	1	replace	
31	[BUG] [BUGGY] [FE] EOFException [CONTEXT] case FORMAT_NEW: case FORMAT_NEW_CRC: case FORMAT_OLD_ASCII: case FORMAT_OLD_BINARY: break; default: throw new IllegalArgumentException("Unknown header type"); } synchronized (this) { [BUGGY] [BUGGY] this.entryFormat = format; } } [CLASS] CpioArchiveOutputStream [METHOD] setFormat [RETURN_TYPE] void  final short format [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	132	132	1	add	
32	[BUG] [BUGGY] } [FE] EOFException [CONTEXT] case FORMAT_NEW_CRC: case FORMAT_OLD_ASCII: case FORMAT_OLD_BINARY: break; default: throw new IllegalArgumentException("Unknown header type"); } synchronized (this) { this.entryFormat = format; [BUGGY] } [BUGGY] } [CLASS] CpioArchiveOutputStream [METHOD] setFormat [RETURN_TYPE] void  final short format [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	
33	[BUG] [BUGGY] [FE] EOFException [CONTEXT] case FORMAT_NEW_CRC: case FORMAT_OLD_ASCII: case FORMAT_OLD_BINARY: break; default: throw new IllegalArgumentException("Unknown header type"); } synchronized (this) { this.entryFormat = format; [BUGGY] [BUGGY] } } [CLASS] CpioArchiveOutputStream [METHOD] setFormat [RETURN_TYPE] void  final short format [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	add	
34	[BUG] [BUGGY] } [FE] EOFException [CONTEXT] case FORMAT_OLD_ASCII: case FORMAT_OLD_BINARY: break; default: throw new IllegalArgumentException("Unknown header type"); } synchronized (this) { this.entryFormat = format; } [BUGGY] } [BUGGY]  [CLASS] CpioArchiveOutputStream [METHOD] setFormat [RETURN_TYPE] void  final short format [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	134	134	1	replace	
35	[BUG] [BUGGY] [FE] EOFException [CONTEXT] case FORMAT_OLD_ASCII: case FORMAT_OLD_BINARY: break; default: throw new IllegalArgumentException("Unknown header type"); } synchronized (this) { this.entryFormat = format; } [BUGGY] [BUGGY] } [CLASS] CpioArchiveOutputStream [METHOD] setFormat [RETURN_TYPE] void  final short format [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	134	134	1	add	
36	[BUG] [BUGGY] ensureOpen(); [FE] EOFException [CONTEXT] public void putNextEntry(final CpioArchiveEntry e) throws IOException { [BUGGY] ensureOpen(); [BUGGY] if (this.cpioEntry != null) { closeArchiveEntry(); // close previous entry } if (e.getTime() == -1) { e.setTime(System.currentTimeMillis()); }   if (e.getFormat() == -1) { [CLASS] CpioArchiveOutputStream [METHOD] putNextEntry [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	150	150	1	replace	
37	[BUG] [BUGGY] [FE] EOFException [CONTEXT] public void putNextEntry(final CpioArchiveEntry e) throws IOException { [BUGGY] [BUGGY] ensureOpen(); if (this.cpioEntry != null) { closeArchiveEntry(); // close previous entry } if (e.getTime() == -1) { e.setTime(System.currentTimeMillis()); }   if (e.getFormat() == -1) { [CLASS] CpioArchiveOutputStream [METHOD] putNextEntry [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	150	150	1	add	
38	[BUG] [BUGGY] if (this.cpioEntry != null) { [FE] EOFException [CONTEXT] public void putNextEntry(final CpioArchiveEntry e) throws IOException { ensureOpen(); [BUGGY] if (this.cpioEntry != null) { [BUGGY] closeArchiveEntry(); // close previous entry } if (e.getTime() == -1) { e.setTime(System.currentTimeMillis()); }   if (e.getFormat() == -1) { e.setFormat(this.entryFormat); [CLASS] CpioArchiveOutputStream [METHOD] putNextEntry [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	151	151	1	replace	
39	[BUG] [BUGGY] [FE] EOFException [CONTEXT] public void putNextEntry(final CpioArchiveEntry e) throws IOException { ensureOpen(); [BUGGY] [BUGGY] if (this.cpioEntry != null) { closeArchiveEntry(); // close previous entry } if (e.getTime() == -1) { e.setTime(System.currentTimeMillis()); }   if (e.getFormat() == -1) { e.setFormat(this.entryFormat); [CLASS] CpioArchiveOutputStream [METHOD] putNextEntry [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	151	151	1	add	
40	[BUG] [BUGGY] if (e.getTime() == -1) { [FE] EOFException [CONTEXT] public void putNextEntry(final CpioArchiveEntry e) throws IOException { ensureOpen(); if (this.cpioEntry != null) { closeArchiveEntry(); // close previous entry } [BUGGY] if (e.getTime() == -1) { [BUGGY] e.setTime(System.currentTimeMillis()); }   if (e.getFormat() == -1) { e.setFormat(this.entryFormat); } if (this.names.put(e.getName(), e) != null) { [CLASS] CpioArchiveOutputStream [METHOD] putNextEntry [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	154	154	1	replace	
41	[BUG] [BUGGY] [FE] EOFException [CONTEXT] public void putNextEntry(final CpioArchiveEntry e) throws IOException { ensureOpen(); if (this.cpioEntry != null) { closeArchiveEntry(); // close previous entry } [BUGGY] [BUGGY] if (e.getTime() == -1) { e.setTime(System.currentTimeMillis()); }   if (e.getFormat() == -1) { e.setFormat(this.entryFormat); } if (this.names.put(e.getName(), e) != null) { [CLASS] CpioArchiveOutputStream [METHOD] putNextEntry [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	154	154	1	add	
42	[BUG] [BUGGY] e.setTime(System.currentTimeMillis()); [FE] EOFException [CONTEXT] public void putNextEntry(final CpioArchiveEntry e) throws IOException { ensureOpen(); if (this.cpioEntry != null) { closeArchiveEntry(); // close previous entry } if (e.getTime() == -1) { [BUGGY] e.setTime(System.currentTimeMillis()); [BUGGY] }   if (e.getFormat() == -1) { e.setFormat(this.entryFormat); } if (this.names.put(e.getName(), e) != null) { throw new IOException("duplicate entry: " + e.getName()); [CLASS] CpioArchiveOutputStream [METHOD] putNextEntry [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	155	155	1	replace	
43	[BUG] [BUGGY] [FE] EOFException [CONTEXT] public void putNextEntry(final CpioArchiveEntry e) throws IOException { ensureOpen(); if (this.cpioEntry != null) { closeArchiveEntry(); // close previous entry } if (e.getTime() == -1) { [BUGGY] [BUGGY] e.setTime(System.currentTimeMillis()); }   if (e.getFormat() == -1) { e.setFormat(this.entryFormat); } if (this.names.put(e.getName(), e) != null) { throw new IOException("duplicate entry: " + e.getName()); [CLASS] CpioArchiveOutputStream [METHOD] putNextEntry [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	155	155	1	add	
44	[BUG] [BUGGY] if (e.getFormat() == -1) { [FE] EOFException [CONTEXT] ensureOpen(); if (this.cpioEntry != null) { closeArchiveEntry(); // close previous entry } if (e.getTime() == -1) { e.setTime(System.currentTimeMillis()); }   [BUGGY] if (e.getFormat() == -1) { [BUGGY] e.setFormat(this.entryFormat); } if (this.names.put(e.getName(), e) != null) { throw new IOException("duplicate entry: " + e.getName()); } writeHeader(e); this.cpioEntry = e; this.written = 0; [CLASS] CpioArchiveOutputStream [METHOD] putNextEntry [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	160	160	1	replace	
45	[BUG] [BUGGY] [FE] EOFException [CONTEXT] ensureOpen(); if (this.cpioEntry != null) { closeArchiveEntry(); // close previous entry } if (e.getTime() == -1) { e.setTime(System.currentTimeMillis()); }   [BUGGY] [BUGGY] if (e.getFormat() == -1) { e.setFormat(this.entryFormat); } if (this.names.put(e.getName(), e) != null) { throw new IOException("duplicate entry: " + e.getName()); } writeHeader(e); this.cpioEntry = e; this.written = 0; [CLASS] CpioArchiveOutputStream [METHOD] putNextEntry [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	160	160	1	add	
46	[BUG] [BUGGY] if (this.names.put(e.getName(), e) != null) { [FE] EOFException [CONTEXT] if (e.getTime() == -1) { e.setTime(System.currentTimeMillis()); }   if (e.getFormat() == -1) { e.setFormat(this.entryFormat); } [BUGGY] if (this.names.put(e.getName(), e) != null) { [BUGGY] throw new IOException("duplicate entry: " + e.getName()); } writeHeader(e); this.cpioEntry = e; this.written = 0; } [CLASS] CpioArchiveOutputStream [METHOD] putNextEntry [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	164	164	1	replace	
47	[BUG] [BUGGY] [FE] EOFException [CONTEXT] if (e.getTime() == -1) { e.setTime(System.currentTimeMillis()); }   if (e.getFormat() == -1) { e.setFormat(this.entryFormat); } [BUGGY] [BUGGY] if (this.names.put(e.getName(), e) != null) { throw new IOException("duplicate entry: " + e.getName()); } writeHeader(e); this.cpioEntry = e; this.written = 0; } [CLASS] CpioArchiveOutputStream [METHOD] putNextEntry [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	164	164	1	add	
48	[BUG] [BUGGY] writeHeader(e); [FE] EOFException [CONTEXT]   if (e.getFormat() == -1) { e.setFormat(this.entryFormat); } if (this.names.put(e.getName(), e) != null) { throw new IOException("duplicate entry: " + e.getName()); } [BUGGY] writeHeader(e); [BUGGY] this.cpioEntry = e; this.written = 0; } [CLASS] CpioArchiveOutputStream [METHOD] putNextEntry [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	168	168	1	replace	
49	[BUG] [BUGGY] [FE] EOFException [CONTEXT]   if (e.getFormat() == -1) { e.setFormat(this.entryFormat); } if (this.names.put(e.getName(), e) != null) { throw new IOException("duplicate entry: " + e.getName()); } [BUGGY] [BUGGY] writeHeader(e); this.cpioEntry = e; this.written = 0; } [CLASS] CpioArchiveOutputStream [METHOD] putNextEntry [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	168	168	1	add	
50	[BUG] [BUGGY] this.cpioEntry = e; [FE] EOFException [CONTEXT]  if (e.getFormat() == -1) { e.setFormat(this.entryFormat); } if (this.names.put(e.getName(), e) != null) { throw new IOException("duplicate entry: " + e.getName()); } writeHeader(e); [BUGGY] this.cpioEntry = e; [BUGGY] this.written = 0; } [CLASS] CpioArchiveOutputStream [METHOD] putNextEntry [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	169	169	1	replace	
51	[BUG] [BUGGY] [FE] EOFException [CONTEXT]  if (e.getFormat() == -1) { e.setFormat(this.entryFormat); } if (this.names.put(e.getName(), e) != null) { throw new IOException("duplicate entry: " + e.getName()); } writeHeader(e); [BUGGY] [BUGGY] this.cpioEntry = e; this.written = 0; } [CLASS] CpioArchiveOutputStream [METHOD] putNextEntry [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	169	169	1	add	
52	[BUG] [BUGGY] this.written = 0; [FE] EOFException [CONTEXT] if (e.getFormat() == -1) { e.setFormat(this.entryFormat); } if (this.names.put(e.getName(), e) != null) { throw new IOException("duplicate entry: " + e.getName()); } writeHeader(e); this.cpioEntry = e; [BUGGY] this.written = 0; [BUGGY] } [CLASS] CpioArchiveOutputStream [METHOD] putNextEntry [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	170	170	1	replace	
53	[BUG] [BUGGY] [FE] EOFException [CONTEXT] if (e.getFormat() == -1) { e.setFormat(this.entryFormat); } if (this.names.put(e.getName(), e) != null) { throw new IOException("duplicate entry: " + e.getName()); } writeHeader(e); this.cpioEntry = e; [BUGGY] [BUGGY] this.written = 0; } [CLASS] CpioArchiveOutputStream [METHOD] putNextEntry [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	170	170	1	add	
54	[BUG] [BUGGY] } [FE] EOFException [CONTEXT] e.setFormat(this.entryFormat); } if (this.names.put(e.getName(), e) != null) { throw new IOException("duplicate entry: " + e.getName()); } writeHeader(e); this.cpioEntry = e; this.written = 0; [BUGGY] } [BUGGY]  [CLASS] CpioArchiveOutputStream [METHOD] putNextEntry [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	171	171	1	replace	
55	[BUG] [BUGGY] [FE] EOFException [CONTEXT] e.setFormat(this.entryFormat); } if (this.names.put(e.getName(), e) != null) { throw new IOException("duplicate entry: " + e.getName()); } writeHeader(e); this.cpioEntry = e; this.written = 0; [BUGGY] [BUGGY] } [CLASS] CpioArchiveOutputStream [METHOD] putNextEntry [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	171	171	1	add	
56	[BUG] [BUGGY] switch (e.getFormat()) { [FE] EOFException [CONTEXT] private void writeHeader(final CpioArchiveEntry e) throws IOException { [BUGGY] switch (e.getFormat()) { [BUGGY] case FORMAT_NEW: out.write(MAGIC_NEW.getBytes()); writeNewEntry(e); break; case FORMAT_NEW_CRC: out.write(MAGIC_NEW_CRC.getBytes()); writeNewEntry(e); break; case FORMAT_OLD_ASCII: out.write(MAGIC_OLD_ASCII.getBytes()); [CLASS] CpioArchiveOutputStream [METHOD] writeHeader [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	174	174	1	replace	
57	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private void writeHeader(final CpioArchiveEntry e) throws IOException { [BUGGY] [BUGGY] switch (e.getFormat()) { case FORMAT_NEW: out.write(MAGIC_NEW.getBytes()); writeNewEntry(e); break; case FORMAT_NEW_CRC: out.write(MAGIC_NEW_CRC.getBytes()); writeNewEntry(e); break; case FORMAT_OLD_ASCII: out.write(MAGIC_OLD_ASCII.getBytes()); [CLASS] CpioArchiveOutputStream [METHOD] writeHeader [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	174	174	1	add	
58	[BUG] [BUGGY] out.write(MAGIC_NEW.getBytes()); [FE] EOFException [CONTEXT] private void writeHeader(final CpioArchiveEntry e) throws IOException { switch (e.getFormat()) { case FORMAT_NEW: [BUGGY] out.write(MAGIC_NEW.getBytes()); [BUGGY] writeNewEntry(e); break; case FORMAT_NEW_CRC: out.write(MAGIC_NEW_CRC.getBytes()); writeNewEntry(e); break; case FORMAT_OLD_ASCII: out.write(MAGIC_OLD_ASCII.getBytes()); writeOldAsciiEntry(e); break; [CLASS] CpioArchiveOutputStream [METHOD] writeHeader [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	176	176	1	replace	
59	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private void writeHeader(final CpioArchiveEntry e) throws IOException { switch (e.getFormat()) { case FORMAT_NEW: [BUGGY] [BUGGY] out.write(MAGIC_NEW.getBytes()); writeNewEntry(e); break; case FORMAT_NEW_CRC: out.write(MAGIC_NEW_CRC.getBytes()); writeNewEntry(e); break; case FORMAT_OLD_ASCII: out.write(MAGIC_OLD_ASCII.getBytes()); writeOldAsciiEntry(e); break; [CLASS] CpioArchiveOutputStream [METHOD] writeHeader [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	176	176	1	add	
60	[BUG] [BUGGY] writeNewEntry(e); [FE] EOFException [CONTEXT] private void writeHeader(final CpioArchiveEntry e) throws IOException { switch (e.getFormat()) { case FORMAT_NEW: out.write(MAGIC_NEW.getBytes()); [BUGGY] writeNewEntry(e); [BUGGY] break; case FORMAT_NEW_CRC: out.write(MAGIC_NEW_CRC.getBytes()); writeNewEntry(e); break; case FORMAT_OLD_ASCII: out.write(MAGIC_OLD_ASCII.getBytes()); writeOldAsciiEntry(e); break; case FORMAT_OLD_BINARY: [CLASS] CpioArchiveOutputStream [METHOD] writeHeader [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	177	177	1	replace	
61	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private void writeHeader(final CpioArchiveEntry e) throws IOException { switch (e.getFormat()) { case FORMAT_NEW: out.write(MAGIC_NEW.getBytes()); [BUGGY] [BUGGY] writeNewEntry(e); break; case FORMAT_NEW_CRC: out.write(MAGIC_NEW_CRC.getBytes()); writeNewEntry(e); break; case FORMAT_OLD_ASCII: out.write(MAGIC_OLD_ASCII.getBytes()); writeOldAsciiEntry(e); break; case FORMAT_OLD_BINARY: [CLASS] CpioArchiveOutputStream [METHOD] writeHeader [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	177	177	1	add	
62	[BUG] [BUGGY] break; [FE] EOFException [CONTEXT] private void writeHeader(final CpioArchiveEntry e) throws IOException { switch (e.getFormat()) { case FORMAT_NEW: out.write(MAGIC_NEW.getBytes()); writeNewEntry(e); [BUGGY] break; [BUGGY] case FORMAT_NEW_CRC: out.write(MAGIC_NEW_CRC.getBytes()); writeNewEntry(e); break; case FORMAT_OLD_ASCII: out.write(MAGIC_OLD_ASCII.getBytes()); writeOldAsciiEntry(e); break; case FORMAT_OLD_BINARY: boolean swapHalfWord = true; [CLASS] CpioArchiveOutputStream [METHOD] writeHeader [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	178	178	1	replace	
63	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private void writeHeader(final CpioArchiveEntry e) throws IOException { switch (e.getFormat()) { case FORMAT_NEW: out.write(MAGIC_NEW.getBytes()); writeNewEntry(e); [BUGGY] [BUGGY] break; case FORMAT_NEW_CRC: out.write(MAGIC_NEW_CRC.getBytes()); writeNewEntry(e); break; case FORMAT_OLD_ASCII: out.write(MAGIC_OLD_ASCII.getBytes()); writeOldAsciiEntry(e); break; case FORMAT_OLD_BINARY: boolean swapHalfWord = true; [CLASS] CpioArchiveOutputStream [METHOD] writeHeader [RETURN_TYPE] void  CpioArchiveEntry e [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	178	178	1	add	
65	[BUG] [BUGGY] writeAsciiLong(entry.getInode(), 8, 16); [FE] EOFException [CONTEXT] private void writeNewEntry(final CpioArchiveEntry entry) throws IOException { [BUGGY] writeAsciiLong(entry.getInode(), 8, 16); [BUGGY] writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	196	196	1	replace	
66	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private void writeNewEntry(final CpioArchiveEntry entry) throws IOException { [BUGGY] [BUGGY] writeAsciiLong(entry.getInode(), 8, 16); writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	196	196	1	add	
67	[BUG] [BUGGY] writeAsciiLong(entry.getMode(), 8, 16); [FE] EOFException [CONTEXT] private void writeNewEntry(final CpioArchiveEntry entry) throws IOException { writeAsciiLong(entry.getInode(), 8, 16); [BUGGY] writeAsciiLong(entry.getMode(), 8, 16); [BUGGY] writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	197	197	1	replace	
68	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private void writeNewEntry(final CpioArchiveEntry entry) throws IOException { writeAsciiLong(entry.getInode(), 8, 16); [BUGGY] [BUGGY] writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	197	197	1	add	
69	[BUG] [BUGGY] writeAsciiLong(entry.getUID(), 8, 16); [FE] EOFException [CONTEXT] private void writeNewEntry(final CpioArchiveEntry entry) throws IOException { writeAsciiLong(entry.getInode(), 8, 16); writeAsciiLong(entry.getMode(), 8, 16); [BUGGY] writeAsciiLong(entry.getUID(), 8, 16); [BUGGY] writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	198	198	1	replace	
70	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private void writeNewEntry(final CpioArchiveEntry entry) throws IOException { writeAsciiLong(entry.getInode(), 8, 16); writeAsciiLong(entry.getMode(), 8, 16); [BUGGY] [BUGGY] writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	198	198	1	add	
71	[BUG] [BUGGY] writeAsciiLong(entry.getGID(), 8, 16); [FE] EOFException [CONTEXT] private void writeNewEntry(final CpioArchiveEntry entry) throws IOException { writeAsciiLong(entry.getInode(), 8, 16); writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); [BUGGY] writeAsciiLong(entry.getGID(), 8, 16); [BUGGY] writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	199	199	1	replace	
72	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private void writeNewEntry(final CpioArchiveEntry entry) throws IOException { writeAsciiLong(entry.getInode(), 8, 16); writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); [BUGGY] [BUGGY] writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	199	199	1	add	
73	[BUG] [BUGGY] writeAsciiLong(entry.getNumberOfLinks(), 8, 16); [FE] EOFException [CONTEXT] private void writeNewEntry(final CpioArchiveEntry entry) throws IOException { writeAsciiLong(entry.getInode(), 8, 16); writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); [BUGGY] writeAsciiLong(entry.getNumberOfLinks(), 8, 16); [BUGGY] writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	200	200	1	replace	
74	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private void writeNewEntry(final CpioArchiveEntry entry) throws IOException { writeAsciiLong(entry.getInode(), 8, 16); writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); [BUGGY] [BUGGY] writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	200	200	1	add	
75	[BUG] [BUGGY] writeAsciiLong(entry.getTime(), 8, 16); [FE] EOFException [CONTEXT] private void writeNewEntry(final CpioArchiveEntry entry) throws IOException { writeAsciiLong(entry.getInode(), 8, 16); writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); [BUGGY] writeAsciiLong(entry.getTime(), 8, 16); [BUGGY] writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	201	201	1	replace	
76	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private void writeNewEntry(final CpioArchiveEntry entry) throws IOException { writeAsciiLong(entry.getInode(), 8, 16); writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); [BUGGY] [BUGGY] writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	201	201	1	add	
77	[BUG] [BUGGY] writeAsciiLong(entry.getSize(), 8, 16); [FE] EOFException [CONTEXT] private void writeNewEntry(final CpioArchiveEntry entry) throws IOException { writeAsciiLong(entry.getInode(), 8, 16); writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); [BUGGY] writeAsciiLong(entry.getSize(), 8, 16); [BUGGY] writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	202	202	1	replace	
78	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private void writeNewEntry(final CpioArchiveEntry entry) throws IOException { writeAsciiLong(entry.getInode(), 8, 16); writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); [BUGGY] [BUGGY] writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	202	202	1	add	
79	[BUG] [BUGGY] writeAsciiLong(entry.getDeviceMaj(), 8, 16); [FE] EOFException [CONTEXT] private void writeNewEntry(final CpioArchiveEntry entry) throws IOException { writeAsciiLong(entry.getInode(), 8, 16); writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); [BUGGY] writeAsciiLong(entry.getDeviceMaj(), 8, 16); [BUGGY] writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	203	203	1	replace	
80	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private void writeNewEntry(final CpioArchiveEntry entry) throws IOException { writeAsciiLong(entry.getInode(), 8, 16); writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); [BUGGY] [BUGGY] writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	203	203	1	add	
81	[BUG] [BUGGY] writeAsciiLong(entry.getDeviceMin(), 8, 16); [FE] EOFException [CONTEXT] private void writeNewEntry(final CpioArchiveEntry entry) throws IOException { writeAsciiLong(entry.getInode(), 8, 16); writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); [BUGGY] writeAsciiLong(entry.getDeviceMin(), 8, 16); [BUGGY] writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	204	204	1	replace	
82	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private void writeNewEntry(final CpioArchiveEntry entry) throws IOException { writeAsciiLong(entry.getInode(), 8, 16); writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); [BUGGY] [BUGGY] writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	204	204	1	add	
83	[BUG] [BUGGY] writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); [FE] EOFException [CONTEXT] private void writeNewEntry(final CpioArchiveEntry entry) throws IOException { writeAsciiLong(entry.getInode(), 8, 16); writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); [BUGGY] writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); [BUGGY] writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	205	205	1	replace	
84	[BUG] [BUGGY] [FE] EOFException [CONTEXT] private void writeNewEntry(final CpioArchiveEntry entry) throws IOException { writeAsciiLong(entry.getInode(), 8, 16); writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); [BUGGY] [BUGGY] writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	205	205	1	add	
85	[BUG] [BUGGY] writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); [FE] EOFException [CONTEXT] writeAsciiLong(entry.getInode(), 8, 16); writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); [BUGGY] writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); [BUGGY] writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	206	206	1	replace	
86	[BUG] [BUGGY] [FE] EOFException [CONTEXT] writeAsciiLong(entry.getInode(), 8, 16); writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); [BUGGY] [BUGGY] writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	206	206	1	add	
87	[BUG] [BUGGY] writeAsciiLong(entry.getName().length() + 1, 8, 16); [FE] EOFException [CONTEXT] writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); [BUGGY] writeAsciiLong(entry.getName().length() + 1, 8, 16); [BUGGY] writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	207	207	1	replace	
88	[BUG] [BUGGY] [FE] EOFException [CONTEXT] writeAsciiLong(entry.getMode(), 8, 16); writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); [BUGGY] [BUGGY] writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	207	207	1	add	
89	[BUG] [BUGGY] writeAsciiLong(entry.getChksum(), 8, 16); [FE] EOFException [CONTEXT] writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); [BUGGY] writeAsciiLong(entry.getChksum(), 8, 16); [BUGGY] writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	208	208	1	replace	
90	[BUG] [BUGGY] [FE] EOFException [CONTEXT] writeAsciiLong(entry.getUID(), 8, 16); writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); [BUGGY] [BUGGY] writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	208	208	1	add	
91	[BUG] [BUGGY] writeCString(entry.getName()); [FE] EOFException [CONTEXT] writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); [BUGGY] writeCString(entry.getName()); [BUGGY] pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	209	209	1	replace	
92	[BUG] [BUGGY] [FE] EOFException [CONTEXT] writeAsciiLong(entry.getGID(), 8, 16); writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); [BUGGY] [BUGGY] writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	209	209	1	add	
93	[BUG] [BUGGY] pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); [FE] EOFException [CONTEXT] writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); [BUGGY] pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); [BUGGY] } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	210	210	1	replace	
94	[BUG] [BUGGY] [FE] EOFException [CONTEXT] writeAsciiLong(entry.getNumberOfLinks(), 8, 16); writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); [BUGGY] [BUGGY] pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	210	210	1	add	
95	[BUG] [BUGGY] } [FE] EOFException [CONTEXT] writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); [BUGGY] } [BUGGY]  [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	211	211	1	replace	
96	[BUG] [BUGGY] [FE] EOFException [CONTEXT] writeAsciiLong(entry.getTime(), 8, 16); writeAsciiLong(entry.getSize(), 8, 16); writeAsciiLong(entry.getDeviceMaj(), 8, 16); writeAsciiLong(entry.getDeviceMin(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMaj(), 8, 16); writeAsciiLong(entry.getRemoteDeviceMin(), 8, 16); writeAsciiLong(entry.getName().length() + 1, 8, 16); writeAsciiLong(entry.getChksum(), 8, 16); writeCString(entry.getName()); pad(entry.getHeaderSize() + entry.getName().length() + 1, 4); [BUGGY] [BUGGY] } [CLASS] CpioArchiveOutputStream [METHOD] writeNewEntry [RETURN_TYPE] void  CpioArchiveEntry entry [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	211	211	1	add	
97	[BUG] [BUGGY] ensureOpen(); [FE] EOFException [CONTEXT] public void closeArchiveEntry() throws IOException { [BUGGY] ensureOpen(); [BUGGY]  if (this.cpioEntry.getSize() != this.written) { throw new IOException("invalid entry size (expected " + this.cpioEntry.getSize() + " but got " + this.written + " bytes)"); } if ((this.cpioEntry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) { pad(this.cpioEntry.getSize(), 4); } else if ((this.cpioEntry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) { pad(this.cpioEntry.getSize(), 2); [CLASS] CpioArchiveOutputStream [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	251	251	1	replace	
98	[BUG] [BUGGY] [FE] EOFException [CONTEXT] public void closeArchiveEntry() throws IOException { [BUGGY] [BUGGY] ensureOpen(); if (this.cpioEntry.getSize() != this.written) { throw new IOException("invalid entry size (expected " + this.cpioEntry.getSize() + " but got " + this.written + " bytes)"); } if ((this.cpioEntry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) { pad(this.cpioEntry.getSize(), 4); } else if ((this.cpioEntry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) { pad(this.cpioEntry.getSize(), 2); [CLASS] CpioArchiveOutputStream [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	251	251	1	add	
99	[BUG] [BUGGY] if (this.cpioEntry.getSize() != this.written) { [FE] EOFException [CONTEXT] public void closeArchiveEntry() throws IOException { ensureOpen(); [BUGGY] if (this.cpioEntry.getSize() != this.written) { [BUGGY] throw new IOException("invalid entry size (expected " + this.cpioEntry.getSize() + " but got " + this.written + " bytes)"); } if ((this.cpioEntry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) { pad(this.cpioEntry.getSize(), 4); } else if ((this.cpioEntry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) { pad(this.cpioEntry.getSize(), 2); } if ((this.cpioEntry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) { [CLASS] CpioArchiveOutputStream [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	253	253	1	replace	
100	[BUG] [BUGGY] [FE] EOFException [CONTEXT] public void closeArchiveEntry() throws IOException { ensureOpen(); [BUGGY] [BUGGY] if (this.cpioEntry.getSize() != this.written) { throw new IOException("invalid entry size (expected " + this.cpioEntry.getSize() + " but got " + this.written + " bytes)"); } if ((this.cpioEntry.getFormat() | FORMAT_NEW_MASK) == FORMAT_NEW_MASK) { pad(this.cpioEntry.getSize(), 4); } else if ((this.cpioEntry.getFormat() | FORMAT_OLD_BINARY) == FORMAT_OLD_BINARY) { pad(this.cpioEntry.getSize(), 2); } if ((this.cpioEntry.getFormat() | FORMAT_NEW_CRC) == FORMAT_NEW_CRC) { [CLASS] CpioArchiveOutputStream [METHOD] closeArchiveEntry [RETURN_TYPE] void  [VARIABLES] boolean closed finished swapHalfWord HashMap names OutputStream out short entryFormat format CpioArchiveEntry cpioEntry e entry long crc written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	253	253	1	add	
