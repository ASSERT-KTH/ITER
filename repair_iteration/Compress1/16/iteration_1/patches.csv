bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(0);  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(0);  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(0);  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }  [CE]  '.class'  expected  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  For(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	For(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    out.put(i,    format);    }    	non-compiled	[CE]  '.class'  expected	12	None	replace
4	[BUG]  [BUGGY]  int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    out.put(i,    format);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	12	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(0);  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(0);  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(0);  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
6	[BUG]  [BUGGY]  int  i  =  0;  names.size()  >  0;  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }  [CE]  not  a  statement  [FE]                          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  int  i  =  0;  names.size()  >  0;  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	int  i  =  0;  names.size()  >  0;  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    out.put(i,    format);    }    	non-compiled	[CE]  not  a  statement	12	None	replace
7	[BUG]  [BUGGY]  getNames().put( "EntryFormat ",  format);  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  getNames().put( "EntryFormat ",  format);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	getNames().put( "EntryFormat ",  format);	  getNames().put(   "entryFormat   ",    format);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
8	[BUG]  [BUGGY]  getNames().put( "entryFormat ",  this.format);  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  getNames().put( "entryFormat ",  this.format);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	getNames().put( "entryFormat ",  this.format);	  getNames().put(   "entryFormat   ",    format);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
9	[BUG]  [BUGGY]  getNames().put( "entryFormat, ",  format);  [CE]  illegal  start  of  expression  [FE]                        EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  getNames().put( "entryFormat, ",  format);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	getNames().put( "entryFormat, ",  format);	  getNames().put(   "entryFormat   ",    format);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(0);  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(0);  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(0);  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
12	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }  [CE]  '.class'  expected  [FE]                        EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  For(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	For(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    out.put(i,    format);    }    	non-compiled	[CE]  '.class'  expected	14	None	replace
13	[BUG]  [BUGGY]  int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    out.put(i,    format);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	14	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(0);  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(0);  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(0);  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
15	[BUG]  [BUGGY]  int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    out.put(i,    format);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	14	None	replace
16	[BUG]  [BUGGY]  out.put(i,  format);  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.put(i,  format);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.put(i,  format);	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size()  -  1;  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size()  -  1;  i++)  {  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size()  -  1;  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
19	[BUG]  [BUGGY]  int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size()  +  1;  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size()  +  1;  i++)  {  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size()  +  1;  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size()  -  2;  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size()  -  2;  i++)  {  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size()  -  2;  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.get  [CE]  ')'  expected  [FE]          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.get  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.get	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.write(cpioEntry.getKey());    }    	non-compiled	[CE]  ')'  expected	9	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getKey()  [CE]  ')'  expected  [FE]            EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getKey()  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getKey()	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.write(cpioEntry.getKey());    }    	non-compiled	[CE]  ')'  expected	9	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(0);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getKey());  }  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(0);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getKey());  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(0);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getKey());  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.write(cpioEntry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry  ==  null)  {  out.write(cpioEntry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry  ==  null)  {  out.write(cpioEntry.getKey());  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry  ==  null)  {  out.write(cpioEntry.getKey());  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.write(cpioEntry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(0);  if(cpioEntry!=  null)  {  out.write(cpioEntry.get  [CE]  ')'  expected  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(0);  if(cpioEntry!=  null)  {  out.write(cpioEntry.get  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(0);  if(cpioEntry!=  null)  {  out.write(cpioEntry.get	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.write(cpioEntry.getKey());    }    	non-compiled	[CE]  ')'  expected	9	None	replace
27	[BUG]  [BUGGY]  out.write('n',  crc);  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.write('n',  crc);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.write('n',  crc);	  out.write('n');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
28	[BUG]  [BUGGY]  out.defaultWrite('n');  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.defaultWrite('n');  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.defaultWrite('n');	  out.write('n');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
29	[BUG]  [BUGGY]  out.write( "n ");  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.write( "n ");  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.write( "n ");	  out.write('n');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
30	[BUG]  [BUGGY]  out.write('n',  format);  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.write('n',  format);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.write('n',  format);	  out.write('n');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
31	[BUG]  [BUGGY]  out.write('n',  '/');  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.write('n',  '/');  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.write('n',  '/');	  out.write('n');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
32	[BUG]  [BUGGY]  this.names  =  new  LinkedHashMap();  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  LinkedHashMap();  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  LinkedHashMap();	  this.names    =    new    HashMap();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
33	[BUG]  [BUGGY]  this.names  =  new  HashMap(this.names);  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  HashMap(this.names);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  HashMap(this.names);	  this.names    =    new    HashMap();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
34	[BUG]  [BUGGY]  this.names  =  new  ArrayList();  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  ArrayList();  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  ArrayList();	  this.names    =    new    HashMap();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
35	[BUG]  [BUGGY]  this.names  =  new  HashMap(this.numbers);  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  HashMap(this.numbers);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  HashMap(this.numbers);	  this.names    =    new    HashMap();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getName().equals(  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getName().equals(  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getName().equals(	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =    (CpioArchiveEntry)this.names.get(i);    if(cpioEntry.getName().equals(cpioEntry.getName    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getName().equals(cpi  [CE]  ')'  expected  [FE]            EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getName().equals(cpi  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getName().equals(cpi	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =    (CpioArchiveEntry)this.names.get(i);    if(cpioEntry.getName().equals(cpioEntry.getName    	non-compiled	[CE]  ')'  expected	2	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getName().equals  [CE]  ')'  expected  [FE]              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getName().equals  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getName().equals	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =    (CpioArchiveEntry)this.names.get(i);    if(cpioEntry.getName().equals(cpioEntry.getName    	non-compiled	[CE]  ')'  expected	2	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getName().equals(c  [CE]  ')'  expected  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getName().equals(c  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getName().equals(c	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =    (CpioArchiveEntry)this.names.get(i);    if(cpioEntry.getName().equals(cpioEntry.getName    	non-compiled	[CE]  ')'  expected	2	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(0);  if(cpioEntry.getName().equals(  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(0);  if(cpioEntry.getName().equals(  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(0);  if(cpioEntry.getName().equals(	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =    (CpioArchiveEntry)this.names.get(i);    if(cpioEntry.getName().equals(cpioEntry.getName    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getFormat()  [CE]  ';'  expected  [FE]        EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getFormat()  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getFormat()	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    format    =    cpioEntry.getFormat();    }    	non-compiled	[CE]  ';'  expected	8	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  format  =  cpioEntry.get  [CE]  ';'  expected  [FE]          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  format  =  cpioEntry.get  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  format  =  cpioEntry.get	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    format    =    cpioEntry.getFormat();    }    	non-compiled	[CE]  ';'  expected	8	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(0);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getFormat();  }  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(0);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getFormat();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(0);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getFormat();  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    format    =    cpioEntry.getFormat();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  format  =  cpi  [CE]  ';'  expected  [FE]              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  format  =  cpi  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  format  =  cpi	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    format    =    cpioEntry.getFormat();    }    	non-compiled	[CE]  ';'  expected	8	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry  ==  null)  {  format  =  cpioEntry.getFormat();  }  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry  ==  null)  {  format  =  cpioEntry.getFormat();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry  ==  null)  {  format  =  cpioEntry.getFormat();  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    format    =    cpioEntry.getFormat();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  files.get(i);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getFormat();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  files.get(i);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getFormat();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  files.get(i);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getFormat();  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    format    =    cpioEntry.getFormat();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.get  [CE]  ')'  expected  [FE]            EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.get  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.get	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.names.get(i);    if(entry.getKey().equals(entry.getValue()))    {    break;    }    	non-compiled	[CE]  ')'  expected	3	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getValu  [CE]  ')'  expected  [FE]              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getValu  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getValu	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.names.get(i);    if(entry.getKey().equals(entry.getValue()))    {    break;    }    	non-compiled	[CE]  ')'  expected	3	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getValue())  [CE]  ')'  expected  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getValue())  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getValue())	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.names.get(i);    if(entry.getKey().equals(entry.getValue()))    {    break;    }    	non-compiled	[CE]  ')'  expected	3	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getVal  [CE]  ')'  expected  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getVal  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getVal	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.names.get(i);    if(entry.getKey().equals(entry.getValue()))    {    break;    }    	non-compiled	[CE]  ')'  expected	3	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getValue  [CE]  ')'  expected  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getValue  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getValue	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.names.get(i);    if(entry.getKey().equals(entry.getValue()))    {    break;    }    	non-compiled	[CE]  ')'  expected	3	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getValue())  [CE]  ')'  expected  [FE]                      EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getValue())  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getValue())	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.names.get(i);    if(entry.getKey().equals(entry.getValue()))    {    break;    }    	non-compiled	[CE]  ')'  expected	3	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getValue()  [CE]  ')'  expected  [FE]                        EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getValue()  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getValue()	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.names.get(i);    if(entry.getKey().equals(entry.getValue()))    {    break;    }    	non-compiled	[CE]  ')'  expected	3	None	replace
54	[BUG]  [BUGGY]  this.names  =  new  HashMap  <  String,String>(this.names);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  HashMap  <  String,String>(this.names);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  HashMap  <  String,String>(this.names);	  this.names    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
55	[BUG]  [BUGGY]  this.names  =  new  LinkedHashMap  <  String,String>();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  LinkedHashMap  <  String,String>();  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  LinkedHashMap  <  String,String>();	  this.names    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
56	[BUG]  [BUGGY]  this.names  =  new  HashMap  <  String,String>(names);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  HashMap  <  String,String>(names);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  HashMap  <  String,String>(names);	  this.names    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
57	[BUG]  [BUGGY]  this.names  =  new  HashMap  <  String,String>(0);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  HashMap  <  String,String>(0);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  HashMap  <  String,String>(0);	  this.names    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
58	[BUG]  [BUGGY]  this.names  =  new  HashMap  <  String,String>(1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  HashMap  <  String,String>(1);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  HashMap  <  String,String>(1);	  this.names    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
59	[BUG]  [BUGGY]  this.names  =  new  HashMap  <  String,String>(format);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  HashMap  <  String,String>(format);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  HashMap  <  String,String>(format);	  this.names    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
60	[BUG]  [BUGGY]  out.write('n',  crc);  break;  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.write('n',  crc);  break;  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.write('n',  crc);  break;	  out.write('n');    break;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
61	[BUG]  [BUGGY]  out.write( "n ");  break;  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.write( "n ");  break;  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.write( "n ");  break;	  out.write('n');    break;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
62	[BUG]  [BUGGY]  out.defaultWrite('n');  break;  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.defaultWrite('n');  break;  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.defaultWrite('n');  break;	  out.write('n');    break;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
63	[BUG]  [BUGGY]  out.write('0');  break;  [CE]  illegal  start  of  expression  [FE]                        EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.write('0');  break;  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.write('0');  break;	  out.write('n');    break;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
64	[BUG]  [BUGGY]  out.defaultWrite( "null ");  break;  [CE]  illegal  start  of  expression  [FE]                          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.defaultWrite( "null ");  break;  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.defaultWrite( "null ");  break;	  out.write('n');    break;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getValu  [CE]  ')'  expected  [FE]            EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getValu  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getValu	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.write(cpioEntry.getValue());    }    	non-compiled	[CE]  ')'  expected	10	None	replace
66	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getValue()  [CE]  ')'  expected  [FE]              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getValue()  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getValue()	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.write(cpioEntry.getValue());    }    	non-compiled	[CE]  ')'  expected	10	None	replace
67	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getVal  [CE]  ')'  expected  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getVal  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getVal	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.write(cpioEntry.getValue());    }    	non-compiled	[CE]  ')'  expected	10	None	replace
68	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getValue  [CE]  ')'  expected  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getValue  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getValue	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.write(cpioEntry.getValue());    }    	non-compiled	[CE]  ')'  expected	10	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(0);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getValue());  }  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(0);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getValue());  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(0);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getValue());  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.write(cpioEntry.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
70	[BUG]  [BUGGY]  this.names  =  new  LinkedHashMap  <  String,Object>();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  LinkedHashMap  <  String,Object>();	  this.names    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
71	[BUG]  [BUGGY]  this.names  =  new  HashMap  <  String,Object>(this.names);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  HashMap  <  String,Object>(this.names);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  HashMap  <  String,Object>(this.names);	  this.names    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
72	[BUG]  [BUGGY]  this.names  =  new  HashMap  <  String,Object>(names);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  HashMap  <  String,Object>(names);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  HashMap  <  String,Object>(names);	  this.names    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
73	[BUG]  [BUGGY]  this.names  =  new  HashMap  <  String,Object>(1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  HashMap  <  String,Object>(1);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  HashMap  <  String,Object>(1);	  this.names    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
74	[BUG]  [BUGGY]  this.names  =  new  HashMap  <  String,Object>()  {  }  ;  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  HashMap  <  String,Object>()  {  }  ;  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  HashMap  <  String,Object>()  {  }  ;	  this.names    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.  [CE]  <identifier>  expected  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.names.get(i);    if(entry.getKey().equals(entry.getValue()))    {    out.put    	non-compiled	[CE]  <identifier>  expected	6	None	replace
76	[BUG]  [BUGGY]  getNames().put( "entryFormat ",  this.entryFormat);  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  getNames().put( "entryFormat ",  this.entryFormat);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	getNames().put( "entryFormat ",  this.entryFormat);	  getNames().put(   "entryFormat   ",    entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
77	[BUG]  [BUGGY]  getNames().put( "entryFormat, ",  entryFormat);  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  getNames().put( "entryFormat, ",  entryFormat);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	getNames().put( "entryFormat, ",  entryFormat);	  getNames().put(   "entryFormat   ",    entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
78	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
79	[BUG]  [BUGGY]  int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	5	None	replace
80	[BUG]  [BUGGY]  out.put(0,  format);  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.put(0,  format);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.put(0,  format);	  for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
81	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size()  +  1;  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size()  +  1;  ++i)  {  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size()  +  1;  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
82	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  +  1);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  +  1);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getKey().equals(cpioEntry.getKey()))  {  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getKey().equals(cpioEntry.getKey()))  {  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getKey().equals(cpioEntry.getKey()))  {	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getKey().equals(cpioEntry.getValue()))  {  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getKey().equals(cpioEntry.getValue()))  {  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getKey().equals(cpioEntry.getValue()))  {	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
85	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(cpioEntry.  [CE]  <identifier>  expected  [FE]                        EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(cpioEntry.  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(cpioEntry.	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
86	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  crc  =(CpioArchiveEntry)this.names.get(i);  out.write(crc);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  crc  =(CpioArchiveEntry)this.names.get(i);  out.write(crc);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  crc  =(CpioArchiveEntry)this.names.get(i);  out.write(crc);  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
87	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry  ==  null)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry  ==  null)  {  out.close();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry  ==  null)  {  out.close();  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(0);  if(cpioEntry!=  null)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(0);  if(cpioEntry!=  null)  {  out.close();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(0);  if(cpioEntry!=  null)  {  out.close();  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
89	[BUG]  [BUGGY]  int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.close();  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.close();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.close();  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.close();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	11	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i  +  1);  if(cpioEntry!=  null)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i  +  1);  if(cpioEntry!=  null)  {  out.close();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i  +  1);  if(cpioEntry!=  null)  {  out.close();  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
91	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  files.get(i);  if(cpioEntry!=  null)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  files.get(i);  if(cpioEntry!=  null)  {  out.close();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  files.get(i);  if(cpioEntry!=  null)  {  out.close();  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
92	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.close();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.close();  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
93	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out.close();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out.close();  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
94	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out.close();  }  [CE]  '.class'  expected  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  For(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out.close();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	For(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out.close();  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  '.class'  expected	13	None	replace
95	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(0);  if(out!=  null)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(0);  if(out!=  null)  {  out.close();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(0);  if(out!=  null)  {  out.close();  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
96	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out  ==  null)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out  ==  null)  {  out.close();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out  ==  null)  {  out.close();  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
97	[BUG]  [BUGGY]  if(names!=  null)  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  if(names!=  null)  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out.close();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	if(names!=  null)  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out.close();  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  [CE]  illegal  start  of  expression  [FE]                            EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getFormat  [CE]  ';'  expected  [FE]        EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getFormat  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getFormat	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    format    =    cpioEntry.getFormat();    }    	non-compiled	[CE]  ';'  expected	8	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i  +  1);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getFormat();  }  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i  +  1);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getFormat();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i  +  1);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getFormat();  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    format    =    cpioEntry.getFormat();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
101	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format  [CE]  ')'  expected  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    out.put(i,    format);    }    	non-compiled	[CE]  ')'  expected	12	None	replace
102	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i  +  1,  format);  }  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i  +  1,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i  +  1,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
103	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  output.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  output.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  output.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
104	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  entries.size();  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  entries.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  entries.size();  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
105	[BUG]  [BUGGY]  this.names  =  new  HashMap  <  String,  OutputStream>();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  HashMap  <  String,  OutputStream>();  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  HashMap  <  String,  OutputStream>();	  this.names    =    new    HashMap();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	16	None	replace
106	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getValu  [CE]  ')'  expected  [FE]            EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getValu  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry.getValu	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.names.get(i);    if(entry.getKey().equals(entry.getValue()))    {    break;    }    	non-compiled	[CE]  ')'  expected	3	None	replace
107	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry  [CE]  ')'  expected  [FE]              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.names.get(i);  if(entry.getKey().equals(entry	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.names.get(i);    if(entry.getKey().equals(entry.getValue()))    {    break;    }    	non-compiled	[CE]  ')'  expected	3	None	replace
108	[BUG]  [BUGGY]  this.names  =  new  ArrayList  <  String,Object>();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  ArrayList  <  String,Object>();  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  ArrayList  <  String,Object>();	  this.names    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
109	[BUG]  [BUGGY]  this.names  =  new  ArrayHashMap  <  String,Object>();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  ArrayHashMap  <  String,Object>();  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  ArrayHashMap  <  String,Object>();	  this.names    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
110	[BUG]  [BUGGY]  out.write('n',  'n');  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.write('n',  'n');  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.write('n',  'n');	  out.write('n');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
111	[BUG]  [BUGGY]  out.write(this.entryFormat);  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.write(this.entryFormat);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.write(this.entryFormat);	  out.write('n');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
112	[BUG]  [BUGGY]  out.write('n',  '-');  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.write('n',  '-');  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.write('n',  '-');	  out.write('n');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
113	[BUG]  [BUGGY]  this.names  =  new  HashMap  <  String,String>(2);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  HashMap  <  String,String>(2);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  HashMap  <  String,String>(2);	  this.names    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
114	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format  [CE]  ')'  expected  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  out.put(i,  format	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    out.put(i,    format);    }    	non-compiled	[CE]  ')'  expected	14	None	replace
115	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out  [CE]  not  a  statement  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  not  a  statement	13	None	replace
116	[BUG]  [BUGGY]  int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out.close();  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out.close();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out.close();  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	13	None	replace
117	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out.close  [CE]  not  a  statement  [FE]                      EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out.close  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out.close	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  not  a  statement	13	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i  +  1,  format);  }  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i  +  1,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i  +  1,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
119	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  +  1);  }  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  +  1);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  +  1);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
120	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  entries.size();  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  entries.size();  i++)  {  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  entries.size();  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
121	[BUG]  [BUGGY]  getNames().put( "entryFormat "  +  format,  entryFormat);  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  getNames().put( "entryFormat "  +  format,  entryFormat);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	getNames().put( "entryFormat "  +  format,  entryFormat);	  getNames().put(   "entryFormat   ",    entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
122	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  files.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getKey());  }  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  files.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getKey());  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  files.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getKey());  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.write(cpioEntry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
123	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getKey  [CE]  ')'  expected  [FE]            EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getKey  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.getKey	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.write(cpioEntry.getKey());    }    	non-compiled	[CE]  ')'  expected	9	None	replace
124	[BUG]  [BUGGY]  out.write(this.entryFormat);  break;  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.write(this.entryFormat);  break;  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.write(this.entryFormat);  break;	  out.write('n');    break;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
125	[BUG]  [BUGGY]  out.close();  break;  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.close();  break;  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.close();  break;	  out.write('n');    break;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
126	[BUG]  [BUGGY]  getNames().put( "entryFormat "  +  format);  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  getNames().put( "entryFormat "  +  format);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	getNames().put( "entryFormat "  +  format);	  getNames().put(   "entryFormat   ",    format);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
127	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getName().equals(cpioEntry  [CE]  ')'  expected  [FE]          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getName().equals(cpioEntry  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  (CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getName().equals(cpioEntry	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =    (CpioArchiveEntry)this.names.get(i);    if(cpioEntry.getName().equals(cpioEntry.getName    	non-compiled	[CE]  ')'  expected	2	None	replace
128	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getValue();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getValue();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getValue();  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i-1);  if(cpioEntry!=  null)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i-1);  if(cpioEntry!=  null)  {  out.close();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i-1);  if(cpioEntry!=  null)  {  out.close();  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
130	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i  +  1);  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i  +  1);  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i  +  1);  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
131	[BUG]  [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out  [CE]  not  a  statement  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	if(this.names!=  null)  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  null)  {  out	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  not  a  statement	13	None	replace
132	[BUG]  [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  nu  [CE]  ')'  expected  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  nu  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i);  if(out!=  nu	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    if(out!=    null)    {    out.close();    }    	non-compiled	[CE]  ')'  expected	13	None	replace
133	[BUG]  [BUGGY]  out.append('n');  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.append('n');  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.append('n');	  out.write('n');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
134	[BUG]  [BUGGY]  out.write('#');  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.write('#');  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.write('#');	  out.write('n');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
135	[BUG]  [BUGGY]  out.close();  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.close();  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.close();	  out.write('n');    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
136	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i  +  1);  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i  +  1);  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  out  =(CpioArchiveEntry)this.names.get(i  +  1);  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    CpioArchiveEntry    out    =(CpioArchiveEntry)this.names.get(i);    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
137	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  format.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  format.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  format.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
138	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  this.out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  this.out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  this.out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
139	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  format  =  names.get(i);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getFormat();  }  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  format  =  names.get(i);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getFormat();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  format  =  names.get(i);  if(cpioEntry!=  null)  {  format  =  cpioEntry.getFormat();  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    format    =    cpioEntry.getFormat();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
140	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.  [CE]  <identifier>  expected  [FE]          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i);  if(cpioEntry!=  null)  {  out.write(cpioEntry.	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.write(cpioEntry.getKey());    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
141	[BUG]  [BUGGY]  getNames().put( "entryFormat ", "  format ");  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  getNames().put( "entryFormat ", "  format ");  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	getNames().put( "entryFormat ", "  format ");	  getNames().put(   "entryFormat   ",    entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
142	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(cpioEntry  [CE]  ')'  expected  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(cpioEntry  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(cpioEntry	      	non-compiled	[CE]  ')'  expected	7	None	replace
143	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  out.close();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  out.close();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  out.close();  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
144	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  out.write(cpioEntry.getKey());  [CE]  illegal  start  of  expression  [FE]                        EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  out.write(cpioEntry.getKey());  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  out.write(cpioEntry.getKey());	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
145	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  out.write(cpioEntry.getValue  [CE]  ')'  expected  [FE]                          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  out.write(cpioEntry.getValue  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  out.write(cpioEntry.getValue	      	non-compiled	[CE]  ')'  expected	7	None	replace
146	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  break;  }  [CE]  illegal  start  of  expression  [FE]                            EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  break;  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  break;  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
147	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getName  [CE]  ')'  expected  [FE]                              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getName  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.getName	      	non-compiled	[CE]  ')'  expected	7	None	replace
148	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  out.write(cpioEntry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  out.write(cpioEntry.getKey());  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  out.write(cpioEntry.getKey());  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
149	[BUG]  [BUGGY]  this.names  =  new  HashMap  <  String,Object>(4);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  HashMap  <  String,Object>(4);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  HashMap  <  String,Object>(4);	  this.names    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
150	[BUG]  [BUGGY]  this.names  =  new  HashMap  <  String,Object>(8);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  HashMap  <  String,Object>(8);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  HashMap  <  String,Object>(8);	  this.names    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
151	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  format.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  format.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  i++)  {  format.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
152	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  this.out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  this.out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  i++)  {  this.out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
153	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  i  +=  2)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  i  +=  2)  {  out.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  i  +=  2)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
154	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  output.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  output.put(i,  format);  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  i++)  {  output.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
155	[BUG]  [BUGGY]  out.write('#');  break;  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.write('#');  break;  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.write('#');  break;	  out.write('n');    break;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
156	[BUG]  [BUGGY]  out.append('n');  break;  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  out.append('n');  break;  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	out.append('n');  break;	  out.write('n');    break;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
157	[BUG]  [BUGGY]  this.names  =  new  HashMap(this.entryFormat);  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  HashMap(this.entryFormat);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  HashMap(this.entryFormat);	  this.names    =    new    HashMap();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
158	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  paths.get(i);  if(cpioEntry!=  null)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  paths.get(i);  if(cpioEntry!=  null)  {  out.close();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  paths.get(i);  if(cpioEntry!=  null)  {  out.close();  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
159	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i).if(cpioEntry!=  null)  {  out.close();  }  [CE]  <identifier>  expected  [FE]                EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i).if(cpioEntry!=  null)  {  out.close();  }  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  names.get(i).if(cpioEntry!=  null)  {  out.close();  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =    names.get(i);    if(cpioEntry!=    null)    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
160	[BUG]  [BUGGY]  this.names  =  new  HashMap  <  String,String>(4);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  HashMap  <  String,String>(4);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  HashMap  <  String,String>(4);	  this.names    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
161	[BUG]  [BUGGY]  this.names  =  new  HashMap  <  String,String>(this);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  HashMap  <  String,String>(this);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  HashMap  <  String,String>(this);	  this.names    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
162	[BUG]  [BUGGY]  this.names  =  new  HashMap  <  String,String>(8);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            EOFException    [CONTEXT]    case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:  break;  default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;    [BUGGY]  this.names  =  new  HashMap  <  String,String>(8);  [BUGGY]    }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	133	133	1	replace	this.names  =  new  HashMap  <  String,String>(8);	  this.names    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	15	None	replace
