projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName().equals(cpioEntry.getName
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry.getValue())){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry.getValue())){return;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry.getValue())){out.put
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.getValue());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat",entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;names.size()>0;++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("EntryFormat",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat",this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(i,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size()-1;i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size()+1;i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size()-2;i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.getKey()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry==null){out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){out.write(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n',crc);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite('n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write("n");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n',format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n','/');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newLinkedHashMap();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newArrayList();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.numbers);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName().equals(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName().equals(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName().equals
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName().equals(c
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getName().equals(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry==null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry.getValu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry.getValue())
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry.getVal
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry.getValue
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry.getValue())
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry.getValue()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newLinkedHashMap<String,String>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(0);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n',crc);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write("n");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite('n');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('0');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite("null");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.getValu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.getValue()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.getVal
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.getValue
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){out.write(cpioEntry.getValue());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newLinkedHashMap<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(){};
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat",this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,",entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(0,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size()+1;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){out.put(i,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getKey().equals(cpioEntry.getKey())){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getKey().equals(cpioEntry.getValue())){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntrycrc=(CpioArchiveEntry)this.names.get(i);out.write(crc);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry==null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i+1);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);if(out!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out==null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i+1);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){out.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){output.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<entries.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,OutputStream>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry.getValu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newArrayList<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newArrayHashMap<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n','n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n','-');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(2);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out.close
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){out.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){out.put(i,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<entries.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat"+format,entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.getKey
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.entryFormat);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.close();break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName().equals(cpioEntry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpioEntry.getValue();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i-1);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i+1);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=nu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.append('n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('#');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.close();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i+1);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){format=names.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat","format");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(cpioEntry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.getKey());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.getValue
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(4);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(8);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i+=2){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){output.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('#');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.append('n');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=paths.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i).if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(4);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(this);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(8);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry==null){format=cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpi}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){format=cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=c
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(0);if(entry.getKey().equals(entry.getVal
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(0);if(entry.getKey().equals(entry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(1);if(entry.getKey().equals(entry.getVal
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(c
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<files.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){format=cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(0);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){format=files.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry==null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.names,this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newLinkedHashMap(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.names,this.cpioEntry);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133Integeri=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;this.names.size()>0;++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133longi=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133chari=this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133shorti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("EntryFormat",this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("EntryFormat",this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i).if(cpioEntry==null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0).if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size()+1;++i){CpioArchiveEntrycpioEntry=names.get(i).if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i).if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(1).if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.entryFormat,format);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite(this.entryFormat);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.format);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.entryFormat,written);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.crc);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.entryFormat,this.written);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);if(out!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out==null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getName().equals
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);if(out==null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out==null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out==null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getName().equals(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133shorti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133Integeri=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133chari=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size()-1;i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<this.names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size()+1;i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.entryFormat,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.entryFormat,written);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite(this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.crc);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.entryFormat,cpioEntry.length);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.flush();break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.names);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite();break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133Integeri=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133longi=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;this.names.size()>0;i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133shorti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(i,format+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){out.put(i,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){out.put(i,format+2);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();i++){out.put(i,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size()+1;i++){out.put(i,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){out.put(i,format+3);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i+2);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i+1);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i+1);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i+1,format);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();++i){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<entries.size();++i){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size()+1;++i){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){format.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(1);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(1);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry==null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getName().equals(c
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);out.write(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);out.write(cpioEntry.getValue());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(1);out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(1);if(cpioEntry!=null){out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(1);if(cpioEntry!=null){out.write(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry==null){out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(1);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=1;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i+2);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i+1);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i+1);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i+1,format);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('0','-');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('-','n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite('n','-');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('N','-');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n','-'+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(0);if(entry.getKey().equals(entry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(1);if(entry.getKey().equals(entry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getName().equals(entry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(0);if(entry.getName().equals(entry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.equals(cpioEntry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.equals(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.equals(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(c
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getKey().equals(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getKey().equals(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getKey().equals(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getKey().equals
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getKey().equals(c
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i+1);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i+2);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i+1);if(cpioEntry==null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i+1);if(cpioEntry!=null){out.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i+1);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry==null){out.write(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(0);if(entry.getKey().equals(entry.getValue()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(0);if(entry.getKey().equals(entry.getValu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i+1);out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('0','n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n','0');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n','n'+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){out.put(i,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry==null){out.write(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){out.write(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(1);if(cpioEntry!=null){out.write(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newArrayList<String>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newLinkedList();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newArrayList<Short>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newArrayList<HashMap>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry==null){out.write(cpioEntry.getValue()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(0);if(entry.getKey().equals(entry.getValue
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite("n");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite('n',crc);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(1);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=1;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<paths.size();++i){CpioArchiveEntrycpioEntry=paths.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=paths.get(i);if(cpioEntry==null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=paths.get(0);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=paths.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=paths.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<paths.size();++i){CpioArchiveEntrycpioEntry=paths.get(0);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();i++){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size()-1;i++){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size()+1;i++){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<entries.size();i++){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size()-2;i++){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(1);if(cpioEntry.getName().equals(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getName().equals(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n',written);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('0',crc);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n',write);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('#',crc);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n',format);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newLinkedHashMap<String,OutputStream>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,OutputStream>(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,OutputStream>(1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,OutputStream>(0);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat"+this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat"+format,out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("EntryFormat"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=nu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out==
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out==nu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getName
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(1);if(cpioEntry.getName
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName==
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put('n',format);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat",newString(format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat",newString[]{format});
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat"+format,this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("EntryFormat"+format,this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat"+this.format,entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat"+this.entryFormat,entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("EntryFormat"+this.entryFormat,entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(2);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(0);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(5);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){out.put(i,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i+1);if(cpioEntry!=null){format=cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i+1);if(cpioEntry!=null){format=cpioEntry.getFormat()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i+1);if(cpioEntry!=null){format=cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i+2);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){format=names.get(i+1);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry==null){out.write(cpioEntry.getVal
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry==null){out.write(cpioEntry.getKey
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(3);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,format",entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,format,",entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("EntryFormat,format",entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,format"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,newString(format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(0);if(entry.getKey().equals(entry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(1);if(entry.getKey().equals(entry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=1;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getName().equals(entry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i-1);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i-2);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i-1);if(cpioEntry==null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i-1);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i-1);if(cpioEntry!=null){out.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133Integeri=0;names.size()>0;++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;names.size()==0;++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;names.size()!=0;++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;names.size()<0;++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133Integeri=0;names.size()>0;++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newLinkedHashMap<String,Object>(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(names).keySet();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(names,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(names.length);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(names.size());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry==null){format=cpioEntry.getFormat()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry==null){format=cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry==null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newArrayList<String,String>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newLinkedHashMap<String,String>(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newArrayHashMap<String,String>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newLinkedHashMap<String,String>(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newLinkedHashMap<String,String>(0);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('#',format);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite('#');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('#'+format);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write("#");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){out.put(i,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){out.put(i,format+2);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();++i){out.put(i,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){out.put(i,format+3);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.out.size();i++){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();i++){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size()-1;i++){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.list.size();i++){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.out.length;i++){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.entries.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.entryFormat.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.entryFormats.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<entries.size()-1;i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){format=cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpioEntry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=c
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry==null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry==null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(5);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=1;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(1);break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry==null){format=cpioEntry.getFormat
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){format=cpioEntry.getFormat
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpioEntry.getValu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpioEntry.getVal
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpioEntry.getValue()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpioEntry.getValue
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size()+1;i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);out.write(cpioEntry.getKey());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycrc=(CpioArchiveEntry)this.names.get(i);out.write(crc);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycrc=(CpioArchiveEntry)this.names.get(0);out.write(crc);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntrycrc=(CpioArchiveEntry)this.names.get(0);out.write(crc);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<this.names.size();i++){CpioArchiveEntrycrc=(CpioArchiveEntry)this.names.get(i);out.write(crc);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycrc=(CpioArchiveEntry)this.names.get(1);out.write(crc);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();i++){CpioArchiveEntrycrc=(CpioArchiveEntry)this.names.get(i);out.write(crc);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry==null){out.write(cpioEntry.getKey()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){out.write(cpioEntry.getKey()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,",this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(i+1,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){out.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){out.put(i+1,format,this.entryFormat);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();i++){out.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size()+1;i++){out.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite('0');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite("0");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write("0");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('0'+format);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('0',format);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(1);if(cpioEntry.getName().equals
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write("null");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite("nullformat");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite("nullentryformat");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite("nullentryFormat");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(1);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){format=cpioEntry.getFormat()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){format=cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133longi=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133Integeri=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=nu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133Integeri=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133shorti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(this.names.length);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(this.names.toArray(newString[this.names.size()]));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(this.names.size());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(this.names).toArray(newString[this.names.size()]);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(this.names+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,",this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newLinkedHashMap<String,Object>(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newjava.util.ArrayHashMap<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newArrayHashMap<String,Object>(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);if(out!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){For(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){For(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){For(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=nu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133shorti=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133Integeri=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133chari=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<this.names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size()-1;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;names.size()>0;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('/');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('0','/');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('#','/');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('/','n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('$','/');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(this,names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newLinkedHashMap<String,String>(this);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(this,cpioEntry);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(this,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(0);if(entry.getKey().equals(entry.getValue())
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;names.size()>0;++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry==null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);if(out!=null){out.close
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out==null){out.close
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newLinkedHashMap<String,Integer>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133OutputStreamout=newOutputStreamWriter(this.names.size());for(inti=0;i<this.names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.setLength(0);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.append("n");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(1);if(cpioEntry!=null){out.write(cpioEntry.getValue());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){out.write(cpioEntry.getValu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133longi=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133Integeri=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry==null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<files.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(0);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i+1);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i+=1){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i+=2){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i+=2){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size()+2;i+=2){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<names.size();i+=2){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite("null");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write("null");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write("n".getBytes());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write("#n");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite("nullformat");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write("");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(6);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(10);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133longi=0;i<names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){inti=0;i<names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133Integeri=0;i<names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;names.size()>0;i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write("#n");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write("'");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n',written);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('0',crc);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n',write);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n',crc+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('#',crc);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.out.size();++i){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();++i){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.entries.size();++i){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.numbers.size();++i){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.list.size();++i){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,format",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,format,",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,null",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,newString(format),format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,format",this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);if(out==null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.numbers+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.numbers,names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.numbers,this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.numbers).keySet();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);out.write(cpioEntry.getValue
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);out.write(cpioEntry.getValu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.getValu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.getVal
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){format=names.get(0);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){format=names.get(i);if(cpioEntry==null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){format=names.get(i).if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){format=entries.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=1;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newLinkedHashMap<String,Object>(){};
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(){thrownewIllegalArgumentException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(){0};
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(format,names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(format,out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(format,nameCount);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.entries.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.entryFormat.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.entryFormats.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<entries.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(1);if(out!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);if(out!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);if(out!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);if(out!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.get}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(0,this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(0,format+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(0,format-1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(this.entryFormat,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(0,this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(0,format-this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)names.get(i);if(out!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)names.get(i);if(out!=null){}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=nu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(this.names.length);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(this.names.size());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(this.names+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(this.names)+1;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newLinkedList<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newLinkedHashSet<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newArrayList<String,Object>(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newjava.util.ArrayList<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.flush();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){out.write(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<files.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<files.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){out.write(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){out.write(cpioEntry.getKey()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(0);if(cpioEntry!=null){out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<files.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){out.write(cpioEntry.getKey()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){output.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();i++){output.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size()-1;i++){output.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size()+1;i++){output.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('#'+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('#',format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite('#');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite("#n");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('#',written);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry==null){out.write(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpio
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(10);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(6);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(names).toArray(newString[names.size()]);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(names,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(names.size());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(names.length);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(entryFormat,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(i,this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(format,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(i,format,crc);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(short,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getKey().equals(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat()}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.entryFormat,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.entryFormat,names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.entryFormat,out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.entryFormat,cpioEntry);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n',format+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n',this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('0',format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n',format-1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n',this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=1;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite("n");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite('n',crc);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite('n',written);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite('n',format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){output.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();++i){output.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){this.output.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){input.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(1);if(entry.getKey().equals(entry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){out.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){out.put(i+1,format,this.entryFormat);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();++i){out.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){out.put(i+1,format,closed);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.entryFormat,write);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.cpioEntry);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){format=cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write("[null]");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write("n".getBytes());break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write("");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<files.size();++i){CpioArchiveEntrycpioEntry=paths.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n',entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.entryFormat,'n');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<files.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat["+format,entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,"+format,entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){out.put(i+1,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat",this);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put('n',format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(this,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.getValue());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('',crc);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133chari=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEnt
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=1;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=1;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(1);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(names.size()-1);if(cpioEntry!=null){format=cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(this.names)+1;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('',crc);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=nu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.close()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i+1);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i+3);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(1);if(out!=null){out
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=1;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);if(out!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newArrayList(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newArrayList(5);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){format=cpioEntry.getFormat
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName!=
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=this.names.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getName().equals(entry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i+1);if(cpioEntry!=null){format=cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newLinkedList<String,String>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newArrayMap<String,String>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format>>')'
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format[Delete]
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format>=')'
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format!=')'
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('0'+this.entryFormat);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i).if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.entryFormat,this.written);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(format==null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=nu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(format!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=nu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.entryFormat,write);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.cpioEntry);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(cpioEnt
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133Integeri=0;i<this.names.get(i);++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n','r');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry==null){format=cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){output.put(i,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,'"',format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,null,",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(1);if(cpioEntry!=null){out.write(cpioEntry.getValu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<names.size();++i){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){this.out.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<names.size();i++){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){format.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){format=cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat","this.format");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(this.names.size(),format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(names).toArray(newHashMap());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(names)+1;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(names).values();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=nu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){out.write(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(names.size(),format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.append("null");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(",null");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(".short");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){out.put(i,Format.UTF8);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getKey().equals(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry.getVal
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(format,nameEnd);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(format),out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('#'+this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out.close
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.entries.size();i++){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<names.size();i++){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){this.out.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133Integeri=0;i<this.names.get(i);i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newTreeMap<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newArrayList<String,Object>(2);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){out.put(i+1,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){format+=names.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i,format);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){output.put(i,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){input.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newArrayMap<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry.getValue())}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>()==};
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>()==0};
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(){}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out==null){out
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out==null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size()+1;++i){CpioArchiveEntrycpioEntry=names.get(i+1);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.getKey()}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(names).keySet();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(names)+1;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(names+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName().
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i+=2){out.put(i++,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<names.size();++i){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<out.size();++i){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry==null){out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.getKey()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat["+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(names.size()-1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i-1);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i-1).if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i-3);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newArrayList<String,OutputStream>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,OutputStream>(4);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,OutputStream>(2);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('#','-');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('-');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){out.put(i,Format.UTF8);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<name.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(names.size()-1);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<files.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133For(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i+1);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format>>')'
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format[Delete]
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){inti=0;names.size()>0;++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;names.size()>=0;++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133Integeri=0;names.size()==0;++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){inti=0;i<names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){out.put(i+1,format,started);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){out.write(cpioEntry.getVal
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.getVal}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){out.write(cpioEntry.getKey
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i+1);if(out!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(7);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.names,this.out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.entries);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.entryFormat,'n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write("[null]");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i+1);break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<entries.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<files.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,'"',entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,null,",entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i+1);if(entry.getKey().equals(entry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(0);if(entry.getName().equals(entry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write("'");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(names).toArray(newHashMap<String,String>());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(names).clone();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.put(getKey(),format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWriteObject();break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat","this.entryFormat");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.append('0');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=cpioEntry.getValue();if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(format!=null){for(inti=0;i<names.size();++i){format=names.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size();++i){format=names.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.info);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.outputNames);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){format=names.get(i);if(cpioEntry!=null){format=cpioEntry.getValue();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=1;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i+3);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=1;i<names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i).if(out!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=this.names.get(i);if(cpioEntry!=null){out.write(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=children.get(i);if(cpioEntry!=null){out.write(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(format!=null){for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(format==null){for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newArrayList<String,Object>(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){this.output.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133Integeri=this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)names.get(i);if(out!=null){out
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.append(",");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat",format,entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format+')'
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(this.entryFormat,this.cpioEntry);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getKey().equals(cpioEntry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(names).toArray(newHashMap<String,Object>());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(names).clone();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEnt
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.get(names.size());i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(this.names).clone();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i+1);if(entry.getKey().equals(entry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);if(out!=null){out
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){out.put(i+1,format,end);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(names!=null){for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i+1);if(cpioEntry!=null){out
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133chari=0;names.size()>0;++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;names.size()>0;++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,newformat(",",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,newFormat(",",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,format:"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,format","format");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133chari=this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.names!=null){inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<paths.size();++i){CpioArchiveEntrycpioEntry=paths.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<entries.size();++i){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i,format);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);if(out!=null){out
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out.close
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){out.put(i,format*1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){format.put(i,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){out.put(i,format*2);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWrite('n',format);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getName()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("EntryFormat","format");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("EntryFormat,",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){out.put(i+1,format,out.toString());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.equals
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.entryFormat!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.entryFormat!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133if(this.entryFormat!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133Integeri=this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format+')'
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format+')'
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newArrayList<Name>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(".s.IFJDCS".getBytes());break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write(".s.IFJDCS");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=1;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=this.names.get(i);if(cpioEntry!=null){format=cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(this.names-1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=children.get(i);if(cpioEntry!=null){out.write(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.numbers,this.out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();i++){CpioArchiveEntrycrc=(CpioArchiveEntry)this.names.get(i+1);out.write(crc);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=1;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){out.write(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){out.put(i,format*1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){out.put(i,format*2);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133Format.for(inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.append('#');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('>');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('ufffd');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.defaultWriteObject();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write("noentryformat");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newArrayList<String,Object>(){};
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i).clone();break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);out.write(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<files.size();++i){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>(3);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.append('#');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('%');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('>');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(7);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<files.size();++i){if(cpioEntry!=null){out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(format)+1;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>(format+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133inti=0;i<names.size()+format);++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=1;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,format",",entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat,newFormat(",",entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133chari=names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(1);out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.entryFormat,this.cpioEntry);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap(this.entryFormat,this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,OutputStream>(out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,OutputStream>(8);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<files.size();i++){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133Format.for(inti=0;i<names.size();++i){out.put(i,format);}
