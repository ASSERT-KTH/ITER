projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName().equals(cpioEntry.getName
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry.getValue())){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry.getValue())){return;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.names.get(i);if(entry.getKey().equals(entry.getValue())){out.put
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.getValue());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);if(out!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133for(inti=0;i<names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,String>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133this.names=newHashMap<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat",entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133out.write('n');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java133getNames().put("entryFormat",format);
