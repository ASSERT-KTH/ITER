projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName().equals(cpioEntry.getName
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName().equals(cpioEntry.getName())){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName().equals(cpioEntry.getName()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName().equals(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("entryFormat",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put(i,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size()-1;i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size()+1;i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i+=2){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalStateException("");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatdoesnotexist:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatdoesn'texist:"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Unknownformat:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Unknownformat:"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatdoesn'texist:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName().equals(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName().equals(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName().equals
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName().equals(c
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName().equals(cp
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getName().equals(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName().equals(cpioEnt
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashMap<String,Output>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Input>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashMap<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(0);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashMap();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Integer>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Short>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getName().equals(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write("n");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n',format);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('0');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite('n');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite("null");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n',format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write("n");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite('n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('0');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n','/');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashMap<String,String>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(0);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashMap<String,OutputStream>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(0);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put(0,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size()+1;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){out.put(i,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.getValue());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.write(format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);cpioEntry.setFormat(cpioEntry.getFormat());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("EntryFormat",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("entryFormat",this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("Format",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEnt
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){out.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){output.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<nameList.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("entryFormat,",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n','n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n','-');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(2);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList<String,OutputStream>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(2);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(4);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.getValue());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.write(format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.close();break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('#');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList<String,Output>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayHashMap<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format==null){thrownewIllegalArgumentException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(write){thrownewIllegalArgumentException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format==null){thrownewIllegalArgumentException("".getMessage());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatnotinitialized:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){out.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){out.put(i,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){output.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName().equals(cpioEntry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(cpioEntry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.getValue
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);cpioEntry.setFormat(cpioEntry.getFormat());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.getKey());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);cpioEntry.setFormat(cpioEntry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Unknownentryformat:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Undefinedformat:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("")
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Unknownentryformat:"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('#');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.append('n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap(this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("entryFormat","format");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(4);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(this);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(8);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(4);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(8);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(8);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry==null){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.put(i,format
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i+1);if(cpioEntry!=null){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.put
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("Format,",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("Format"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("Format",this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n',format+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('0',format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n',this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n',format-1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('#',format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<names.size();i++){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size()-1;i++){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size()+1;i++){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<entries.size();i++){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<out.size();i++){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("entryFormat",newString(format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("entryFormat",newString[]{format});
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);cpioEntry.setFormat(cpioEntry.getFormat());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);cpioEntry.setFormat(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);cpioEntry.setFormat(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);cpioEntry.setFormat(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);cpioEntry.setFormat(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);cpioEntry.setFormat(cpioEntry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap(this.entryFormat,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap(this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap(this.entryFormat,names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap(this.entryFormat,cpioEntry);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap(this.entryFormat,out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134read(){thrownewIllegalArgumentException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134reason(write){thrownewIllegalArgumentException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134Thread.currentThread().setContextClassLoader(this);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134Thread.currentThread().interrupt();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134while(!closed){thrownewIllegalArgumentException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134while(!closed){thrownewIllegalArgumentException("");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.write(format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.write(format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.write(format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.write(format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.write(format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(1);out.write(format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayHashMap<String,OutputStream>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashMap<String,OutputStream>(out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(out,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(this.out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(numbers);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.write(format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.write(format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.write(format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.write(format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.write(format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(1);out.write(format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){output.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<names.size();++i){output.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){this.output.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){input.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(this.names.length);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(this.names.toArray(newString[this.names.size()]));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(this.names.size());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashMap<String,String>(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(this.names).toArray(newString[this.names.size()]);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(10);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(names,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashMap<String,Output>(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(numbers);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(names,out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(2);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashMap<String,Input>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Input>(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Input>(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Input>(1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(this.names!=null){for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatdoesnotexist:"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatcannotbenull.");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134newIllegalArgumentException("")
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException(")
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getName().equals(c
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(6);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(10);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatnotinitialized:"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format==null){thrownewIllegalArgumentException("Formatnotinitialized:");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatnotinitialized:",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134Throwables.thrownewIllegalArgumentException("Formatnotinitialized:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatisnotinitialized:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('/');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('0','/');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('#','/');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n','/'+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('/','n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newjava.util.ArrayHashMap<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayHashMap<String,Object>(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newTreeMap<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashMap<String,Object>(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashMap<String,Object>(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134shorti=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134Integeri=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134chari=names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<this.names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<names.size()-1;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;names.size()>0;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format==null){thrownewIllegalArgumentException("Formatdoesn'texist:");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134Throwables.thrownewIllegalArgumentException("Formatdoesn'texist:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatdoesn'texist:",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry==null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i+1);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=this.names.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite('0');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('0',format);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite("0");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('0'+format);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write("0");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(this.names,this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashMap<String,Output>(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(this.names,this.cpioEntry);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(this.numbers);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(this.names,names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134For(inti=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){out.put(i,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getName().equals(cp
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getName().equals
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format==null){thrownewIllegalArgumentException("Unknownentryformat:");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134Throwables.thrownewIllegalArgumentException("Unknownentryformat:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format==null){thrownewIllegalStateException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalStateException("Formatcannotbenull.");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalStateException("Formatdoesnotexist:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format==null){thrownewIllegalStateException("".getMessage());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalStateException("Formatdoesnotexist:"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry==null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(5);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedList<String,OutputStream>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashSet<String,OutputStream>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList<String,OutputStream>(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);out.write(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);out.write(cpioEntry.getValue());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(1);out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite('0');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('0'+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite("UTF-8");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite("0");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write("0");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(c
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){out.put(i,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(3);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("EntryFormat",this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("entryFormat,",this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("entryFormat",newString(this.format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<this.names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size()+1;i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){out.put(i,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i+=2){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashMap<String,Integer>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Integer>(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Integer>(0);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Integer>(1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Integer>(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Integer>(2);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);out.write(cpioEntry.getValue
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);out.write(cpioEntry.getValu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.getValu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getName()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getName()}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getName()!=
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName()}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getName()==
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i+1);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134shorti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134Integeri=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<names.size()-1;i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134chari=names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<names.size()+1;i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(this.entryFormat,names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashMap<String,Output>(this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(this.entryFormat,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(this.numberFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('0','-');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n','-'+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('-','n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('N','-');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('-');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);cpioEntry.setFormat(cpioEntry.getFormat());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);cpioEntry.setFormat(cpioEntry.getFormat());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);cpioEntry.setFormat(cpioEntry.getFormat());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);cpioEntry.setFormat(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put(0,format+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put(0,format-1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put(0,this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put(this.entryFormat,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put(entryFormat,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put(0,format-this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put(i,format+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){out.put(i,format+2);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<names.size();i++){out.put(i,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){out.put(i,format+3);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite("n");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite('n',format);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(format,out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(format,0);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(format,cpioEntry);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(format,names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashMap(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList<String,String>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashMap<String,String>(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayHashMap<String,String>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashMap<String,String>(0);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(1);if(cpioEntry.getName().equals
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134For(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getName().equals
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(names,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(names).toArray(newString[names.size()]);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(names.size());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(names.length);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i+=1){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i+=2){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size()+2;i+=2){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134For(inti=0;i<names.size();i+=2){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashMap<String,Short>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Short>(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Short>(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Short>(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,short>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Short>(1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedList<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashSet<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList<String,Object>(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newjava.util.ArrayList<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);out.write(cpioEntry.getKey());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.out.size();i++){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<names.size();i++){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.entries.size();i++){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.numbers.size();i++){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.list.size();i++){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format==null){thrownewIllegalArgumentException("Unknownformat:"+format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format!=null){thrownewIllegalArgumentException("Unknownformat:"+format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Unknownformat:"+format,out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format>=null){thrownewIllegalArgumentException("Unknownformat:"+format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134newIllegalArgumentException("Unknownformat:"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Unknownformat:"+format.toString());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(1);if(cpioEntry.getName().equals(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(format,names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(format,out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(format,nameCount);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(format,out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(format,names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(format,0);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('#'+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite('#');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('#').getBytes();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('#').replace('n','r');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite("#n");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put(i+1,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){out.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){out.put(i+1,format,this.entryFormat);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<names.size();i++){out.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){out.put(i+1,format,closed);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(this,names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashMap<String,String>(this);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(this,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.equals(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.equals(cpioEntry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.equals(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.getValu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.getValue()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.getVal
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){out.write(cpioEntry.getValue());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.getValue
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format==null||format.length()==0){thrownewIllegalArgumentException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format==null){thrownewIllegalArgumentException("".trim());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134while(format!=null&&format.length()>0){out.write(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format==null){thrownewIllegalArgumentException("Unknownentryformat:"+format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format!=null){thrownewIllegalArgumentException("Unknownentryformat:"+format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Unknownformatformat:"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Unknownentryformat:"+format,out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);cpioEntry.setFormat(c
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);cpioEntry.setFormat(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);cpioEntry.setFormat(c
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);cpioEntry.setFormat(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);cpioEntry.set
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(this.names.length);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(this.names.size());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(this.names+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(this.names).keySet();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(this.names,this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){output.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<names.size();i++){output.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size()-1;i++){output.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size()+1;i++){output.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(names,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(names).keySet();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(names.size());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(names+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Undefinedformat:"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format==null){thrownewIllegalArgumentException("Undefinedformat:");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format!=null){thrownewIllegalArgumentException("Undefinedformat:");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134Throwables.thrownewIllegalArgumentException("Undefinedformat:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Undefinedformat:"+this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry==
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry!=
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry==
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry!=
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(this.names!=null){for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('#',format);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('#'+format);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite("#n");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite('#');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('%');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write("#");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134while(format!=null&&format.getType()==Token.NAME){thrownewIllegalArgumentException("".getMessage());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134while(format!=null&&format.getType()==Token.STRING){thrownewIllegalArgumentException("".getMessage());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134while(format!=null&&format.getType()==Token.NAME){thrownewIllegalArgumentException("".getMessage());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134while(format!=null&&format.getType()==Token.STRING){thrownewIllegalArgumentException("".getMessage());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134while(format!=null&&format.getType()==Token.NAME){thrownewIllegalArgumentException("").getMessage();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134while(format!=null&&format.getType()==Token.STRING){thrownewIllegalArgumentException("").getMessage();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayHashMap<String,Output>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList<String>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedList();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList<Short>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList<HashMap>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){out.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){out.put(i+1,format,this.entryFormat);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<names.size();++i){out.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){out.put(i+1,format,closed);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedList<String,Output>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedHashSet<String,Output>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList<String,Output>(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newjava.util.ArrayList<String,Output>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put(inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format==null){thrownewIllegalArgumentException("Formatdoesn'texist:"+format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format!=null){thrownewIllegalArgumentException("Formatdoesn'texist:"+format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatdoesn'texist:"+format,out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatdoesn'texist:formatisnull.");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite("n");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite('n',format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite('n',written);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134For(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getName().equals(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134For(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(1);if(cpioEntry.getName().equals(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.flush();break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write(this);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write(this.entryFormat);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format==null){thrownewIllegalArgumentException("Formatdoesnotexist:");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134Throwables.thrownewIllegalArgumentException("Formatdoesnotexist:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatdoesnotexist:",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatdoesnotexist:'"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(6);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(10);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.flush();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format==null){thrownewIllegalArgumentException("Unknownformat:");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format!=null){thrownewIllegalArgumentException("Unknownformat:");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134Throwables.thrownewIllegalArgumentException("Unknownformat:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Unknownformat:"+this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<names.size();++i){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<entries.size();++i){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size()+1;++i){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){format.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(5);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write("null");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite("nullformat");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite("nullentryformat");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite("null",format);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134Format.for(inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134For(inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){out.put(i,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('0','n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n','0');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n','_');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.setLength(0);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write(this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap(this.names,this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap(this.numbers);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap(this.names,this.cpioEntry);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.getValue());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.getValu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.getVal
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);out.write(cpioEntry.getValue());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put(format,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put(i,format,this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put(short,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put(i,format,cpioEntry);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){out.put(i,format+2);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){out.put(i,format+3);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){out.put(i,format*1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(0);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write("#n");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write("'");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(5);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.nameList.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<namesList.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.out.size();++i){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<names.size();++i){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.numbers.size();++i){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.entries.size();++i){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.list.size();++i){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("EntryFormat",this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n',format+1);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n',this.entryFormat);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n',format-1);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite("null");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write("null");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write("n".getBytes());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write("#n");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWrite("nullformat");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write("");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("entryFormat,format",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("entryFormat,format,",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("entryFormat,out,",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("entryFormat,newString(format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("entryFormat,newString[]{format});
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("EntryFormat,format",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("entryFormat,format"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(write){thrownewIllegalArgumentException("Undefinedformat:");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList<String,OutputStream>(2);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write("[null]");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.put(i
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<name.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('#'+this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('#','n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('#',write);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(this.outputFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayMap<String,String>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newLinkedList<String,String>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.getValue());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put(this.names.size(),format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatnotinitialized:'"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i+=2){out.put(i++,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(names)+1;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(names).keySet();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(names+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(this.names+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(this.names)+1;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayMap<String,Output>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(names).keySet();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(names)+1;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(names+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Input>(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList<String,Input>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayMap<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(format,nameEnd);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(format),out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i-1);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("entryFormat,'"',format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("entryFormat,null,",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134For(inti=0;i<names.size();i++){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){format.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName().
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134chari=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put(names.size(),format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<names.size()+format;i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);cpioEntry.setFormat(cpioEnt
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);cpioEntry.setFormat(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);cpioEntry.setFormat(cpio
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i+1);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){format=cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newTreeMap<String,Output>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){out.put(i+1,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134Thread.currentThread().setCurrentName(this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134Thread.currentThread().setContextClass(getClass().getName());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134Thread.currentThread().setCurrentLocation(this);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134Thread.currentThread().setContextClass(this);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134Thread.currentThread().intermediateThread();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134Thread.currentThread().getContextClassLoader();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n',entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134For(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.write(format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(format),out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(format,output);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList<String,Short>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("Format",this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("Format",newFormat(format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEnt
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpio
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134For(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEnt
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Unknownentryformat:"+this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Unknownentryformat:",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("ENTRY_FORMAT",this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(3);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.close();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){output.put(i,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n',entryFormat);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){format.add(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<out.size();++i){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(names).toArray(newHashMap());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(names).toArray(newHashMap<String,Object>());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(names)+1;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.append("null");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put("null");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write(",null");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write(".short");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i+1);out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.close();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(7);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format!=null){thrownewIllegalArgumentException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(format==null||format.length()!=0){thrownewIllegalArgumentException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134safeGet(this.entryFormat){thrownewIllegalArgumentException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i);out.put(i,format
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(this.names!=null){for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(1);if
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134chari=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put(names.size()-1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put('n',format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(this.names+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(this.names)+1;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.getKey()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(this.names)+1;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(7);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry.getVal
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);out.write(cpioEntry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(write){thrownewIllegalStateException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalStateException("Formatnotinitialized:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134For(inti=0;i<names.size();i++){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){this.out.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write("[null]");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write("n".getBytes());break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write("");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<entries.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){out.put(i+1,format,end);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList<String,Object>(2);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){output.put(i,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){input.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayHashMap();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.getName()!=
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('>');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('$','/');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(cpioEnt
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n',written);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write(this.entryFormat,'n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap(this.names,this.out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap(this.entries);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntryout=(CpioArchiveEntry)this.names.get(i+1);out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134For(inti=0;i<names.size();++i){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){this.out.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);cpioEntry.setFormat(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);cpioEntry.setFormat(cpioEntry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n',written);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n',write);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put(i,this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i);if(cpioEntry!=null){out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList<String,Integer>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList(5);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size()+1;i++){out.put(i+1,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134wired){thrownewIllegalArgumentException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134while(!clone()){thrownewIllegalArgumentException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134while(!clone()){thrownewIllegalArgumentException("");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatdoesnotexist:")
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<name.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(format,output);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(format),out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(out,names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(out,nameCount);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(6);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n','r');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n','n'+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('0'+this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('0','_');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){out.put(i+1,format,out);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayMap<String,OutputStream>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.getName
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(1);if(cpioEntry.getName()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(names).toArray(newHashMap<String,String>());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(names).clone();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatdoesn'texist:'");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap(this.entryFormat,this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap(this.entryFormat,this.cpioEntry);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatdoesnotexist:'");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);cpioEntry.setFormat(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("Format","format");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134Format.for(inti=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){out.put(i,Format.UTF8);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(7);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(this.numberFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList<String,Output>(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,OutputStream>(format+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalStateException("Unknownentryformat:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalStateException("Formatdoesn'texist:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalStateException("Unknownentryformat:"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalStateException("")
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalStateException("Formatalreadycontainsanentryformat.");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.put(getKey(),format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.putShort(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList<String,Object>(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList<String,Object>(4);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.append('#');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList<String,OutputStream>(4);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(1);if(cpioEnt
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i+1);if(cpioEnt
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(format)+1;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,String>(Format.NAME);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("entryFormat,format:"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("entryFormat,format","format");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("entryFormat,newFormat(",",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.append('0');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.append('#');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134[Delete]
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134safeMultilineFormat(format){thrownewIllegalArgumentException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134safeGet(this.entryFormat,format)){thrownewIllegalArgumentException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134safeGet(this.entryFormat,null)){thrownewIllegalArgumentException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134safeGet(this.entryFormat)){thrownewIllegalArgumentException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134safeMultiplyFormat(format){thrownewIllegalArgumentException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134safeGet(this.entryFormat,format){thrownewIllegalArgumentException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Integer>(4);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){format=names.get(i);if(cpioEntry!=null){format=cpioEntry.getFormat();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);out.write(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(1);out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Input>(this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Input>(4);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.append('0');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Unknownformatforformat:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Unknownformat:",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){out.put(i,format*2);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=paths.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i).if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=children.get(i);if(cpioEntry!=null){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=paths.get(i);if(cpioEntry!=null){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(i).if(cpioEntry!=null){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Short>(4);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Short>(8);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Undefinedformat:",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("CpioArchiveEntry.setFormat")
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("CpioArchiveEntry.format")
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("EntryFormat,",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("EntryFormat","format");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(names).clone();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Object>(this.names).clone();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList<Name>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newArrayList(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('n',format+'n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write('');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.defaultWriteObject();break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134if(this.names!=null){for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){out.put(i,format*1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){format.put(i,format+1);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134inti=0;i<names.size()+format);++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134while(!finished){thrownewIllegalArgumentException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134Thread.currentThread().intermediateThread().intermediateThread();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write("'");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134For(inti=0;i<names.size();++i){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<files.size();++i){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap(this.info);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap(this.outputNames);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write(".s.IFJDCS".getBytes());break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.write(".s.IFJDCS".toString());break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=names.get(0);if(cpioEntry!=null){out.write(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();++i){CpioArchiveEntrycpioEntry=files.get(i);if(cpioEntry!=null){out.write(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134this.names=newHashMap<String,Output>(out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<files.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<files.size();i++){format.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatdoesn'texist:format"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatdoesn'texist:formatdoesnotexist:"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Formatdoesn'texist:format'"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.equals
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(c
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134out.append('n');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134getNames().put("entryFormat","this.format");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Unknownformat:"+this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134thrownewIllegalArgumentException("Unknownformat:"+format,expectedFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134for(inti=0;i<names.size();i++){this.output.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134cast(format){thrownewIllegalArgumentException("".getMessage());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134cast(this.entryFormat,null)){thrownewIllegalArgumentException("".getMessage());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134cast(this.entryFormat,null){thrownewIllegalArgumentException("").getMessage());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134cast(this.entryFormat,null){thrownewIllegalArgumentException("".getMessage());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134cast(this.entryFormat,format){thrownewIllegalArgumentException("".getMessage());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java134cast(this.entryFormat,null){thrownewIllegalArgumentException("").getMessage();}
