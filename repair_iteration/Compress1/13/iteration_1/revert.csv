projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.length;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_BINARY){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<format.length();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<format.length();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(newOutputStreamWriter(format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(newInputStreamReader(format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(newOutputStreamReader(format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Formatisnull.");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException(""):format;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126this.entryFormat=format;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_BINARY){break;}if(format==FORMAT_OLD_BINARY){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_BINARY){break;}if(format>=FORMAT_OLD_BINARY){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_BINARY){break;}if(format!=FORMAT_OLD_BINARY){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_BINARY){break;}if(format>>FORMAT_OLD_BINARY){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_BINARY){break;}if(format==FORMAT_OLD_BINARY){break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_BINARY){break;}If(format==FORMAT_OLD_BINARY){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_BINARY){break;}if(format[Delete]FORMAT_OLD_BINARY){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(newOutputStreamWriter(out,format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126CpioEntry.setFormat(newOutputStreamWriter(format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(newOutputStreamWriter(format),format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(newOutputStreamWriter(format),out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126CpioEntrycpioEntry=newOutputStreamWriter(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(newOutputStreamWriter(format,format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(newOutputStreamWriter(format),this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(newInputStreamReader(format),out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126CpioEntry.setFormat(newInputStreamReader(format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(newInputStreamReader(format),format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126CpioEntrycpioEntry=newInputStreamReader(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(newInputStreamReader(format,format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(newInputStreamReader(format),DEFAULT_VERSION);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126OutputStreamout=(OutputStream)this.entryFormat.clone();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126OutputStreamout=this.entryFormat.getOutputFile();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126OutputStreamout=(OutputStream)this.names.get(0);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126OutputStreamout=(OutputStream)this.names.get(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126OutputStreamout=this.entryFormat.getOutputStream();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126OutputStreamout=(OutputStream)this.entryFormat.clone();out.close();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126OutputStreamout=getEntryFormat(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(newOutputStreamReader(format),out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126CpioEntry.setFormat(newOutputStreamReader(format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(newOutputStreamReader(format),format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126CpioEntrycpioEntry=newOutputStreamReader(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(newOutputStreamReader(format,format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126Throwables.thrownewIllegalArgumentException("Formatisnull.");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Formatisnotnull.");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Formatisnull!");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126Throwables.warning("Formatisnull.");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Formatisnull.Format:"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW){break;}else{for(inti=0;i<format.length();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126for(inti=0;i<format.length();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_ASCII){if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<format.length();++i){out.put(i,format);}}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_CRC){if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<format.length();++i){out.put(i,format);}}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_ASCII){if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<format.length();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW||format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<format.length();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_ASCII){if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<format.length();++i){out.put(i,format);}}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW){break;}else{for(inti=0;i<names.length;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_ASCII){if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.length;++i){out.put(i,format);}}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_ASCII){if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.length;++i){out.put(i,format);}}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_ASCII){if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.length;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_CRC){break;}else{for(inti=0;i<names.length;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_ASCII){if(format==FORMAT_OLD_BINARY){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_ASCII){if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.length;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW){break;}else{for(inti=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_ASCII){if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.size();++i){out.put(i,format);}}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_CRC){if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.size();++i){out.put(i,format);}}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_ASCII){if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.size();++i){out.put(i,format);}}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_CRC){break;}else{for(inti=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_ASCII){if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW||format==FORMAT_NEW){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW||format==FORMAT_NEW_CRC){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW||format==FORMAT_OLD_BINARY){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW||format==FORMAT_NEW_BINARY){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format!=FORMAT_NEW||format==FORMAT_NEW){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format!=FORMAT_NEW||format==FORMAT_NEW_CRC){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126this.entryFormat=format+1;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126this.entryFormat=newHashMap();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126this.entryFormat=entryFormat;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126this.entryFormat=newHashMap<String,String>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126this.entryFormat=newOutputStreamWriter(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126this.entryFormat=newOutputStreamWriter();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW){break;}if(format==FORMAT_NEW){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW){break;}if(format>=FORMAT_NEW){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW){break;}if(format!=FORMAT_NEW){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW){break;}if(format>>FORMAT_NEW){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW){break;}If(format==FORMAT_NEW){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW){break;}if(format==FORMAT_NEW){break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW){break;}if(format==FORMAT_N){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(newString(format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(format+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(format,out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Formatisnotavalidformat.");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Formatcannotbenull.");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Formatisnotavalidformat,");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Formatisnotavalidformat:"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Formatisnotavalidformat");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW){break;}else{for(inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_ASCII){if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.size();i++){out.put(i,format);}}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_ASCII){if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_ASCII){if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.size();i++){out.put(i,format);}}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_CRC){break;}else{for(inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_ASCII){if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW){break;}else{for(inti=0;i<format.length();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126for(inti=0;i<format.length();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_ASCII){if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<format.length();i++){out.put(i,format);}}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW||format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<format.length();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_ASCII){if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<format.length();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_ASCII){if(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<format.length();i++){out.put(i,format);}}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_CRC){break;}else{for(inti=0;i<format.length();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Unknownformat:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalStateException("");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Formatisnotavalidformat:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_BINARY||format==FORMAT_OLD_ASCII){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_BINARY){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_CRC){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126||format==FORMAT_OLD_BINARY){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_ASCII){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("):format;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Formatdoesnotexist:"):format;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("BINARYisnotavalidformat");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("BINARYisnotsupported.");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Formatnotfollowedbyastringvalue");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Notavalidformat");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126CpioEntrycpioEntry=newCpioEntry(newOutputStreamReader(format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setPath(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126out.close();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126OutputStreamout=newOutputStreamWriter();out.write(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126OutputStreamout=newOutputStreamWriter(format);out.write('n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126CpioEntrycpioEntry=newCpioEntry(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126CpioEntrycpioEntry=newCpioEntry(newInputStreamReader(format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126CpioEntrycpioEntry=newCpioEntry(format,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format!=FORMAT_NEW){break;}else{for(inti=0;i<names.length;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW||format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.length;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126for(inti=0;i<names.length;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW||format==FORMAT_NEW){break;}else{for(inti=0;i<names.length;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW||format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.length;++i){out.put(i,format
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format!=FORMAT_NEW||format==FORMAT_OLD_BINARY){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format!=FORMAT_NEW){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW||format!=FORMAT_NEW){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format!=FORMAT_NEW){break;}else{for(inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126for(inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126out.put(format,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW){break;}else{for(inti=0;i<names.size();i++){out.put(i,format
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW){break;}else{for(inti=0;i<names.size();i++){out.put(null,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Formatisnull:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Formatdoesnotexist:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format!=FORMAT_NEW){break;}else{for(inti=0;i<format.length();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW||format==FORMAT_NEW){break;}else{for(inti=0;i<format.length();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW){break;}else{for(inti=0;i<Format.length();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format!=FORMAT_NEW){break;}else{for(inti=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126for(inti=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW){break;}else{for(inti=0;i<names.size();++i){out.put(i,format
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW){break;}else{for(inti=0;i<names.size();++i){out.put(null,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_BINARY){break;}if(format==FORMAT_OLD_BAINARY){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_BINARY||format==FORMAT_NEW_CRC){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_BINARY||format==FORMAT_OLD_ASCII){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW){break;}if(format==FORMAT_NW){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126this.entryFormat=newHashMap<Short,Short>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format!=FORMAT_NEW){break;}else{for(inti=0;i<format.length();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW||format==FORMAT_NEW){break;}else{for(inti=0;i<format.length();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW||format==FORMAT_NEW_CRC){break;}else{for(inti=0;i<format.length();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126CpioEntrycpioEntry=newCpioEntry(newOutputStreamWriter(format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126OutputStreamout=(OutputStream)cpioEntry.clone();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(format);out.write('n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(format);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(format);out.close();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126because(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.length;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_BINARY){break;}else{for(inti=0;i<names.length;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_BINARY||format==FORMAT_NEW_CRC){break;}else{for(inti=0;i<names.length;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Unknownheadertype");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Unknownentryformat:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Unknownformatformat:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Unknownformattype");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Binaryformatnotsupported.");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126because(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<format.length();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_BINARY){break;}else{for(inti=0;i<format.length();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126||format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<format.length();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126ThrownewIllegalArgumentException("Formatisnull.");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Formatisnull",format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Formatisnull,");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_BINARY||format==FORMAT_OLD_CRC){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_BINARY||format==FORMAT_OLD_BINARY){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126because(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_BINARY){break;}else{for(inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW||format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_BINARY||format==FORMAT_NEW_CRC){break;}else{for(inti=0;i<names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW||format>=FORMAT_NEW){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW||format==FORMAT_NEW.length){break;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Unknownformatformat'"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Formatdoesnotexist:format'"+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Unknownformatformat"):format;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126thrownewIllegalArgumentException("Formatnotfollowedbyavalue");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126this.entryFormat=format<0?null:format;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126this.entryFormat=format!=null?format:newHashMap();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126this.entryFormat=format==null?format:newHashMap();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126this.entryFormat=format{null?getFormat():format;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126because(format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_BINARY){break;}else{for(inti=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW||format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_OLD_BINARY||format==FORMAT_NEW_CRC){break;}else{for(inti=0;i<names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_BINARY){break;}else{for(inti=0;i<format.length();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126if(format==FORMAT_NEW_CRC){break;}else{for(inti=0;i<format.length();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126||format==FORMAT_OLD_BINARY){break;}else{for(inti=0;i<format.length();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(newInputStreamReader(format),this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(newInputStreamReader(out,format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setPadded(true);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setCpio(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(newOutputStreamReader(out,format));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java126cpioEntry.setFormat(newOutputStreamReader(format),this.entryFormat);
