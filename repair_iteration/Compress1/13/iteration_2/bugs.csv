bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
2	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]    IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
3	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
4	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]      IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
5	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
6	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]        IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
7	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >>  FORMAT_OLD_BINARY)  {  break;  }  [CE]  incompatible  types  [FE]          IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >>  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >>  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  incompatible  types	5	None	add
8	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  [CE]  orphaned  default  [FE]            IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;	  	non-compiled	[CE]  orphaned  default	5	None	add
9	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  If(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  ';'  expected  [FE]              IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  If(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    If(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  ';'  expected	5	None	add
10	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  [Delete]  FORMAT_OLD_BINARY)  {  break;  }  [CE]  ')'  expected  [FE]                IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  [Delete]  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  [Delete]  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  ')'  expected	5	None	add
11	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(out,  format));  [CE]  cannot  find  symbol  [FE]          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(out,  format));  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(out,  format));	  cpioEntry.setFormat(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
12	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(format));  [CE]  cannot  find  symbol  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(format));  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamWriter(format));	  cpioEntry.setFormat(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
13	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format),  format);  [CE]  cannot  find  symbol  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format),  format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(format),  format);	  cpioEntry.setFormat(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
14	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format),  out);  [CE]  cannot  find  symbol  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format),  out);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(format),  out);	  cpioEntry.setFormat(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
15	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(format);  [CE]  cannot  find  symbol  [FE]                  EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamWriter(format);	  cpioEntry.setFormat(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
16	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format,  format));  [CE]  cannot  find  symbol  [FE]                    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format,  format));  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(format,  format));	  cpioEntry.setFormat(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
17	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format),  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format),  this.entryFormat);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(format),  this.entryFormat);	  cpioEntry.setFormat(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
18	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  out);  [CE]  cannot  find  symbol  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  out);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  out);	  cpioEntry.setFormat(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
19	[BUG]  [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(format));  [CE]  cannot  find  symbol  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(format));  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  InputStreamReader(format));	  cpioEntry.setFormat(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
20	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  format);  [CE]  cannot  find  symbol  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  format);	  cpioEntry.setFormat(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
21	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format);  [CE]  cannot  find  symbol  [FE]                  EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  InputStreamReader(format);	  cpioEntry.setFormat(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
22	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format,  format));  [CE]  cannot  find  symbol  [FE]                    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format,  format));  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format,  format));	  cpioEntry.setFormat(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
23	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_VERSION);  [CE]  cannot  find  symbol  [FE]                      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_VERSION);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_VERSION);	  cpioEntry.setFormat(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
24	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.entryFormat.clone();  [CE]  short  cannot  be  dereferenced  [FE]                      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  OutputStream  out  =(OutputStream)this.entryFormat.clone();  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.entryFormat.clone();	      	non-compiled	[CE]  short  cannot  be  dereferenced	9	None	replace
25	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.getOutputFile();  [CE]  short  cannot  be  dereferenced  [FE]                        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  OutputStream  out  =  this.entryFormat.getOutputFile();  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.getOutputFile();	      	non-compiled	[CE]  short  cannot  be  dereferenced	9	None	replace
26	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(0);  [CE]  no  suitable  method  found  for  get(int)  [FE]                          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(0);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.names.get(0);	      	non-compiled	[CE]  no  suitable  method  found  for  get(int)	9	None	replace
27	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(format);  [CE]  no  suitable  method  found  for  get(short)  [FE]                            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.names.get(format);	      	non-compiled	[CE]  no  suitable  method  found  for  get(short)	9	None	replace
28	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.getOutputStream();  [CE]  short  cannot  be  dereferenced  [FE]                              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  OutputStream  out  =  this.entryFormat.getOutputStream();  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.getOutputStream();	      	non-compiled	[CE]  short  cannot  be  dereferenced	9	None	replace
29	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.entryFormat.clone();  out.close();  [CE]  short  cannot  be  dereferenced  [FE]                                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  OutputStream  out  =(OutputStream)this.entryFormat.clone();  out.close();  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.entryFormat.clone();  out.close();	      	non-compiled	[CE]  short  cannot  be  dereferenced	9	None	replace
30	[BUG]  [BUGGY]  OutputStream  out  =  getEntryFormat(format);  [CE]  cannot  find  symbol  [FE]                                  EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  OutputStream  out  =  getEntryFormat(format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  getEntryFormat(format);	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
31	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format),  out);  [CE]  cannot  find  symbol  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format),  out);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(format),  out);	  cpioEntry.setFormat(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
32	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(format));  [CE]  cannot  find  symbol  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(format));  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamReader(format));	  cpioEntry.setFormat(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
33	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format),  format);  [CE]  cannot  find  symbol  [FE]                  EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format),  format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(format),  format);	  cpioEntry.setFormat(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
34	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format);  [CE]  cannot  find  symbol  [FE]                    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamReader(format);	  cpioEntry.setFormat(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
35	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format,  format));  [CE]  cannot  find  symbol  [FE]                      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format,  format));  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(format,  format));	  cpioEntry.setFormat(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
36	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  null. ");  [CE]  <identifier>  expected  [FE]          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  null. ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  is  null. ");	  throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
37	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  null. ");  [CE]  unreachable  statement  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  null. ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  null. ");	  throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  unreachable  statement	16	None	replace
38	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null! ");  [CE]  unreachable  statement  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null! ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null! ");	  throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  unreachable  statement	16	None	replace
39	[BUG]  [BUGGY]  Throwables.warning( "Format  is  null. ");  [CE]  cannot  find  symbol  Throwables  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  Throwables.warning( "Format  is  null. ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.warning( "Format  is  null. ");	  throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	16	None	replace
40	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null.  Format: "  +  format);  [CE]  unreachable  statement  [FE]                  EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null.  Format: "  +  format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null.  Format: "  +  format);	  throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  unreachable  statement	16	None	replace
41	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                  EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	7	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  short  cannot  be  dereferenced  [FE]                    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  short  cannot  be  dereferenced	7	None	replace
43	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	7	None	replace
44	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	7	None	replace
45	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	7	None	replace
46	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	7	None	replace
47	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	7	None	replace
48	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	4	None	replace
49	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	4	None	replace
50	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                  EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	4	None	replace
51	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	4	None	replace
52	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	4	None	replace
53	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  orphaned  default  [FE]                        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	4	None	replace
54	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	4	None	replace
55	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	2	None	replace
56	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	2	None	replace
57	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	2	None	replace
58	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	2	None	replace
59	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                  EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	2	None	replace
60	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	2	None	replace
61	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	15	1	replace
62	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	15	1	replace
63	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	15	1	replace
64	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	15	1	replace
65	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	15	1	replace
66	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	15	1	replace
67	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	15	None	replace
68	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	15	1	replace
69	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	15	1	replace
70	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	15	2	replace
71	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [FE]  IllegalArgumentException  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	15	2	replace
72	[BUG]  [BUGGY]  this.entryFormat  =  format  +  1;  [CE]  possible  loss  of  precision  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  this.entryFormat  =  format  +  1;  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  +  1;	  this.entryFormat    =    format;    	non-compiled	[CE]  possible  loss  of  precision	18	None	replace
73	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap();  [CE]  incompatible  types  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  this.entryFormat  =  new  HashMap();  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap();	  this.entryFormat    =    format;    	non-compiled	[CE]  incompatible  types	18	None	replace
74	[BUG]  [BUGGY]  this.entryFormat  =  entryFormat;  [CE]  unreachable  statement  [FE]                  EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  this.entryFormat  =  entryFormat;  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  entryFormat;	  this.entryFormat    =    format;    	non-compiled	[CE]  unreachable  statement	18	None	replace
75	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap  <  String,String>();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  this.entryFormat  =  new  HashMap  <  String,String>();  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap  <  String,String>();	  this.entryFormat    =    format;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
76	[BUG]  [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(format);  [CE]  cannot  find  symbol  [FE]                      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  OutputStreamWriter(format);	  this.entryFormat    =    format;    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
77	[BUG]  [BUGGY]  this.entryFormat  =  new  OutputStreamWriter();  [CE]  cannot  find  symbol  [FE]                        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  this.entryFormat  =  new  OutputStreamWriter();  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  OutputStreamWriter();	  this.entryFormat    =    format;    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
78	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	14	1	add
79	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	14	1	add
80	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	14	1	add
81	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	14	1	add
82	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	14	1	add
83	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	14	1	add
84	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW)  {  break;  }  [CE]  incompatible  types  [FE]          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >>  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  incompatible  types	14	None	add
85	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  If(format  ==  FORMAT_NEW)  {  break;  }  [CE]  ';'  expected  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  If(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW)    {    break;    }    If(format  ==  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  ';'  expected	14	None	add
86	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  [CE]  orphaned  default  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;	  	non-compiled	[CE]  orphaned  default	14	None	add
87	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_N)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_N  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_N)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_N)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_N	14	None	add
88	[BUG]  [BUGGY]  cpioEntry.setFormat(this.entryFormat);  [CE]  unreachable  statement  [FE]        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(this.entryFormat);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(this.entryFormat);	  cpioEntry.setFormat(format);    	non-compiled	[CE]  unreachable  statement	10	None	replace
89	[BUG]  [BUGGY]  cpioEntry.setFormat(new  String(format));  [CE]  no  suitable  constructor  found  for  String(short)  [FE]          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(new  String(format));  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  String(format));	  cpioEntry.setFormat(format);    	non-compiled	[CE]  no  suitable  constructor  found  for  String(short)	10	None	replace
90	[BUG]  [BUGGY]  cpioEntry.setFormat(format  +  1);  [CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(format  +  1);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format  +  1);	  cpioEntry.setFormat(format);    	non-compiled	[CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;	10	None	replace
91	[BUG]  [BUGGY]  cpioEntry.setFormat(format,  out);  [CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(format,  out);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format,  out);	  cpioEntry.setFormat(format);    	non-compiled	[CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;	10	None	replace
92	[BUG]  [BUGGY]  cpioEntry.setFormat(this.format);  [CE]  cannot  find  symbol  format  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(this.format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(this.format);	  cpioEntry.setFormat(format);    	non-compiled	[CE]  cannot  find  symbol  format	10	None	replace
93	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format. ");  [CE]  unreachable  statement  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format. ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  valid  format. ");	  throw    new    IllegalArgumentException(   "   ")    :    format;    	non-compiled	[CE]  unreachable  statement	17	None	replace
94	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  cannot  be  null. ");  [CE]  unreachable  statement  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Format  cannot  be  null. ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  cannot  be  null. ");	  throw    new    IllegalArgumentException(   "   ")    :    format;    	non-compiled	[CE]  unreachable  statement	17	None	replace
95	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format, ");  [CE]  unreachable  statement  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format, ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  valid  format, ");	  throw    new    IllegalArgumentException(   "   ")    :    format;    	non-compiled	[CE]  unreachable  statement	17	None	replace
96	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: "  +  format);  [CE]  unreachable  statement  [FE]                  EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: "  +  format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: "  +  format);	  throw    new    IllegalArgumentException(   "   ")    :    format;    	non-compiled	[CE]  unreachable  statement	17	None	replace
97	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format ");  [CE]  unreachable  statement  [FE]                    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  valid  format ");	  throw    new    IllegalArgumentException(   "   ")    :    format;    	non-compiled	[CE]  unreachable  statement	17	None	replace
98	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	3	None	replace
99	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	3	None	replace
100	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	3	None	replace
101	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                  EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	3	None	replace
102	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	3	None	replace
103	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	3	None	replace
104	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	8	None	replace
105	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  short  cannot  be  dereferenced  [FE]                      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  short  cannot  be  dereferenced	8	None	replace
106	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	8	None	replace
107	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	8	None	replace
108	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	8	None	replace
109	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	8	None	replace
110	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	8	None	replace
111	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format: ");  [CE]  unreachable  statement  [FE]        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format: ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format: ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  unreachable  statement	1	None	replace
112	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  unreachable  statement  [FE]          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  unreachable  statement	1	None	replace
113	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: ");  [CE]  unreachable  statement  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  unreachable  statement	1	None	replace
114	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]    IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	6	None	replace
115	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]      IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	6	None	replace
116	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	6	2	replace
117	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	6	2	replace
118	[BUG]  [BUGGY]  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
119	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_ASCII  [FE]            IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_ASCII	6	None	replace
120	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "):  format;  [CE]  unclosed  string  literal  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "):  format;  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "):  format;	  throw    new    IllegalArgumentException(   "   ")    :    format;    	non-compiled	[CE]  unclosed  string  literal	17	None	replace
121	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist: "):  format;  [CE]  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist: "):  format;  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  does  not  exist: "):  format;	  throw    new    IllegalArgumentException(   "   ")    :    format;    	non-compiled	[CE]  	17	None	replace
122	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  a  valid  format ");  [CE]  unreachable  statement  [FE]        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  a  valid  format ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "BINARY  is  not  a  valid  format ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  unreachable  statement	1	None	replace
123	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  supported. ");  [CE]  unreachable  statement  [FE]          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  supported. ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "BINARY  is  not  supported. ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  unreachable  statement	1	None	replace
124	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value ");  [CE]  unreachable  statement  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  unreachable  statement	1	None	replace
125	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Not  a  valid  format ");  [CE]  unreachable  statement  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Not  a  valid  format ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Not  a  valid  format ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  unreachable  statement	1	None	replace
126	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format));  [CE]  cannot  find  symbol  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format));  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format));	  cpioEntry.setFormat(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
127	[BUG]  [BUGGY]  cpioEntry.setPath(format);  [CE]  cannot  find  symbol  [FE]        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setPath(format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setPath(format);	  cpioEntry.setFormat(format);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
128	[BUG]  [BUGGY]  out.close();  [CE]  unreachable  statement  [FE]                      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  out.close();  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.close();	      	non-compiled	[CE]  unreachable  statement	9	None	replace
129	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter();  out.write(format);  [CE]  cannot  find  symbol  [FE]                        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  OutputStream  out  =  new  OutputStreamWriter();  out.write(format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter();  out.write(format);	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
130	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format);  out.write('n');  [CE]  cannot  find  symbol  [FE]                          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format);  out.write('n');  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(format);  out.write('n');	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
131	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format);  [CE]  cannot  find  symbol  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(format);	  cpioEntry.setFormat(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
132	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format));  [CE]  cannot  find  symbol  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format));  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format));	  cpioEntry.setFormat(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
133	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  format);  [CE]  cannot  find  symbol  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(format,  format);	  cpioEntry.setFormat(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
134	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	4	None	replace
135	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	4	None	replace
136	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  length  [FE]                  EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  length	4	None	replace
137	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	4	None	replace
138	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ')'  expected	4	None	replace
139	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	15	2	replace
140	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  IllegalArgumentException  [FE]    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	15	2	replace
141	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	15	2	replace
142	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  [FE]  IllegalArgumentException  [FE]      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	15	2	replace
143	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	15	1	replace
144	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	15	1	replace
145	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	3	None	replace
146	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
147	[BUG]  [BUGGY]  out.put(format,  format);  [CE]  cannot  find  symbol  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  out.put(format,  format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.put(format,  format);	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
148	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                  EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ')'  expected	3	None	replace
149	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  [CE]  orphaned  default  [FE]                    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	3	None	replace
150	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null: ");  [CE]  unreachable  statement  [FE]          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null: ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null: ");	  throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  unreachable  statement	16	None	replace
151	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist: ");  [CE]  unreachable  statement  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist: ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  does  not  exist: ");	  throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  unreachable  statement	16	None	replace
152	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	8	None	replace
153	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	8	None	replace
154	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	8	None	replace
155	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	2	None	replace
156	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
157	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  [CE]  ')'  expected  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ')'  expected	2	None	replace
158	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [CE]  orphaned  default  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	2	None	replace
159	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BAINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_OLD_BAINARY  [FE]    IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BAINARY)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BAINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_OLD_BAINARY	5	None	add
160	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	6	2	replace
161	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	6	2	replace
162	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	6	2	replace
163	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	6	2	replace
164	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NW)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NW  [FE]    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NW)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NW)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NW	14	None	add
165	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap  <  Short,  Short>();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  this.entryFormat  =  new  HashMap  <  Short,  Short>();  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap  <  Short,  Short>();	  this.entryFormat    =    format;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
166	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                  EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	7	None	replace
167	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	7	None	replace
168	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	7	None	replace
169	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format));  [CE]  cannot  find  symbol  [FE]          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format));  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format));	  cpioEntry.setFormat(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
170	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.clone();  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)cpioEntry.clone();	      	non-compiled	[CE]  clone()  has  protected  access  in  Object	9	None	replace
171	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  out.write('n');  [CE]  unreachable  statement  [FE]                        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(format);  out.write('n');  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);  out.write('n');	      	non-compiled	[CE]  unreachable  statement	9	None	replace
172	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(format);  break;  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	cpioEntry.setFormat(format);  break;	      	compilable	  [FE]  NullPointerException  	9	2	replace
173	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  break;  [FE]  NullPointerException  [FE]                          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(format);  break;  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);  break;	      	compilable	  [FE]  NullPointerException  	9	2	replace
174	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  out.close();  [CE]  unreachable  statement  [FE]                            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(format);  out.close();  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);  out.close();	      	non-compiled	[CE]  unreachable  statement	9	None	replace
175	[BUG]  [BUGGY]  because(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  because(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	4	None	replace
176	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	4	None	replace
177	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                  EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	4	None	replace
178	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  header  type   ");  [CE]  unreachable  statement  [FE]        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Unknown  header  type   ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  header  type   ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  unreachable  statement	1	None	replace
179	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  entry  format: ");  [CE]  unreachable  statement  [FE]          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Unknown  entry  format: ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  entry  format: ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  unreachable  statement	1	None	replace
180	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format: ");  [CE]  unreachable  statement  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format: ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  format: ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  unreachable  statement	1	None	replace
181	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  type ");  [CE]  unreachable  statement  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  type ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  type ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  unreachable  statement	1	None	replace
182	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Binary  format  not  supported. ");  [CE]  unreachable  statement  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Binary  format  not  supported. ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Binary  format  not  supported. ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  unreachable  statement	1	None	replace
183	[BUG]  [BUGGY]  because(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  because(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
184	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	8	None	replace
185	[BUG]  [BUGGY]  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
186	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  null. ");  [CE]  not  a  statement  [FE]          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  null. ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throw  new  IllegalArgumentException( "Format  is  null. ");	  throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  not  a  statement	16	None	replace
187	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null ",  format);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null ",  format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null ",  format);	  throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)	16	None	replace
188	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null, ");  [CE]  unreachable  statement  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null, ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null, ");	  throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  unreachable  statement	16	None	replace
189	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_CRC)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_OLD_CRC  [FE]    IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_CRC)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_CRC)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_OLD_CRC	6	None	replace
190	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]      IllegalArgumentException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	6	None	replace
191	[BUG]  [BUGGY]  because(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  because(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	3	None	replace
192	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	3	None	replace
193	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	3	None	replace
194	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                  EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	3	None	replace
195	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	15	1	replace
196	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	15	1	replace
197	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW.length)  {  break;  }  [CE]  short  cannot  be  dereferenced  [FE]      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW.length)  {  break;  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW.length)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    	non-compiled	[CE]  short  cannot  be  dereferenced	15	None	replace
198	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format);  [CE]  unreachable  statement  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format);	  throw    new    IllegalArgumentException(   "   ")    :    format;    	non-compiled	[CE]  unreachable  statement	17	None	replace
199	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format);  [CE]  unreachable  statement  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format);	  throw    new    IllegalArgumentException(   "   ")    :    format;    	non-compiled	[CE]  unreachable  statement	17	None	replace
200	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format   "):  format;  [CE]  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format   "):  format;  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  format   "):  format;	  throw    new    IllegalArgumentException(   "   ")    :    format;    	non-compiled	[CE]  	17	None	replace
201	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  value ");  [CE]  unreachable  statement  [FE]                  EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  value ");  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  not  followed  by  a  value ");	  throw    new    IllegalArgumentException(   "   ")    :    format;    	non-compiled	[CE]  unreachable  statement	17	None	replace
202	[BUG]  [BUGGY]  this.entryFormat  =  format  <  0?  null  :  format;  [CE]  incompatible  types  for  ?:  neither  is  a  subtype  of  the  other  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  this.entryFormat  =  format  <  0?  null  :  format;  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  <  0?  null  :  format;	  this.entryFormat    =    format;    	non-compiled	[CE]  incompatible  types  for  ?:  neither  is  a  subtype  of  the  other	18	None	replace
203	[BUG]  [BUGGY]  this.entryFormat  =  format!=  null?  format  :  new  HashMap();  [CE]  bad  operand  types  for  binary  operator  '!='  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  this.entryFormat  =  format!=  null?  format  :  new  HashMap();  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format!=  null?  format  :  new  HashMap();	  this.entryFormat    =    format;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '!='	18	None	replace
204	[BUG]  [BUGGY]  this.entryFormat  =  format  ==  null?  format  :  new  HashMap();  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                  EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  this.entryFormat  =  format  ==  null?  format  :  new  HashMap();  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  ==  null?  format  :  new  HashMap();	  this.entryFormat    =    format;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	18	None	replace
205	[BUG]  [BUGGY]  this.entryFormat  =  format  {  null?  getFormat()  :  format;  [CE]  ';'  expected  [FE]                    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  this.entryFormat  =  format  {  null?  getFormat()  :  format;  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  {  null?  getFormat()  :  format;	  this.entryFormat    =    format;    	non-compiled	[CE]  ';'  expected	18	None	replace
206	[BUG]  [BUGGY]  because(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  because(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	2	None	replace
207	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	2	None	replace
208	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	2	None	replace
209	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	2	None	replace
210	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                  EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	7	None	replace
211	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	7	None	replace
212	[BUG]  [BUGGY]  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
213	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  this.entryFormat);  [CE]  cannot  find  symbol  [FE]            EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  this.entryFormat);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  this.entryFormat);	  cpioEntry.setFormat(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
214	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(out,  format));  [CE]  cannot  find  symbol  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(out,  format));  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(out,  format));	  cpioEntry.setFormat(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
215	[BUG]  [BUGGY]  cpioEntry.setPadded(true);  [CE]  cannot  find  symbol  [FE]        EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setPadded(true);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setPadded(true);	  cpioEntry.setFormat(format);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
216	[BUG]  [BUGGY]  cpioEntry.setCpio(format);  [CE]  cannot  find  symbol  [FE]          EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setCpio(format);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setCpio(format);	  cpioEntry.setFormat(format);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
217	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(out,  format));  [CE]  cannot  find  symbol  [FE]              EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(out,  format));  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(out,  format));	  cpioEntry.setFormat(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
218	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format),  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                EOFException    [CONTEXT]    private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:    [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format),  this.entryFormat);  [BUGGY]    default:  throw  new  IllegalArgumentException(   "Unknown  header  type   ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(format),  this.entryFormat);	  cpioEntry.setFormat(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
