bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: "  +  format);  [CE]  <identifier>  expected  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: "  +  format);	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format:   "    +    format);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
2	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: "  +  format,  out);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,OutputStream)  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: "  +  format,  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: "  +  format,  out);	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format:   "    +    format);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,OutputStream)	96	None	replace
3	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: ",  format);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: ",  format);	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format:   "    +    format);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)	96	None	replace
4	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  not  a  valid  format: "  +  format);  [CE]  unreachable  statement  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  not  a  valid  format: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  not  a  valid  format: "  +  format);	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format:   "    +    format);    	non-compiled	[CE]  unreachable  statement	96	None	replace
5	[BUG]  [BUGGY]  Throwables.log( "Format  is  not  a  valid  format: "  +  format);  [CE]  cannot  find  symbol  Throwables  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.log( "Format  is  not  a  valid  format: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.log( "Format  is  not  a  valid  format: "  +  format);	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format:   "    +    format);    	non-compiled	[CE]  cannot  find  symbol  Throwables	96	None	replace
6	[BUG]  [BUGGY]  out.put(0,  format);  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.put(0,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.put(0,  format);	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
7	[BUG]  [BUGGY]  out.put(names.size(),  format);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.put(names.size(),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.put(names.size(),  format);	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
8	[BUG]  [BUGGY]  out.put(names.length,  format);  [CE]  cannot  find  symbol  length  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.put(names.length,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.put(names.length,  format);	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  length	51	None	replace
9	[BUG]  [BUGGY]  out.put(names.size()  -  1,  format);  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.put(names.size()  -  1,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.put(names.size()  -  1,  format);	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
10	[BUG]  [BUGGY]  out.put(int,  format);  [CE]  '.class'  expected  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.put(int,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.put(int,  format);	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  '.class'  expected	51	None	replace
11	[BUG]  [BUGGY]  out.put(i,  format);  [CE]  cannot  find  symbol  i  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.put(i,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.put(i,  format);	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  i	100	None	replace
12	[BUG]  [BUGGY]  out.put(names.get(format));  [CE]  no  suitable  method  found  for  get(short)  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.put(names.get(format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.put(names.get(format));	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  no  suitable  method  found  for  get(short)	100	None	replace
13	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	144	1	replace
14	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	144	1	replace
15	[BUG]  [BUGGY]  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format!=  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_OLD_BINARY)  {  break;	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  reason(format  ==  FORMAT_NEW_CRC)  {  break;  }  [CE]  ';'  expected  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  reason(format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	reason(format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  ';'  expected	6	None	replace
18	[BUG]  [BUGGY]  reason(format  ==  FORMAT_NEW)  {  break;  }  [CE]  ';'  expected  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  reason(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	reason(format  ==  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  ';'  expected	6	None	replace
19	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(format),  out);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(format),  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamReader(format),  out);	  CpioEntry.setFormat(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
20	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(format),  format);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(format),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamReader(format),  format);	  CpioEntry.setFormat(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
21	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(format,  format));  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(format,  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamReader(format,  format));	  CpioEntry.setFormat(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
22	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(out,  format));  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(out,  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamReader(out,  format));	  CpioEntry.setFormat(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
23	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(format),  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(format),  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamReader(format),  this.entryFormat);	  CpioEntry.setFormat(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
24	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(format),  0);  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(format),  0);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamReader(format),  0);	  CpioEntry.setFormat(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
25	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	176	None	replace
26	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	176	None	replace
27	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	176	None	replace
28	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	176	None	replace
29	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY)  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	176	None	replace
30	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(format,  format));  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(format,  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamWriter(format,  format));	  cpioEntry.setFormat(new    OutputStreamWriter(format,    format));    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
31	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format,  format),  out);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format,  format),  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(format,  format),  out);	  cpioEntry.setFormat(new    OutputStreamWriter(format,    format));    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
32	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  format);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  format);	  cpioEntry.setFormat(new    OutputStreamWriter(format,    format));    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
33	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format,  format),  crc);  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format,  format),  crc);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(format,  format),  crc);	  cpioEntry.setFormat(new    OutputStreamWriter(format,    format));    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
34	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format,  format),  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format,  format),  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(format,  format),  this.entryFormat);	  cpioEntry.setFormat(new    OutputStreamWriter(format,    format));    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
35	[BUG]  [BUGGY]  because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	152	None	replace
36	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format.length()  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format.length()  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format.length()  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	152	None	replace
37	[BUG]  [BUGGY]  if(format!=  null)  {  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  null)  {  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  null)  {  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	152	None	replace
38	[BUG]  [BUGGY]  if(format!=  null)  {  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  null)  {  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  null)  {  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	152	None	replace
39	[BUG]  [BUGGY]  because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format  [CE]  ';'  expected  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	152	None	replace
40	[BUG]  [BUGGY]  if(format  ==  FORMAT_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_BINARY  [FE]                IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW_ASCII)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_BINARY	119	None	replace
41	[BUG]  [BUGGY]  if(format  ==  FORMAT_BLACK)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_BLACK  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_BLACK)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_BLACK)  {  break;  }	  if(format    ==    FORMAT_NEW_ASCII)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_BLACK	119	None	replace
42	[BUG]  [BUGGY]  if(format  ==  FORMAT_BRIDGE)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_BRIDGE  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_BRIDGE)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_BRIDGE)  {  break;  }	  if(format    ==    FORMAT_NEW_ASCII)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_BRIDGE	119	None	replace
43	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	177	None	replace
44	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	177	None	replace
45	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
46	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	177	None	replace
47	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	177	None	replace
48	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	192	None	replace
49	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	192	None	replace
50	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	192	None	replace
51	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY)  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	192	None	replace
52	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.getEntry(format);  [CE]  short  cannot  be  dereferenced  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat.getEntry(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.getEntry(format);	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  short  cannot  be  dereferenced	99	None	replace
53	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.getOutputShort();  [CE]  short  cannot  be  dereferenced  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat.getOutputShort();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.getOutputShort();	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  short  cannot  be  dereferenced	99	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.format.length();  ++i)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  format  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  this.format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  this.format.length();  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  format	42	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.entryFormat.length();  ++i)  {  out.put(i,  format);  }  [CE]  short  cannot  be  dereferenced  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  this.entryFormat.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  this.entryFormat.length();  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  short  cannot  be  dereferenced	42	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  formats.length();  ++i)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  formats  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  formats.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  formats.length();  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  formats	42	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  out.length();  ++i)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  out.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  out.length();  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
58	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  '.class'  expected  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  For(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	For(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  '.class'  expected	42	None	replace
59	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.length();  ++i)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  names.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  names.length();  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
60	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  header  type: "  +  format);  [CE]  unreachable  statement  [FE]            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  header  type: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  header  type: "  +  format);	  throw    new    IllegalArgumentException(   "Unknown    header    type       ");    	non-compiled	[CE]  unreachable  statement	178	None	replace
61	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  header  type: ");  [CE]  unreachable  statement  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  header  type: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  header  type: ");	  throw    new    IllegalArgumentException(   "Unknown    header    type       ");    	non-compiled	[CE]  unreachable  statement	178	None	replace
62	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Unknown  header  type ");  [CE]  <identifier>  expected  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Unknown  header  type ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Unknown  header  type ");	  throw    new    IllegalArgumentException(   "Unknown    header    type       ");    	non-compiled	[CE]  <identifier>  expected	178	None	replace
63	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  header  type ",  format);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  header  type ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  header  type ",  format);	  throw    new    IllegalArgumentException(   "Unknown    header    type       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)	178	None	replace
64	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  header  type. ");  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  header  type. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  header  type. ");	  throw    new    IllegalArgumentException(   "Unknown    header    type       ");    	non-compiled	[CE]  unreachable  statement	178	None	replace
65	[BUG]  [BUGGY]  because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	145	None	replace
66	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	145	None	replace
67	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	145	None	replace
68	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
69	[BUG]  [BUGGY]  because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [CE]  ';'  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	145	None	replace
70	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  	compilable	  [FE]  EOFException  	162	1	add
71	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [FE]  EOFException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  	compilable	  [FE]  EOFException  	162	1	add
72	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  	compilable	  [FE]  EOFException  	162	1	add
73	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [FE]  EOFException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  	compilable	  [FE]  EOFException  	162	1	add
74	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  [CE]  orphaned  default  [FE]        IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;	  	non-compiled	[CE]  orphaned  default	162	None	add
75	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format!=  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format!=  FORMAT_OLD_ASCII)  {  break;  }	  	compilable	  [FE]  EOFException  	162	1	add
76	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format!=  FORMAT_OLD_ASCII)  {  break;  }  [FE]  EOFException  [FE]          IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format!=  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format!=  FORMAT_OLD_ASCII)  {  break;  }	  	compilable	  [FE]  EOFException  	162	1	add
77	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  >=  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format  >=  FORMAT_OLD_ASCII)  {  break;  }	  	compilable	  [FE]  EOFException  	162	1	add
78	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  >=  FORMAT_OLD_ASCII)  {  break;  }  [FE]  EOFException  [FE]            IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  >=  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format  >=  FORMAT_OLD_ASCII)  {  break;  }	  	compilable	  [FE]  EOFException  	162	1	add
79	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format!=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    if(format!=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  	compilable	  [FE]  EOFException  	162	1	add
80	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format!=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [FE]  EOFException  [FE]              IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format!=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    if(format!=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  	compilable	  [FE]  EOFException  	162	1	add
81	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  Format  ==  FORMAT_OLD_ASCII)  {  break;  }  [CE]  cannot  find  symbol  Format  [FE]                IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  Format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  Format  ==  FORMAT_OLD_ASCII)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  Format	162	None	add
82	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  If(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [CE]  ';'  expected  [FE]                  IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  If(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    If(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  	non-compiled	[CE]  ';'  expected	162	None	add
83	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  EOFException  	66	1	replace
84	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  EOFException  	66	1	replace
85	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ABSTRACT)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_OLD_ABSTRACT  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ABSTRACT)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ABSTRACT)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_OLD_ABSTRACT	66	None	replace
86	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  EOFException  	66	1	replace
87	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  EOFException  	66	1	replace
88	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(format);  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  FileOutputStream(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  FileOutputStream(format);	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
89	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(format.getBytes());  [CE]  cannot  find  symbol  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  FileOutputStream(format.getBytes());  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  FileOutputStream(format.getBytes());	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
90	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  out);  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  out);	  CpioEntry    cpioEntry    =    new    OutputStreamReader(format);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
91	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  format);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  format);	  CpioEntry    cpioEntry    =    new    OutputStreamReader(format);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
92	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(out,  format);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(out,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamReader(out,  format);	  CpioEntry    cpioEntry    =    new    OutputStreamReader(format);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
93	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  out.read());  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  out.read());  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  out.read());	  CpioEntry    cpioEntry    =    new    OutputStreamReader(format);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
94	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  out.readLine());  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  out.readLine());  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  out.readLine());	  CpioEntry    cpioEntry    =    new    OutputStreamReader(format);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
95	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  DEFAULT_VERSION);  [CE]  cannot  find  symbol  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  DEFAULT_VERSION);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  DEFAULT_VERSION);	  CpioEntry    cpioEntry    =    new    OutputStreamReader(format);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
96	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	157	None	replace
97	[BUG]  [BUGGY]  if(format  ==  FORMAT_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	157	None	replace
98	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  }  [CE]  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format    	non-compiled	[CE]  	157	None	replace
99	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  }  [CE]  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format    	non-compiled	[CE]  	157	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	157	None	replace
101	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  >=  ')'  expected;  }  [CE]  ')'  expected  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  >=  ')'  expected;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  >=  ')'  expected;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	157	None	replace
102	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	209	None	replace
103	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	209	None	replace
104	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
105	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	209	None	replace
106	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	209	None	replace
107	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    ==    FORMAT_N)    {    break;    }    	compilable	  [FE]  EOFException  	87	1	replace
108	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    ==    FORMAT_N)    {    break;    }    	compilable	  [FE]  EOFException  	87	1	replace
109	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_N)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_N  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_N)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_N)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    ==    FORMAT_N)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_N	87	None	replace
110	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW_CRC)  {  break;  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW_CRC)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW_CRC)  {  break;	  ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
111	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
112	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW_ASCII)  {  break;	  ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
113	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
114	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
115	[BUG]  [BUGGY]  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  [CE]  illegal  start  of  expression  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_OLD_ASCII)  {  break;	  ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
116	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW)  {  break;  }  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=    FORMAT_NEW)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
117	[BUG]  [BUGGY]  reason(format!=  FORMAT_NEW)  {  break;  }  [CE]  ';'  expected  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  reason(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	reason(format!=  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=    FORMAT_NEW)    {    break;    }    	non-compiled	[CE]  ';'  expected	83	None	replace
118	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	102	None	replace
119	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
120	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	102	None	replace
121	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	102	None	replace
122	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format);  out.write(format);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format);  out.write(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(format);  out.write(format);	  OutputStream    out    =    new    OutputStreamWriter();    out.write(format);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
123	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter( "UTF-8 ");  out.write(format);  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter( "UTF-8 ");  out.write(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter( "UTF-8 ");  out.write(format);	  OutputStream    out    =    new    OutputStreamWriter();    out.write(format);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
124	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(System.out);  out.write(format);  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(System.out);  out.write(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(System.out);  out.write(format);	  OutputStream    out    =    new    OutputStreamWriter();    out.write(format);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
125	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(out,  format);  out.write(format);  [CE]  cannot  find  symbol  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(out,  format);  out.write(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(out,  format);  out.write(format);	  OutputStream    out    =    new    OutputStreamWriter();    out.write(format);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
126	[BUG]  [BUGGY]  out  =  new  OutputStreamWriter();  out.write(format);  [CE]  cannot  assign  a  value  to  final  variable  out  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out  =  new  OutputStreamWriter();  out.write(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out  =  new  OutputStreamWriter();  out.write(format);	  OutputStream    out    =    new    OutputStreamWriter();    out.write(format);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  out	129	None	replace
127	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(this.writeCharacters);  out.write(format);  [CE]  cannot  find  symbol  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(this.writeCharacters);  out.write(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(this.writeCharacters);  out.write(format);	  OutputStream    out    =    new    OutputStreamWriter();    out.write(format);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
128	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	80	1	add
129	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	80	1	add
130	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	80	1	add
131	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	80	1	add
132	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	80	1	add
133	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	80	1	add
134	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	80	1	add
135	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	80	1	add
136	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW)  {  break;  }  [CE]  incompatible  types  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  incompatible  types	80	None	add
137	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	80	1	add
138	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	80	1	add
139	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [CE]  incompatible  types  [FE]                EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  incompatible  types	80	None	add
140	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_  [CE]  ')'  expected  [FE]                  EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_	  	non-compiled	[CE]  ')'  expected	80	None	add
141	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap  <  String,String>(format);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap  <  String,String>(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap  <  String,String>(format);	  this.entryFormat    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	75	None	replace
142	[BUG]  [BUGGY]  this.entryFormat  =  new  LinkedHashMap  <  String,String>();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  LinkedHashMap  <  String,String>();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  LinkedHashMap  <  String,String>();	  this.entryFormat    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	75	None	replace
143	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap  <  String,String>(0);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap  <  String,String>(0);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap  <  String,String>(0);	  this.entryFormat    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	75	None	replace
144	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap  <  String,String>(1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap  <  String,String>(1);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap  <  String,String>(1);	  this.entryFormat    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	75	None	replace
145	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap  <  String,Binary>();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap  <  String,Binary>();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap  <  String,Binary>();	  this.entryFormat    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	75	None	replace
146	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap  <  String,String>(),  format;  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap  <  String,String>(),  format;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap  <  String,String>(),  format;	  this.entryFormat    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	75	None	replace
147	[BUG]  [BUGGY]  reason(format!=  FORMAT_NEW_CRC)  {  break;  }  [CE]  ';'  expected  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  reason(format!=  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	reason(format!=  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format    [Delete]    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  ';'  expected	10	None	replace
148	[BUG]  [BUGGY]  out.write('n');  [CE]  unreachable  statement  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.write('n');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.write('n');	  cpioEntry.setFormat(format);    out.write('n');    	non-compiled	[CE]  unreachable  statement	171	None	replace
149	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  crc.write('n');  [CE]  long  cannot  be  dereferenced  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format);  crc.write('n');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);  crc.write('n');	  cpioEntry.setFormat(format);    out.write('n');    	non-compiled	[CE]  long  cannot  be  dereferenced	171	None	replace
150	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  out.write('n',  format);  [CE]  no  suitable  method  found  for  write(char,short)  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format);  out.write('n',  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);  out.write('n',  format);	  cpioEntry.setFormat(format);    out.write('n');    	non-compiled	[CE]  no  suitable  method  found  for  write(char,short)	171	None	replace
151	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  write('n');  [CE]  unreachable  statement  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format);  write('n');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);  write('n');	  cpioEntry.setFormat(format);    out.write('n');    	non-compiled	[CE]  unreachable  statement	171	None	replace
152	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  out.write('N');  [CE]  unreachable  statement  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format);  out.write('N');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);  out.write('N');	  cpioEntry.setFormat(format);    out.write('n');    	non-compiled	[CE]  unreachable  statement	171	None	replace
153	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  out.flush();  [CE]  unreachable  statement  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format);  out.flush();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);  out.flush();	  cpioEntry.setFormat(format);    out.write('n');    	non-compiled	[CE]  unreachable  statement	171	None	replace
154	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format,  format),  out);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format,  format),  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(format,  format),  out);	  cpioEntry.setFormat(new    OutputStreamReader(format,    format));    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
155	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format,  format),  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format,  format),  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(format,  format),  this.entryFormat);	  cpioEntry.setFormat(new    OutputStreamReader(format,    format));    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
156	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format,  format),  crc);  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format,  format),  crc);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(format,  format),  crc);	  cpioEntry.setFormat(new    OutputStreamReader(format,    format));    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
157	[BUG]  [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
158	[BUG]  [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(  [CE]  illegal  start  of  expression  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
159	[BUG]  [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put  [CE]  illegal  start  of  expression  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
160	[BUG]  [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
161	[BUG]  [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i  [CE]  illegal  start  of  expression  [FE]                                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
162	[BUG]  [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format  [CE]  illegal  start  of  expression  [FE]                                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
163	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(out,  format);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(out,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamWriter(out,  format);	  CpioEntry    cpioEntry    =    new    OutputStreamWriter(format);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
164	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  out);  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  out);	  CpioEntry    cpioEntry    =    new    OutputStreamWriter(format);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
165	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  DEFAULT_VERSION);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  DEFAULT_VERSION);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  DEFAULT_VERSION);	  CpioEntry    cpioEntry    =    new    OutputStreamWriter(format);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
166	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  out.readLine());  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  out.readLine());  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  out.readLine());	  CpioEntry    cpioEntry    =    new    OutputStreamWriter(format);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
167	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  SHORT_DESCRIPTOR);  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  SHORT_DESCRIPTOR);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  SHORT_DESCRIPTOR);	  CpioEntry    cpioEntry    =    new    OutputStreamWriter(format);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
168	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_CRC)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	44	None	replace
169	[BUG]  [BUGGY]  if(format  ==  null)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  null)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  null)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_CRC)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	44	None	replace
170	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_CRC)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	44	None	replace
171	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put  [CE]  not  a  statement  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put	  if(format    ==    FORMAT_NEW_CRC)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	44	None	replace
172	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(  [CE]  illegal  start  of  expression  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(	  if(format    ==    FORMAT_NEW_CRC)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
173	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put  [CE]  not  a  statement  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put	  if(format    ==    FORMAT_NEW_CRC)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	44	None	replace
174	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.format.length();  i++)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  format  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  this.format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  this.format.length();  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  format	105	None	replace
175	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.entryFormat.length();  i++)  {  out.put(i,  format);  }  [CE]  short  cannot  be  dereferenced  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  this.entryFormat.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  this.entryFormat.length();  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  short  cannot  be  dereferenced	105	None	replace
176	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  formats.length();  i++)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  formats  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  formats.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  formats.length();  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  formats	105	None	replace
177	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  out.length();  i++)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  out.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  out.length();  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
178	[BUG]  [BUGGY]  Format.for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  <identifier>  expected  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Format.for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Format.for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
179	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  '.class'  expected  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  For(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	For(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  '.class'  expected	105	None	replace
180	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  EOFException  	140	1	replace
181	[BUG]  [BUGGY]  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  EOFException  	140	1	replace
182	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  EOFException  	140	1	replace
183	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  EOFException  	140	1	replace
184	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format),  format,  out);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format),  format,  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(format),  format,  out);	  cpioEntry.setFormat(new    OutputStreamReader(format),    format);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
185	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format),  format);  [CE]  ';'  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamReader(format),  format);	  cpioEntry.setFormat(new    OutputStreamReader(format),    format);    	non-compiled	[CE]  ';'  expected	33	None	replace
186	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(out,  format),  format);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(out,  format),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(out,  format),  format);	  cpioEntry.setFormat(new    OutputStreamReader(format),    format);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
187	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format),  format,  crc);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format),  format,  crc);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(format),  format,  crc);	  cpioEntry.setFormat(new    OutputStreamReader(format),    format);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
188	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	107	None	replace
189	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	107	None	replace
190	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	107	None	replace
191	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Format  is  null. ");  [CE]  unreachable  statement  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalStateException( "Format  is  null. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalStateException( "Format  is  null. ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  unreachable  statement	112	None	replace
192	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Format  is  not  a  valid  format. ");  [CE]  unreachable  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalStateException( "Format  is  not  a  valid  format. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalStateException( "Format  is  not  a  valid  format. ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  unreachable  statement	112	None	replace
193	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Format  is  not  a  valid  format ");  [CE]  unreachable  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalStateException( "Format  is  not  a  valid  format ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalStateException( "Format  is  not  a  valid  format ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  unreachable  statement	112	None	replace
194	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Format  is  not  a  valid  format: "  +  format);  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalStateException( "Format  is  not  a  valid  format: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalStateException( "Format  is  not  a  valid  format: "  +  format);	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  unreachable  statement	112	None	replace
195	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Format  is  not  a  valid  format: ");  [CE]  unreachable  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalStateException( "Format  is  not  a  valid  format: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalStateException( "Format  is  not  a  valid  format: ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  unreachable  statement	112	None	replace
196	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Format  has  not  been  set. ");  [CE]  unreachable  statement  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalStateException( "Format  has  not  been  set. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalStateException( "Format  has  not  been  set. ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  unreachable  statement	112	None	replace
197	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format    ==    FORMAT_OLD_BAINARY)    {    break;    }    	compilable	  [FE]  EOFException  	159	1	replace
198	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]        IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format    ==    FORMAT_OLD_BAINARY)    {    break;    }    	compilable	  [FE]  EOFException  	159	1	replace
199	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_ASCII  [FE]          IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format    ==    FORMAT_OLD_BAINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_ASCII	159	None	replace
200	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
201	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.entries.size();  i++)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  entries  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  this.entries.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  this.entries.size();  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  entries	146	None	replace
202	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.length;  i++)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  length  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  names.length;  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  names.length;  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  length	146	None	replace
203	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  out.size();  i++)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  out.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  out.size();  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
204	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  format.size();  i++)  {  out.put(i,  format);  }  [CE]  short  cannot  be  dereferenced  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  format.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  format.size();  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  short  cannot  be  dereferenced	146	None	replace
205	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  '.class'  expected  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  For(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	For(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  '.class'  expected	146	None	replace
206	[BUG]  [BUGGY]  this.entryFormat  =  format  ==  null?  FORMAT_OLD_BINARY  :  new  HashMap();  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  ==  null?  FORMAT_OLD_BINARY  :  new  HashMap();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  ==  null?  FORMAT_OLD_BINARY  :  new  HashMap();	  this.entryFormat    =    format    ==    null?    format    :    new    HashMap();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	204	None	replace
207	[BUG]  [BUGGY]  this.entryFormat  =  format  ==  null?  new  HashMap()  :  format;  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  ==  null?  new  HashMap()  :  format;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  ==  null?  new  HashMap()  :  format;	  this.entryFormat    =    format    ==    null?    format    :    new    HashMap();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	204	None	replace
208	[BUG]  [BUGGY]  this.entryFormat  =  format  ==  null?  FORMAT_NEW  :  new  HashMap();  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  ==  null?  FORMAT_NEW  :  new  HashMap();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  ==  null?  FORMAT_NEW  :  new  HashMap();	  this.entryFormat    =    format    ==    null?    format    :    new    HashMap();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	204	None	replace
209	[BUG]  [BUGGY]  this.entryFormat  =  format  ==  null?  DEFAULT_FORMAT  :  new  HashMap();  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  ==  null?  DEFAULT_FORMAT  :  new  HashMap();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  ==  null?  DEFAULT_FORMAT  :  new  HashMap();	  this.entryFormat    =    format    ==    null?    format    :    new    HashMap();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	204	None	replace
210	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist: "  +  format);  [CE]  unreachable  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  does  not  exist: "  +  format);	  throw    new    IllegalArgumentException(   "Format    does    not    exist:   "):    format;    	non-compiled	[CE]  unreachable  statement	121	None	replace
211	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  does  not  exist: "):  format;  [CE]  <identifier>  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  does  not  exist: "):  format;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  does  not  exist: "):  format;	  throw    new    IllegalArgumentException(   "Format    does    not    exist:   "):    format;    	non-compiled	[CE]  <identifier>  expected	121	None	replace
212	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist: ",  format);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist: ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  does  not  exist: ",  format);	  throw    new    IllegalArgumentException(   "Format    does    not    exist:   "):    format;    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)	121	None	replace
213	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	208	None	replace
214	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	208	None	replace
215	[BUG]  [BUGGY]  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	208	None	replace
216	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	208	None	replace
217	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
218	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
219	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
220	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
221	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	3	None	add
222	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
223	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
224	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
225	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
226	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
227	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
228	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >>  FORMAT_OLD_BINARY)  {  break;  }  [CE]  incompatible  types  [FE]                EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >>  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >>  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  incompatible  types	3	None	add
229	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                  EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
230	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]                  EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
231	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format: "  +  format);  [CE]  unreachable  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  format: "  +  format);	  throw    new    IllegalArgumentException(   "Unknown    format    format:   ");    	non-compiled	[CE]  unreachable  statement	180	None	replace
232	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format: ",  format);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format: ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  format: ",  format);	  throw    new    IllegalArgumentException(   "Unknown    format    format:   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)	180	None	replace
233	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Unknown  format  format: ");  [CE]  <identifier>  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Unknown  format  format: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Unknown  format  format: ");	  throw    new    IllegalArgumentException(   "Unknown    format    format:   ");    	non-compiled	[CE]  <identifier>  expected	180	None	replace
234	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format  + "': ");  [CE]  unreachable  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format  + "': ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format  + "': ");	  throw    new    IllegalArgumentException(   "Unknown    format    format:   ");    	non-compiled	[CE]  unreachable  statement	180	None	replace
235	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format. ");  [CE]  unreachable  statement  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  format. ");	  throw    new    IllegalArgumentException(   "Unknown    format    format:   ");    	non-compiled	[CE]  unreachable  statement	180	None	replace
236	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null,   "  +  format);  [CE]  unreachable  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null,   "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null,   "  +  format);	  throw    new    IllegalArgumentException(   "Format    is    null,   ");    	non-compiled	[CE]  unreachable  statement	188	None	replace
237	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null,  cannot  be  null. ");  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null,  cannot  be  null. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null,  cannot  be  null. ");	  throw    new    IllegalArgumentException(   "Format    is    null,   ");    	non-compiled	[CE]  unreachable  statement	188	None	replace
238	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
239	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.entries.size();  ++i)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  entries  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  this.entries.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  this.entries.size();  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  entries	156	None	replace
240	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  out.size();  ++i)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  out.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  out.size();  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
241	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  '.class'  expected  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  For(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	For(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  '.class'  expected	156	None	replace
242	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  entries.size();  ++i)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  entries  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  entries.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  entries.size();  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  entries	156	None	replace
243	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  out);  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  out);	  CpioEntry    cpioEntry    =    new    CpioEntry(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
244	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  format);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  format);	  CpioEntry    cpioEntry    =    new    CpioEntry(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
245	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format,  format));  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format,  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format,  format));	  CpioEntry    cpioEntry    =    new    CpioEntry(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
246	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  DEFAULT_VERSION);  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  DEFAULT_VERSION);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  DEFAULT_VERSION);	  CpioEntry    cpioEntry    =    new    CpioEntry(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
247	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  this);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  this);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  this);	  CpioEntry    cpioEntry    =    new    CpioEntry(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
248	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  MISSING_BINARY);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  MISSING_BINARY);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  MISSING_BINARY);	  CpioEntry    cpioEntry    =    new    CpioEntry(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
249	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  this.entryFormat);	  CpioEntry    cpioEntry    =    new    CpioEntry(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
250	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  orphaned  default	53	None	replace
251	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  orphaned  default	53	None	replace
252	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  orphaned  default  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  orphaned  default	53	None	replace
253	[BUG]  [BUGGY]  reason(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  ';'  expected  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  reason(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	reason(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  ';'  expected	53	None	replace
254	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  [CE]  orphaned  default  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  orphaned  default	53	None	replace
255	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	53	2	replace
256	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  IllegalArgumentException  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	53	2	replace
257	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  out);  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  out);	  CpioEntry    cpioEntry    =    new    CpioEntry(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
258	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  format);  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  format);	  CpioEntry    cpioEntry    =    new    CpioEntry(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
259	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format,  format));  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format,  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format,  format));	  CpioEntry    cpioEntry    =    new    CpioEntry(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
260	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(out,  format));  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(out,  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(out,  format));	  CpioEntry    cpioEntry    =    new    CpioEntry(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
261	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  DEFAULT_VERSION);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  DEFAULT_VERSION);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  DEFAULT_VERSION);	  CpioEntry    cpioEntry    =    new    CpioEntry(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
262	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  this.entryFormat);	  CpioEntry    cpioEntry    =    new    CpioEntry(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
263	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  MISSING_BINARY);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  MISSING_BINARY);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  MISSING_BINARY);	  CpioEntry    cpioEntry    =    new    CpioEntry(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
264	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	56	None	replace
265	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	56	None	replace
266	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	56	None	replace
267	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put  [CE]  not  a  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	56	None	replace
268	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put  [CE]  not  a  statement  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	56	None	replace
269	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
270	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	116	1	add
271	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	116	1	add
272	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  >=  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  >=  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	116	1	add
273	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  >=  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  >=  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  >=  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	116	1	add
274	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format!=  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	116	1	add
275	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]        IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format!=  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	116	1	add
276	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  If(format  ==  FORMAT_NEW_CRC)  {  break;  }  [CE]  ';'  expected  [FE]          IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  If(format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW_CRC)    {    break;    }    If(format  ==  FORMAT_NEW_CRC)  {  break;  }	  	non-compiled	[CE]  ';'  expected	116	None	add
277	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  >>  FORMAT_NEW_CRC)  {  break;  }  [CE]  incompatible  types  [FE]            IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  >>  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  >>  FORMAT_NEW_CRC)  {  break;  }	  	non-compiled	[CE]  incompatible  types	116	None	add
278	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW_CRC)  {  break;  [CE]  orphaned  default  [FE]              IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW_CRC)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW_CRC)  {  break;	  	non-compiled	[CE]  orphaned  default	116	None	add
279	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW_C)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_C  [FE]                IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW_C)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW_C)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_C	116	None	add
280	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  cannot  be  null. ");  [CE]  <identifier>  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  cannot  be  null. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  cannot  be  null. ");	  throw    new    IllegalArgumentException(   "Format    cannot    be    null.   ");    	non-compiled	[CE]  <identifier>  expected	94	None	replace
281	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Format  cannot  be  null. "));  [CE]  <identifier>  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Format  cannot  be  null. "));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw(new  IllegalArgumentException( "Format  cannot  be  null. "));	  throw    new    IllegalArgumentException(   "Format    cannot    be    null.   ");    	non-compiled	[CE]  <identifier>  expected	94	None	replace
282	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  cannot  be  null.  Format: "  +  format);  [CE]  unreachable  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  cannot  be  null.  Format: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  cannot  be  null.  Format: "  +  format);	  throw    new    IllegalArgumentException(   "Format    cannot    be    null.   ");    	non-compiled	[CE]  unreachable  statement	94	None	replace
283	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Format  cannot  be  null. ");  [CE]  <identifier>  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Format  cannot  be  null. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw(new  IllegalArgumentException( "Format  cannot  be  null. ");	  throw    new    IllegalArgumentException(   "Format    cannot    be    null.   ");    	non-compiled	[CE]  <identifier>  expected	94	None	replace
284	[BUG]  [BUGGY]  Throwables.weirdString( "Format  cannot  be  null. ");  [CE]  cannot  find  symbol  Throwables  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.weirdString( "Format  cannot  be  null. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.weirdString( "Format  cannot  be  null. ");	  throw    new    IllegalArgumentException(   "Format    cannot    be    null.   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	94	None	replace
285	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	98	None	replace
286	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	98	None	replace
287	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
288	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
289	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	98	None	replace
290	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
291	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  format.length);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  format.length);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(format,  format.length);	  CpioEntry    cpioEntry    =    new    CpioEntry(format,    format);    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
292	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  format,  out);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  format,  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(format,  format,  out);	  CpioEntry    cpioEntry    =    new    CpioEntry(format,    format);    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
293	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  format,  crc);  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  format,  crc);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(format,  format,  crc);	  CpioEntry    cpioEntry    =    new    CpioEntry(format,    format);    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
294	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  format.intValue());  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  format.intValue());  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(format,  format.intValue());	  CpioEntry    cpioEntry    =    new    CpioEntry(format,    format);    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
295	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  FORMAT_OLD_BINARY);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  FORMAT_OLD_BINARY);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(format,  FORMAT_OLD_BINARY);	  CpioEntry    cpioEntry    =    new    CpioEntry(format,    format);    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
296	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  format.shortValue());  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  format.shortValue());  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(format,  format.shortValue());	  CpioEntry    cpioEntry    =    new    CpioEntry(format,    format);    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
297	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat,  format.getOutputStream();  [CE]  ';'  expected  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat,  format.getOutputStream();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat,  format.getOutputStream();	  OutputStream    out    =    this.entryFormat.getOutputStream();    	non-compiled	[CE]  ';'  expected	28	None	replace
298	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.getInputStream();  [CE]  short  cannot  be  dereferenced  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat.getInputStream();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.getInputStream();	  OutputStream    out    =    this.entryFormat.getOutputStream();    	non-compiled	[CE]  short  cannot  be  dereferenced	28	None	replace
299	[BUG]  [BUGGY]  OutputStream  out  =  format.getOutputStream();  [CE]  short  cannot  be  dereferenced  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  format.getOutputStream();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  format.getOutputStream();	  OutputStream    out    =    this.entryFormat.getOutputStream();    	non-compiled	[CE]  short  cannot  be  dereferenced	28	None	replace
300	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.getOutputStream(),  format);  [CE]  ';'  expected  [FE]                                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat.getOutputStream(),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.getOutputStream(),  format);	  OutputStream    out    =    this.entryFormat.getOutputStream();    	non-compiled	[CE]  ';'  expected	28	None	replace
301	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.readLine();  [CE]  short  cannot  be  dereferenced  [FE]                                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat.readLine();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.readLine();	  OutputStream    out    =    this.entryFormat.getOutputStream();    	non-compiled	[CE]  short  cannot  be  dereferenced	28	None	replace
302	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.getOutputStream(),  format;  [CE]  short  cannot  be  dereferenced  [FE]                                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat.getOutputStream(),  format;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.getOutputStream(),  format;	  OutputStream    out    =    this.entryFormat.getOutputStream();    	non-compiled	[CE]  short  cannot  be  dereferenced	28	None	replace
303	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(this.entryFormat),  format);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(this.entryFormat),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(this.entryFormat),  format);	  cpioEntry.setFormat(new    OutputStreamReader(format),    this.entryFormat);    	non-compiled	[CE]  cannot  find  symbol	218	None	replace
304	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format),  this.entryFormat,  format);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format),  this.entryFormat,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(format),  this.entryFormat,  format);	  cpioEntry.setFormat(new    OutputStreamReader(format),    this.entryFormat);    	non-compiled	[CE]  cannot  find  symbol	218	None	replace
305	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(this.format),  format);  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(this.format),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(this.format),  format);	  cpioEntry.setFormat(new    OutputStreamReader(format),    this.entryFormat);    	non-compiled	[CE]  cannot  find  symbol	218	None	replace
306	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format),  this.entryFormat);  [CE]  <identifier>  expected  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format),  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamReader(format),  this.entryFormat);	  cpioEntry.setFormat(new    OutputStreamReader(format),    this.entryFormat);    	non-compiled	[CE]  <identifier>  expected	218	None	replace
307	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(out,  format),  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(out,  format),  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(out,  format),  this.entryFormat);	  cpioEntry.setFormat(new    OutputStreamReader(format),    this.entryFormat);    	non-compiled	[CE]  cannot  find  symbol	218	None	replace
308	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	168	None	replace
309	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	168	None	replace
310	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	168	None	replace
311	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	168	None	replace
312	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
313	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
314	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null. "  +  format);  [CE]  unreachable  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null. "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null. "  +  format);	  throw    new    IllegalArgumentException(   "Format    is    null.    Format:   "    +    format);    	non-compiled	[CE]  unreachable  statement	40	None	replace
315	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  null. "  +  format);  [CE]  <identifier>  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  null. "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  is  null. "  +  format);	  throw    new    IllegalArgumentException(   "Format    is    null.    Format:   "    +    format);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
316	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null,  format: "  +  format);  [CE]  unreachable  statement  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null,  format: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null,  format: "  +  format);	  throw    new    IllegalArgumentException(   "Format    is    null.    Format:   "    +    format);    	non-compiled	[CE]  unreachable  statement	40	None	replace
317	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null.  Format: "  +  format,  out);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,OutputStream)  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null.  Format: "  +  format,  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null.  Format: "  +  format,  out);	  throw    new    IllegalArgumentException(   "Format    is    null.    Format:   "    +    format);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,OutputStream)	40	None	replace
318	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	48	None	replace
319	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	48	None	replace
320	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	48	None	replace
321	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  length  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  length	48	None	replace
322	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  length  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  length	48	None	replace
323	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(out,  format));  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(out,  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamWriter(out,  format));	  cpioEntry.setFormat(new    OutputStreamWriter(out,    format));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
324	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(out,  format),  crc);  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(out,  format),  crc);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(out,  format),  crc);	  cpioEntry.setFormat(new    OutputStreamWriter(out,    format));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
325	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format,  out));  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format,  out));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(format,  out));	  cpioEntry.setFormat(new    OutputStreamWriter(out,    format));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
326	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(out,  format),  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(out,  format),  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(out,  format),  this.entryFormat);	  cpioEntry.setFormat(new    OutputStreamWriter(out,    format));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
327	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  format);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(format,  format);	  cpioEntry.setFormat(new    OutputStreamWriter(out,    format));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
328	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  out));  [CE]  ';'  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  out));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  out));	  cpioEntry.setFormat(new    OutputStreamWriter(out,    format));    	non-compiled	[CE]  ';'  expected	11	None	replace
329	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_ASCII  [FE]        IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_CRC)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_ASCII	189	None	replace
330	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_OLD_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_CRC)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	189	2	replace
331	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_CRC)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	189	2	replace
332	[BUG]  [BUGGY]  if(format  ==  FORMAT_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_ASCII  [FE]            IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_CRC)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_ASCII	189	None	replace
333	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
334	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	153	None	replace
335	[BUG]  [BUGGY]  if(format  ==  FORMAT_BINARY  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_BINARY  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_BINARY  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	153	None	replace
336	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	153	None	replace
337	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(this.entryFormat);  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	cpioEntry.setFormat(this.entryFormat);  break;	  cpioEntry.setFormat(format);    break;    	compilable	  [FE]  NullPointerException  	173	2	replace
338	[BUG]  [BUGGY]  cpioEntry.setFormat(this.entryFormat);  break;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(this.entryFormat);  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(this.entryFormat);  break;	  cpioEntry.setFormat(format);    break;    	compilable	  [FE]  NullPointerException  	173	2	replace
339	[BUG]  [BUGGY]  cpioEntry.setFormat(new  String(format));  break;  [CE]  no  suitable  constructor  found  for  String(short)  [FE]      NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  String(format));  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  String(format));  break;	  cpioEntry.setFormat(format);    break;    	non-compiled	[CE]  no  suitable  constructor  found  for  String(short)	173	None	replace
340	[BUG]  [BUGGY]  cpioEntry.setBinary(format);  break;  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setBinary(format);  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setBinary(format);  break;	  cpioEntry.setFormat(format);    break;    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
341	[BUG]  [BUGGY]  cpioEntry.setFormat(this.format);  break;  [CE]  cannot  find  symbol  format  [FE]          NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(this.format);  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(this.format);  break;	  cpioEntry.setFormat(format);    break;    	non-compiled	[CE]  cannot  find  symbol  format	173	None	replace
342	[BUG]  [BUGGY]  cpioEntry.setString(format);  break;  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setString(format);  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setString(format);  break;	  cpioEntry.setFormat(format);    break;    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
343	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	61	1	add
344	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	61	1	add
345	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	61	1	add
346	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	61	1	add
347	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	61	1	add
348	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	61	1	add
349	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  [CE]  orphaned  default  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;	  	non-compiled	[CE]  orphaned  default	61	None	add
350	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	61	1	add
351	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	61	1	add
352	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	61	1	add
353	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	61	1	add
354	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  break;  }  [CE]  orphaned  default  [FE]                EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  break;  }	  	non-compiled	[CE]  orphaned  default	61	None	add
355	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	195	1	add
356	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	195	1	add
357	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	195	1	add
358	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	195	1	add
359	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >>  FORMAT_NEW)  {  break;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >>  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  >>  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	195	None	add
360	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	195	1	add
361	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	195	1	add
362	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  [CE]  orphaned  default  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;	  	non-compiled	[CE]  orphaned  default	195	None	add
363	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	195	1	add
364	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	195	1	add
365	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  [Delete]  FORMAT_NEW)  {  break;  }  [CE]  ')'  expected  [FE]                EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  [Delete]  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  [Delete]  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  ')'  expected	195	None	add
366	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  break;  }  [CE]  orphaned  default  [FE]                  EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  break;  }	  	non-compiled	[CE]  orphaned  default	195	None	add
367	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  value. ");  [CE]  unreachable  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  value. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  not  followed  by  a  value. ");	  throw    new    IllegalArgumentException(   "Format    not    followed    by    a    value   ");    	non-compiled	[CE]  unreachable  statement	201	None	replace
368	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  value: "  +  format);  [CE]  unreachable  statement  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  value: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  not  followed  by  a  value: "  +  format);	  throw    new    IllegalArgumentException(   "Format    not    followed    by    a    value   ");    	non-compiled	[CE]  unreachable  statement	201	None	replace
369	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  value ",  format);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  value ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  not  followed  by  a  value ",  format);	  throw    new    IllegalArgumentException(   "Format    not    followed    by    a    value   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)	201	None	replace
370	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  not  followed  by  a  value ");  [CE]  <identifier>  expected  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  not  followed  by  a  value ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  not  followed  by  a  value ");	  throw    new    IllegalArgumentException(   "Format    not    followed    by    a    value   ");    	non-compiled	[CE]  <identifier>  expected	201	None	replace
371	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  value: ");  [CE]  unreachable  statement  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  value: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  not  followed  by  a  value: ");	  throw    new    IllegalArgumentException(   "Format    not    followed    by    a    value   ");    	non-compiled	[CE]  unreachable  statement	201	None	replace
372	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format,  format),  out);  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format,  format),  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format,  format),  out);	  cpioEntry.setFormat(new    InputStreamReader(format,    format));    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
373	[BUG]  [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(format,  format));  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(format,  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  InputStreamReader(format,  format));	  cpioEntry.setFormat(new    InputStreamReader(format,    format));    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
374	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format,  format);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  InputStreamReader(format,  format);	  cpioEntry.setFormat(new    InputStreamReader(format,    format));    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
375	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format,  format));  [CE]  ';'  expected  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format,  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  InputStreamReader(format,  format));	  cpioEntry.setFormat(new    InputStreamReader(format,    format));    	non-compiled	[CE]  ';'  expected	22	None	replace
376	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format,  format),  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format,  format),  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format,  format),  this.entryFormat);	  cpioEntry.setFormat(new    InputStreamReader(format,    format));    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
377	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	175	None	replace
378	[BUG]  [BUGGY]  because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	175	None	replace
379	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	175	None	replace
380	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  out.put(0,  format);  }  [CE]  ';'  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  out.put(0,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  out.put(0,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	175	None	replace
381	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_ASCII)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_ASCII)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_ASCII)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	175	None	replace
382	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	175	None	replace
383	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	175	None	replace
384	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.getOutputFile(),  format);  [CE]  ';'  expected  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat.getOutputFile(),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.getOutputFile(),  format);	  OutputStream    out    =    this.entryFormat.getOutputFile();    	non-compiled	[CE]  ';'  expected	25	None	replace
385	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.getOutputPath();  [CE]  short  cannot  be  dereferenced  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat.getOutputPath();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.getOutputPath();	  OutputStream    out    =    this.entryFormat.getOutputFile();    	non-compiled	[CE]  short  cannot  be  dereferenced	25	None	replace
386	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat,  format.getOutputFile();  [CE]  ';'  expected  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat,  format.getOutputFile();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat,  format.getOutputFile();	  OutputStream    out    =    this.entryFormat.getOutputFile();    	non-compiled	[CE]  ';'  expected	25	None	replace
387	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.getOutputFile(),  format;  [CE]  short  cannot  be  dereferenced  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat.getOutputFile(),  format;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.getOutputFile(),  format;	  OutputStream    out    =    this.entryFormat.getOutputFile();    	non-compiled	[CE]  short  cannot  be  dereferenced	25	None	replace
388	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.getInputFile();  [CE]  short  cannot  be  dereferenced  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat.getInputFile();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.getInputFile();	  OutputStream    out    =    this.entryFormat.getOutputFile();    	non-compiled	[CE]  short  cannot  be  dereferenced	25	None	replace
389	[BUG]  [BUGGY]  OutputStream  out  =  format.getOutputFile();  [CE]  short  cannot  be  dereferenced  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  format.getOutputFile();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  format.getOutputFile();	  OutputStream    out    =    this.entryFormat.getOutputFile();    	non-compiled	[CE]  short  cannot  be  dereferenced	25	None	replace
390	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	82	1	add
391	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	82	1	add
392	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	82	1	add
393	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	82	1	add
394	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	82	1	add
395	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	82	1	add
396	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	82	1	add
397	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	82	1	add
398	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	82	1	add
399	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	82	1	add
400	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	82	1	add
401	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	82	1	add
402	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_  [CE]  ')'  expected  [FE]                EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_	  	non-compiled	[CE]  ')'  expected	82	None	add
403	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW)  {  break;  }  [CE]  incompatible  types  [FE]                  EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  incompatible  types	82	None	add
404	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	183	None	replace
405	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format  [CE]  ';'  expected  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	183	None	replace
406	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	183	None	replace
407	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  Format);  }  [CE]  ';'  expected  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  Format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  Format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	183	None	replace
408	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  [CE]  ';'  expected  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	183	None	replace
409	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format    ==    FORMAT_OLD_BINARY)    {    break;    	compilable	  [FE]  IllegalArgumentException  	8	2	replace
410	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  IllegalArgumentException  [FE]                IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format    ==    FORMAT_OLD_BINARY)    {    break;    	compilable	  [FE]  IllegalArgumentException  	8	2	replace
411	[BUG]  [BUGGY]  reason(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  [CE]  ';'  expected  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  reason(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	reason(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format    ==    FORMAT_OLD_BINARY)    {    break;    	non-compiled	[CE]  ';'  expected	8	None	replace
412	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  not  a  valid  format. ");  [CE]  <identifier>  expected  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  not  a  valid  format. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  is  not  a  valid  format. ");	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format.   ");    	non-compiled	[CE]  <identifier>  expected	93	None	replace
413	[BUG]  [BUGGY]  Throwables.log( "Format  is  not  a  valid  format. ");  [CE]  cannot  find  symbol  Throwables  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.log( "Format  is  not  a  valid  format. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.log( "Format  is  not  a  valid  format. ");	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format.   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	93	None	replace
414	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format.  Please  check  that  the  format  does  not  exist. ");  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format.  Please  check  that  the  format  does  not  exist. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  valid  format.  Please  check  that  the  format  does  not  exist. ");	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format.   ");    	non-compiled	[CE]  unreachable  statement	93	None	replace
415	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	206	None	replace
416	[BUG]  [BUGGY]  because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	206	None	replace
417	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	206	None	replace
418	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	206	None	replace
419	[BUG]  [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
420	[BUG]  [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(  [CE]  illegal  start  of  expression  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
421	[BUG]  [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put  [CE]  illegal  start  of  expression  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
422	[BUG]  [BUGGY]  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
423	[BUG]  [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
424	[BUG]  [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out  [CE]  illegal  start  of  expression  [FE]                                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
425	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	117	2	replace
426	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	117	2	replace
427	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	117	2	replace
428	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	117	2	replace
429	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	41	None	replace
430	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format.length()  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format.length()  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format.length()  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	41	None	replace
431	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  short  cannot  be  dereferenced  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  short  cannot  be  dereferenced	41	None	replace
432	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	41	None	replace
433	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  Format);  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  Format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  Format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	41	None	replace
434	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format: "  +  format);  [CE]  unreachable  statement  [FE]            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format: "  +  format);	  throw    new    IllegalArgumentException(   "Unknown    format:   ");    	non-compiled	[CE]  unreachable  statement	111	None	replace
435	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format: ",  format);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format: ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format: ",  format);	  throw    new    IllegalArgumentException(   "Unknown    format:   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)	111	None	replace
436	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Unknown  format: ");  [CE]  <identifier>  expected  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Unknown  format: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Unknown  format: ");	  throw    new    IllegalArgumentException(   "Unknown    format:   ");    	non-compiled	[CE]  <identifier>  expected	111	None	replace
437	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  ' "  +  format  + "': ");  [CE]  unreachable  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  ' "  +  format  + "': ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  ' "  +  format  + "': ");	  throw    new    IllegalArgumentException(   "Unknown    format:   ");    	non-compiled	[CE]  unreachable  statement	111	None	replace
438	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  type: ");  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  type: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  type: ");	  throw    new    IllegalArgumentException(   "Unknown    format:   ");    	non-compiled	[CE]  unreachable  statement	111	None	replace
439	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    >=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	81	1	replace
440	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    >=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	81	1	replace
441	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    >=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	81	1	replace
442	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    >=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	81	1	replace
443	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format,  out));  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format,  out));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format,  out));	  cpioEntry.setFormat(new    InputStreamReader(out,    format));    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
444	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format,  out));  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format,  out));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  InputStreamReader(format,  out));	  cpioEntry.setFormat(new    InputStreamReader(out,    format));    	non-compiled	[CE]  ';'  expected	214	None	replace
445	[BUG]  [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(out,  format));  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(out,  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  InputStreamReader(out,  format));	  cpioEntry.setFormat(new    InputStreamReader(out,    format));    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
446	[BUG]  [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(format,  out));  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(format,  out));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  InputStreamReader(format,  out));	  cpioEntry.setFormat(new    InputStreamReader(out,    format));    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
447	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(out,  format),  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(out,  format),  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(out,  format),  this.entryFormat);	  cpioEntry.setFormat(new    InputStreamReader(out,    format));    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
448	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(out,  format);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(out,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  InputStreamReader(out,  format);	  cpioEntry.setFormat(new    InputStreamReader(out,    format));    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
449	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(out,  format),  crc);  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(out,  format),  crc);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(out,  format),  crc);	  cpioEntry.setFormat(new    InputStreamReader(out,    format));    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
450	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BRIDGE)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BRIDGE  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BRIDGE)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BRIDGE)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BRIDGE	64	None	replace
451	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_ASCII  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_ASCII	64	None	replace
452	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ABSTRACT)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_ABSTRACT  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ABSTRACT)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ABSTRACT)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_ABSTRACT	64	None	replace
453	[BUG]  [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  null)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
454	[BUG]  [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  null)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  null)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
455	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(this.entryFormat),  format);  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(this.entryFormat),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(this.entryFormat),  format);	  cpioEntry.setFormat(new    InputStreamReader(format),    this.entryFormat);    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
456	[BUG]  [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(format),  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(format),  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  InputStreamReader(format),  this.entryFormat);	  cpioEntry.setFormat(new    InputStreamReader(format),    this.entryFormat);    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
457	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(this.format),  format);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(this.format),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(this.format),  format);	  cpioEntry.setFormat(new    InputStreamReader(format),    this.entryFormat);    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
458	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format),  this.entryFormat);  [CE]  <identifier>  expected  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format),  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  InputStreamReader(format),  this.entryFormat);	  cpioEntry.setFormat(new    InputStreamReader(format),    this.entryFormat);    	non-compiled	[CE]  <identifier>  expected	213	None	replace
459	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  this.entryFormat,  format);  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  this.entryFormat,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  this.entryFormat,  format);	  cpioEntry.setFormat(new    InputStreamReader(format),    this.entryFormat);    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
460	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format),  out,  format);  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format),  out,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(format),  out,  format);	  cpioEntry.setFormat(new    OutputStreamReader(format),    out);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
461	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	52	None	replace
462	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	52	None	replace
463	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  length  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  length	52	None	replace
464	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_BINARY)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	52	None	replace
465	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  entry  format: "  +  format);  [CE]  unreachable  statement  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  entry  format: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  entry  format: "  +  format);	  throw    new    IllegalArgumentException(   "Unknown    entry    format:   ");    	non-compiled	[CE]  unreachable  statement	179	None	replace
466	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Unknown  entry  format: ");  [CE]  <identifier>  expected  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Unknown  entry  format: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Unknown  entry  format: ");	  throw    new    IllegalArgumentException(   "Unknown    entry    format:   ");    	non-compiled	[CE]  <identifier>  expected	179	None	replace
467	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  entry  format: ",  format);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  entry  format: ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  entry  format: ",  format);	  throw    new    IllegalArgumentException(   "Unknown    entry    format:   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)	179	None	replace
468	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format   "  +  format);  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format   "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  format   "  +  format);	  throw    new    IllegalArgumentException(   "Unknown    format    format       "):    format;    	non-compiled	[CE]  unreachable  statement	200	None	replace
469	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format   ");  [CE]  unreachable  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format   ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  format   ");	  throw    new    IllegalArgumentException(   "Unknown    format    format       "):    format;    	non-compiled	[CE]  unreachable  statement	200	None	replace
470	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format ",  format);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  format ",  format);	  throw    new    IllegalArgumentException(   "Unknown    format    format       "):    format;    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)	200	None	replace
471	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format  + "' ");  [CE]  unreachable  statement  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format  + "' ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format  + "' ");	  throw    new    IllegalArgumentException(   "Unknown    format    format       "):    format;    	non-compiled	[CE]  unreachable  statement	200	None	replace
472	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	70	1	add
473	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	70	1	add
474	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	70	1	add
475	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	70	1	add
476	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	70	1	add
477	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]        IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	70	1	add
478	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  >>  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  >>  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  >>  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	70	None	add
479	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  [Delete]  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [CE]  ')'  expected  [FE]            IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  [Delete]  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  [Delete]  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	non-compiled	[CE]  ')'  expected	70	None	add
480	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_C)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_C  [FE]              IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_C)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_C)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_C	70	None	add
481	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	70	1	add
482	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]                IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	70	1	add
483	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  break;  }  [CE]  orphaned  default  [FE]                  IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  break;  }	  	non-compiled	[CE]  orphaned  default	70	None	add
484	[BUG]  [BUGGY]  this.entryFormat  =  format  <  0?  null  :  format.toString();  [CE]  short  cannot  be  dereferenced  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  <  0?  null  :  format.toString();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  <  0?  null  :  format.toString();	  this.entryFormat    =    format    <    0?    null    :    format;    	non-compiled	[CE]  short  cannot  be  dereferenced	202	None	replace
485	[BUG]  [BUGGY]  this.entryFormat  =  format  ==  0?  null  :  format;  [CE]  incompatible  types  for  ?:  neither  is  a  subtype  of  the  other  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  ==  0?  null  :  format;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  ==  0?  null  :  format;	  this.entryFormat    =    format    <    0?    null    :    format;    	non-compiled	[CE]  incompatible  types  for  ?:  neither  is  a  subtype  of  the  other	202	None	replace
486	[BUG]  [BUGGY]  this.entryFormat  =  format!=  0?  null  :  format;  [CE]  incompatible  types  for  ?:  neither  is  a  subtype  of  the  other  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format!=  0?  null  :  format;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format!=  0?  null  :  format;	  this.entryFormat    =    format    <    0?    null    :    format;    	non-compiled	[CE]  incompatible  types  for  ?:  neither  is  a  subtype  of  the  other	202	None	replace
487	[BUG]  [BUGGY]  this.entryFormat  =  format  <  0?  null  :  format  +  1;  [CE]  incompatible  types  for  ?:  neither  is  a  subtype  of  the  other  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  <  0?  null  :  format  +  1;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  <  0?  null  :  format  +  1;	  this.entryFormat    =    format    <    0?    null    :    format;    	non-compiled	[CE]  incompatible  types  for  ?:  neither  is  a  subtype  of  the  other	202	None	replace
488	[BUG]  [BUGGY]  this.entryFormat  =  format  >=  0?  null  :  format;  [CE]  incompatible  types  for  ?:  neither  is  a  subtype  of  the  other  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  >=  0?  null  :  format;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  >=  0?  null  :  format;	  this.entryFormat    =    format    <    0?    null    :    format;    	non-compiled	[CE]  incompatible  types  for  ?:  neither  is  a  subtype  of  the  other	202	None	replace
489	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format);  [CE]  <identifier>  expected  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format);	  throw    new    IllegalArgumentException(   "Unknown    format    format    '   "    +    format);    	non-compiled	[CE]  <identifier>  expected	198	None	replace
490	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Unknown  format  format  ' "  +  format));  [CE]  <identifier>  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Unknown  format  format  ' "  +  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw(new  IllegalArgumentException( "Unknown  format  format  ' "  +  format));	  throw    new    IllegalArgumentException(   "Unknown    format    format    '   "    +    format);    	non-compiled	[CE]  <identifier>  expected	198	None	replace
491	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format  + "'. ");  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format  + "'. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format  + "'. ");	  throw    new    IllegalArgumentException(   "Unknown    format    format    '   "    +    format);    	non-compiled	[CE]  unreachable  statement	198	None	replace
492	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format  + ".' ");  [CE]  unreachable  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format  + ".' ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format  + ".' ");	  throw    new    IllegalArgumentException(   "Unknown    format    format    '   "    +    format);    	non-compiled	[CE]  unreachable  statement	198	None	replace
493	[BUG]  [BUGGY]  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format);  [CE]  unreachable  statement  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	new  IllegalArgumentException( "Unknown  format  format  ' "  +  format);	  throw    new    IllegalArgumentException(   "Unknown    format    format    '   "    +    format);    	non-compiled	[CE]  unreachable  statement	198	None	replace
494	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
495	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
496	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
497	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
498	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
499	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
500	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
501	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
502	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	5	None	add
503	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	5	None	add
504	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
505	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]                EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
506	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                  EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
507	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]                  EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
508	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  does  not  exist: ");  [CE]  <identifier>  expected  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  does  not  exist: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  does  not  exist: ");	  throw    new    IllegalArgumentException(   "Format    does    not    exist:   ");    	non-compiled	[CE]  <identifier>  expected	151	None	replace
509	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist:  ' "  +  format);  [CE]  unreachable  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist:  ' "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  does  not  exist:  ' "  +  format);	  throw    new    IllegalArgumentException(   "Format    does    not    exist:   ");    	non-compiled	[CE]  unreachable  statement	151	None	replace
510	[BUG]  [BUGGY]  this.entryFormat  =  format  ==  null?  getFormat()  :  format;  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  ==  null?  getFormat()  :  format;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  ==  null?  getFormat()  :  format;	  this.entryFormat    =    format    {    null?    getFormat()    :    format;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	205	None	replace
511	[BUG]  [BUGGY]  this.entryFormat  =  format  ==  null?  getEntryFormat()  :  format;  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  ==  null?  getEntryFormat()  :  format;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  ==  null?  getEntryFormat()  :  format;	  this.entryFormat    =    format    {    null?    getFormat()    :    format;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	205	None	replace
512	[BUG]  [BUGGY]  this.entryFormat  =  format!=  null?  getFormat()  :  format;  [CE]  bad  operand  types  for  binary  operator  '!='  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format!=  null?  getFormat()  :  format;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format!=  null?  getFormat()  :  format;	  this.entryFormat    =    format    {    null?    getFormat()    :    format;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '!='	205	None	replace
513	[BUG]  [BUGGY]  this.entryFormat  =  format  ==  null?  getFormat()  :  format  +  1;  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  ==  null?  getFormat()  :  format  +  1;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  ==  null?  getFormat()  :  format  +  1;	  this.entryFormat    =    format    {    null?    getFormat()    :    format;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	205	None	replace
514	[BUG]  [BUGGY]  this.entryFormat  =  format  ==  null?  getValue()  :  format;  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  ==  null?  getValue()  :  format;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  ==  null?  getValue()  :  format;	  this.entryFormat    =    format    {    null?    getFormat()    :    format;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	205	None	replace
515	[BUG]  [BUGGY]  this.entryFormat  =  format  ==  null?  getFormat()  :  Format.BINARY;  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  ==  null?  getFormat()  :  Format.BINARY;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  ==  null?  getFormat()  :  Format.BINARY;	  this.entryFormat    =    format    {    null?    getFormat()    :    format;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	205	None	replace
516	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	135	None	replace
517	[BUG]  [BUGGY]  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
518	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ABSTRACT)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ABSTRACT)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ABSTRACT)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	135	None	replace
519	[BUG]  [BUGGY]  cpioEntry.setFormat(new  String(format),  format);  [CE]  no  suitable  constructor  found  for  String(short)  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  String(format),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  String(format),  format);	  cpioEntry.setFormat(new    String(format));    	non-compiled	[CE]  no  suitable  constructor  found  for  String(short)	89	None	replace
520	[BUG]  [BUGGY]  cpioEntry.setFormat(new  String(format,  format));  [CE]  no  suitable  constructor  found  for  String(short,short)  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  String(format,  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  String(format,  format));	  cpioEntry.setFormat(new    String(format));    	non-compiled	[CE]  no  suitable  constructor  found  for  String(short,short)	89	None	replace
521	[BUG]  [BUGGY]  cpioEntry.setFormat(new  String(format),  out);  [CE]  no  suitable  constructor  found  for  String(short)  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  String(format),  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  String(format),  out);	  cpioEntry.setFormat(new    String(format));    	non-compiled	[CE]  no  suitable  constructor  found  for  String(short)	89	None	replace
522	[BUG]  [BUGGY]  cpioEntry.setFormat(new  String(format),  crc);  [CE]  no  suitable  constructor  found  for  String(short)  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  String(format),  crc);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  String(format),  crc);	  cpioEntry.setFormat(new    String(format));    	non-compiled	[CE]  no  suitable  constructor  found  for  String(short)	89	None	replace
523	[BUG]  [BUGGY]  cpioEntry.setFormat(new  String(format),  written);  [CE]  no  suitable  constructor  found  for  String(short)  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  String(format),  written);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  String(format),  written);	  cpioEntry.setFormat(new    String(format));    	non-compiled	[CE]  no  suitable  constructor  found  for  String(short)	89	None	replace
524	[BUG]  [BUGGY]  because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	166	None	replace
525	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format.length()  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format.length()  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format.length()  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	166	None	replace
526	[BUG]  [BUGGY]  if(format!=  null)  {  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  null)  {  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  null)  {  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	166	None	replace
527	[BUG]  [BUGGY]  if(format!=  null)  {  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  null)  {  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  null)  {  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	166	None	replace
528	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  format,  out);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  format,  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  format,  out);	  cpioEntry.setFormat(new    InputStreamReader(format),    format);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
529	[BUG]  [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(format),  format);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(format),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  InputStreamReader(format),  format);	  cpioEntry.setFormat(new    InputStreamReader(format),    format);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
530	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format),  format);  [CE]  ';'  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  InputStreamReader(format),  format);	  cpioEntry.setFormat(new    InputStreamReader(format),    format);    	non-compiled	[CE]  ';'  expected	20	None	replace
531	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(out,  format),  format);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(out,  format),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(out,  format),  format);	  cpioEntry.setFormat(new    InputStreamReader(format),    format);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
532	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  format,  crc);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  format,  crc);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  format,  crc);	  cpioEntry.setFormat(new    InputStreamReader(format),    format);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
533	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	155	None	replace
534	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	155	None	replace
535	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
536	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
537	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  out);  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  out);	  CpioEntry    cpioEntry    =    new    CpioEntry(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
538	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  format);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  format);	  CpioEntry    cpioEntry    =    new    CpioEntry(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
539	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format,  format));  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format,  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format,  format));	  CpioEntry    cpioEntry    =    new    CpioEntry(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
540	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  DEFAULT_VERSION);  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  DEFAULT_VERSION);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  DEFAULT_VERSION);	  CpioEntry    cpioEntry    =    new    CpioEntry(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
541	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  this);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  this);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  this);	  CpioEntry    cpioEntry    =    new    CpioEntry(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
542	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  out.read());  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  out.read());  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  out.read());	  CpioEntry    cpioEntry    =    new    CpioEntry(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
543	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	65	1	add
544	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	65	1	add
545	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	65	1	add
546	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	65	1	add
547	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	65	1	add
548	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	65	1	add
549	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	65	1	add
550	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	65	1	add
551	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	65	1	add
552	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	65	1	add
553	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  [CE]  orphaned  default  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;	  	non-compiled	[CE]  orphaned  default	65	None	add
554	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  break;  }  [CE]  orphaned  default  [FE]                EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  break;  }	  	non-compiled	[CE]  orphaned  default	65	None	add
555	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_N  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_N  [FE]                  EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_N  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_N  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_N	65	None	add
556	[BUG]  [BUGGY]  OutputStream  out  =(outputStream)this.names.get(0);  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(outputStream)this.names.get(0);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(outputStream)this.names.get(0);	  OutputStream    out    =(OutputStream)this.names.get(0);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
557	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(1);  [CE]  no  suitable  method  found  for  get(int)  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(1);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.names.get(1);	  OutputStream    out    =(OutputStream)this.names.get(0);    	non-compiled	[CE]  no  suitable  method  found  for  get(int)	26	None	replace
558	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.names.getBinary(0);  [CE]  cannot  find  symbol  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.names.getBinary(0);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.names.getBinary(0);	  OutputStream    out    =(OutputStream)this.names.get(0);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
559	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(format  -  1);  [CE]  no  suitable  method  found  for  get(int)  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(format  -  1);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.names.get(format  -  1);	  OutputStream    out    =(OutputStream)this.names.get(0);    	non-compiled	[CE]  no  suitable  method  found  for  get(int)	26	None	replace
560	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(index);  [CE]  cannot  find  symbol  index  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(index);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.names.get(index);	  OutputStream    out    =(OutputStream)this.names.get(0);    	non-compiled	[CE]  cannot  find  symbol  index	26	None	replace
561	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	210	None	replace
562	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	210	None	replace
563	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	210	None	replace
564	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY)  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	210	None	replace
565	[BUG]  [BUGGY]  cpioEntry.setPath(format,  out);  [CE]  cannot  find  symbol  [FE]            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setPath(format,  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setPath(format,  out);	  cpioEntry.setPath(format);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
566	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  format.setPath(cpioEntry);  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  format.setPath(cpioEntry);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  format.setPath(cpioEntry);	  cpioEntry.setPath(format);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
567	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  format.setPath(cpioEntry.getPath());  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  format.setPath(cpioEntry.getPath());  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  format.setPath(cpioEntry.getPath());	  cpioEntry.setPath(format);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
568	[BUG]  [BUGGY]  CpioEntry.setPath(format);  [CE]  cannot  find  symbol  CpioEntry  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setPath(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setPath(format);	  cpioEntry.setPath(format);    	non-compiled	[CE]  cannot  find  symbol  CpioEntry	127	None	replace
569	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  format.setPath(cpioEntry.path);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  format.setPath(cpioEntry.path);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  format.setPath(cpioEntry.path);	  cpioEntry.setPath(format);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
570	[BUG]  [BUGGY]  cpioEntry.setPadded(false);  [CE]  cannot  find  symbol  [FE]            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setPadded(false);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setPadded(false);	  cpioEntry.setPadded(true);    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
571	[BUG]  [BUGGY]  cpioEntry.setPadded(true,  format);  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setPadded(true,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setPadded(true,  format);	  cpioEntry.setPadded(true);    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
572	[BUG]  [BUGGY]  cpioEntry.setPadded(false,  format);  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setPadded(false,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setPadded(false,  format);	  cpioEntry.setPadded(true);    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
573	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	138	None	replace
574	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	138	None	replace
575	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	138	None	replace
576	[BUG]  [BUGGY]  this.entryFormat  =  format!=  null?  FORMAT_OLD_BINARY  :  new  HashMap();  [CE]  bad  operand  types  for  binary  operator  '!='  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format!=  null?  FORMAT_OLD_BINARY  :  new  HashMap();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format!=  null?  FORMAT_OLD_BINARY  :  new  HashMap();	  this.entryFormat    =    format!=    null?    format    :    new    HashMap();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '!='	203	None	replace
577	[BUG]  [BUGGY]  this.entryFormat  =  format  ==  null?  Format.UNKNOWN  :  new  HashMap();  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  ==  null?  Format.UNKNOWN  :  new  HashMap();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  ==  null?  Format.UNKNOWN  :  new  HashMap();	  this.entryFormat    =    format!=    null?    format    :    new    HashMap();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	203	None	replace
578	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY.length)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY.length)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY.length)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW.length)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	197	None	replace
579	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BRIDGE.length)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BRIDGE  [FE]            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BRIDGE.length)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BRIDGE.length)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW.length)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BRIDGE	197	None	replace
580	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC.length)  {  break;  }  [CE]  short  cannot  be  dereferenced  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC.length)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC.length)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW.length)    {    break;    }    	non-compiled	[CE]  short  cannot  be  dereferenced	197	None	replace
581	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format),  format,  out);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format),  format,  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(format),  format,  out);	  cpioEntry.setFormat(new    OutputStreamWriter(format),    out);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
582	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(format),  format);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(format),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamWriter(format),  format);	  cpioEntry.setFormat(new    OutputStreamWriter(format),    out);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
583	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(format),  out);  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(format),  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamWriter(format),  out);	  cpioEntry.setFormat(new    OutputStreamWriter(format),    out);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
584	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(out,  format),  format);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(out,  format),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(out,  format),  format);	  cpioEntry.setFormat(new    OutputStreamWriter(format),    out);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
585	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format),  format,  crc);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format),  format,  crc);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(format),  format,  crc);	  cpioEntry.setFormat(new    OutputStreamWriter(format),    out);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
586	[BUG]  [BUGGY]  Throwables.warning( "Format  is  null ",  format);  [CE]  cannot  find  symbol  Throwables  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.warning( "Format  is  null ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.warning( "Format  is  null ",  format);	  Throwables.warning(   "Format    is    null.   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	39	None	replace
587	[BUG]  [BUGGY]  Throwables.warning( "Format  is  null, ");  [CE]  cannot  find  symbol  Throwables  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.warning( "Format  is  null, ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.warning( "Format  is  null, ");	  Throwables.warning(   "Format    is    null.   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	39	None	replace
588	[BUG]  [BUGGY]  Throwables.warning( "Format  is  null! ");  [CE]  cannot  find  symbol  Throwables  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.warning( "Format  is  null! ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.warning( "Format  is  null! ");	  Throwables.warning(   "Format    is    null.   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	39	None	replace
589	[BUG]  [BUGGY]  Throwables.warning( "Format  is  null: ");  [CE]  cannot  find  symbol  Throwables  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.warning( "Format  is  null: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.warning( "Format  is  null: ");	  Throwables.warning(   "Format    is    null.   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	39	None	replace
590	[BUG]  [BUGGY]  Throwables.error( "Format  is  null. ");  [CE]  cannot  find  symbol  Throwables  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.error( "Format  is  null. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.error( "Format  is  null. ");	  Throwables.warning(   "Format    is    null.   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	39	None	replace
591	[BUG]  [BUGGY]  Throwables.warning( "Format  is  null  with  format. ");  [CE]  cannot  find  symbol  Throwables  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.warning( "Format  is  null  with  format. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.warning( "Format  is  null  with  format. ");	  Throwables.warning(   "Format    is    null.   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	39	None	replace
592	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  DEFAULT_VERSION);  out.write('n');  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  DEFAULT_VERSION);  out.write('n');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(format,  DEFAULT_VERSION);  out.write('n');	  OutputStream    out    =    new    OutputStreamWriter(format);    out.write('n');    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
593	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  this.entryFormat);  out.write('n');  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  this.entryFormat);  out.write('n');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(format,  this.entryFormat);  out.write('n');	  OutputStream    out    =    new    OutputStreamWriter(format);    out.write('n');    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
594	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  DEFAULT_NAME_ASCII);  out.write('n');  [CE]  cannot  find  symbol  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  DEFAULT_NAME_ASCII);  out.write('n');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(format,  DEFAULT_NAME_ASCII);  out.write('n');	  OutputStream    out    =    new    OutputStreamWriter(format);    out.write('n');    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
595	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  SHORT_DESCRIPTOR);  out.write('n');  [CE]  cannot  find  symbol  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  SHORT_DESCRIPTOR);  out.write('n');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(format,  SHORT_DESCRIPTOR);  out.write('n');	  OutputStream    out    =    new    OutputStreamWriter(format);    out.write('n');    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
596	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  DEFAULT_NAME);  out.write('n');  [CE]  cannot  find  symbol  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  DEFAULT_NAME);  out.write('n');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(format,  DEFAULT_NAME);  out.write('n');	  OutputStream    out    =    new    OutputStreamWriter(format);    out.write('n');    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
597	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  DEFAULT_FORMAT_BINARY);  out.write('n');  [CE]  cannot  find  symbol  [FE]                                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  DEFAULT_FORMAT_BINARY);  out.write('n');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(format,  DEFAULT_FORMAT_BINARY);  out.write('n');	  OutputStream    out    =    new    OutputStreamWriter(format);    out.write('n');    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
598	[BUG]  [BUGGY]  Context.checkState(format  ==  FORMAT_OLD_ASCII);  [CE]  cannot  find  symbol  Context  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Context.checkState(format  ==  FORMAT_OLD_ASCII);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Context.checkState(format  ==  FORMAT_OLD_ASCII);	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    If(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  Context	9	None	replace
599	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  format.setCpio(cpioEntry);  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  format.setCpio(cpioEntry);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  format.setCpio(cpioEntry);	  cpioEntry.setCpio(format);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
600	[BUG]  [BUGGY]  CpioEntry.setCpio(format);  [CE]  cannot  find  symbol  CpioEntry  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setCpio(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setCpio(format);	  cpioEntry.setCpio(format);    	non-compiled	[CE]  cannot  find  symbol  CpioEntry	216	None	replace
601	[BUG]  [BUGGY]  cpioEntry.setCpio(format,  out);  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setCpio(format,  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setCpio(format,  out);	  cpioEntry.setCpio(format);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
602	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  format.setCpio(cpio);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  format.setCpio(cpio);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  format.setCpio(cpio);	  cpioEntry.setCpio(format);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
603	[BUG]  [BUGGY]  CpioEntry  format  =  cpioEntry.setCpio(format);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  format  =  cpioEntry.setCpio(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  format  =  cpioEntry.setCpio(format);	  cpioEntry.setCpio(format);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
604	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format,  out);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format,  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  InputStreamReader(format,  out);	  CpioEntry    cpioEntry    =    new    InputStreamReader(format);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
605	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(this.format);  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(this.format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  InputStreamReader(this.format);	  CpioEntry    cpioEntry    =    new    InputStreamReader(format);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
606	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format,  BINARY);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format,  BINARY);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  InputStreamReader(format,  BINARY);	  CpioEntry    cpioEntry    =    new    InputStreamReader(format);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
607	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format,  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format,  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  InputStreamReader(format,  this.entryFormat);	  CpioEntry    cpioEntry    =    new    InputStreamReader(format);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
608	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format,  DEFAULT_VERSION);  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format,  DEFAULT_VERSION);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  InputStreamReader(format,  DEFAULT_VERSION);	  CpioEntry    cpioEntry    =    new    InputStreamReader(format);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
609	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	148	None	replace
610	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	148	None	replace
611	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  }  [CE]  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format    	non-compiled	[CE]  	148	None	replace
612	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  }  [CE]  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format    	non-compiled	[CE]  	148	None	replace
613	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  0,  [CE]  ')'  expected  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  0,  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  0,	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	148	None	replace
614	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  type: "  +  format);  [CE]  unreachable  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  type: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  type: "  +  format);	  throw    new    IllegalArgumentException(   "Unknown    format    type   ");    	non-compiled	[CE]  unreachable  statement	181	None	replace
615	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  type ",  format);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  type ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  type ",  format);	  throw    new    IllegalArgumentException(   "Unknown    format    type   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)	181	None	replace
616	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Unknown  format  type ");  [CE]  <identifier>  expected  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Unknown  format  type ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Unknown  format  type ");	  throw    new    IllegalArgumentException(   "Unknown    format    type   ");    	non-compiled	[CE]  <identifier>  expected	181	None	replace
617	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  type. ");  [CE]  unreachable  statement  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  type. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  type. ");	  throw    new    IllegalArgumentException(   "Unknown    format    type   ");    	non-compiled	[CE]  unreachable  statement	181	None	replace
618	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format.length()  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format.length()  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format.length()  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	104	None	replace
619	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  short  cannot  be  dereferenced  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  short  cannot  be  dereferenced	104	None	replace
620	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  Format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  Format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  Format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	104	None	replace
621	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	141	1	add
622	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	141	1	add
623	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	141	1	add
624	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	141	1	add
625	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW)  {  break;  }  [CE]  incompatible  types  [FE]        IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW)    {    break;    }    if(format  >>  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  incompatible  types	141	None	add
626	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	141	1	add
627	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]          IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	141	1	add
628	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  if(format  [Delete]  FORMAT_NEW)  {  break;  }  [CE]  ')'  expected  [FE]            IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  if(format  [Delete]  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW)    {    break;    }    if(format  [Delete]  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  ')'  expected	141	None	add
629	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  if(format  [BUGGY]  FORMAT_NEW)  {  break;  }  [CE]  ')'  expected  [FE]              IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  if(format  [BUGGY]  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW)    {    break;    }    if(format  [BUGGY]  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  ')'  expected	141	None	add
630	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  If(format!=  FORMAT_NEW)  {  break;  }  [CE]  ';'  expected  [FE]                IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  If(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW)    {    break;    }    If(format!=  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  ';'  expected	141	None	add
631	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	1	1	add
632	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	1	1	add
633	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	1	1	add
634	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	1	1	add
635	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	1	None	add
636	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	1	1	add
637	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	1	1	add
638	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	1	1	add
639	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	1	1	add
640	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	1	None	add
641	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_ASCII  [FE]                EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_ASCII	1	None	add
642	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_  [CE]  ')'  expected  [FE]                  EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_	  	non-compiled	[CE]  ')'  expected	1	None	add
643	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY)  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	110	None	replace
644	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	110	None	replace
645	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	193	None	replace
646	[BUG]  [BUGGY]  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
647	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	193	None	replace
648	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null. ",  format);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null. ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null. ",  format);	  throw    new    IllegalArgumentException(   "Format    is    null   ",    format);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)	187	None	replace
649	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  null. ",  format);  [CE]  <identifier>  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  null. ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  is  null. ",  format);	  throw    new    IllegalArgumentException(   "Format    is    null   ",    format);    	non-compiled	[CE]  <identifier>  expected	187	None	replace
650	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  null ",  format);  [CE]  <identifier>  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  null ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  is  null ",  format);	  throw    new    IllegalArgumentException(   "Format    is    null   ",    format);    	non-compiled	[CE]  <identifier>  expected	187	None	replace
651	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null ",  format,  out);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short,OutputStream)  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null ",  format,  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null ",  format,  out);	  throw    new    IllegalArgumentException(   "Format    is    null   ",    format);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short,OutputStream)	187	None	replace
652	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null  for  format: "  +  format);  [CE]  unreachable  statement  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null  for  format: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null  for  format: "  +  format);	  throw    new    IllegalArgumentException(   "Format    is    null   ",    format);    	non-compiled	[CE]  unreachable  statement	187	None	replace
653	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(format, "Format  is  null ");  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(short,String)  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException(format, "Format  is  null ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException(format, "Format  is  null ");	  throw    new    IllegalArgumentException(   "Format    is    null   ",    format);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(short,String)	187	None	replace
654	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    Format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	154	None	replace
655	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    Format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	154	None	replace
656	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format.length()  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format.length()  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format.length()  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    Format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	154	None	replace
657	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    Format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	154	None	replace
658	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  Format  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    Format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  Format	154	None	replace
659	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  a  valid  format. ");  [CE]  unreachable  statement  [FE]            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  a  valid  format. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "BINARY  is  not  a  valid  format. ");	  throw    new    IllegalArgumentException(   "BINARY    is    not    a    valid    format   ");    	non-compiled	[CE]  unreachable  statement	122	None	replace
660	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "BINARY  is  not  a  valid  format ");  [CE]  <identifier>  expected  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "BINARY  is  not  a  valid  format ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "BINARY  is  not  a  valid  format ");	  throw    new    IllegalArgumentException(   "BINARY    is    not    a    valid    format   ");    	non-compiled	[CE]  <identifier>  expected	122	None	replace
661	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  a  valid  format: "  +  format);  [CE]  unreachable  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  a  valid  format: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "BINARY  is  not  a  valid  format: "  +  format);	  throw    new    IllegalArgumentException(   "BINARY    is    not    a    valid    format   ");    	non-compiled	[CE]  unreachable  statement	122	None	replace
662	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  a  valid  format ",  format);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  a  valid  format ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "BINARY  is  not  a  valid  format ",  format);	  throw    new    IllegalArgumentException(   "BINARY    is    not    a    valid    format   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)	122	None	replace
663	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  a  valid  format, ");  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  a  valid  format, ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "BINARY  is  not  a  valid  format, ");	  throw    new    IllegalArgumentException(   "BINARY    is    not    a    valid    format   ");    	non-compiled	[CE]  unreachable  statement	122	None	replace
664	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.length  -  1;  ++i)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  length  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  names.length  -  1;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  names.length  -  1;  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  length	136	None	replace
665	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.length;  ++i)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  length  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  this.names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  this.names.length;  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  length	136	None	replace
666	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  name.length;  ++i)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  name  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  name.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  name.length;  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  name	136	None	replace
667	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.length  -  2;  ++i)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  length  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  names.length  -  2;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  names.length  -  2;  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  length	136	None	replace
668	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(format),  format);  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(format),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamWriter(format),  format);	  cpioEntry.setFormat(new    OutputStreamWriter(format),    format);    	non-compiled	[CE]  ';'  expected	13	None	replace
669	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format),  format,  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format),  format,  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(format),  format,  this.entryFormat);	  cpioEntry.setFormat(new    OutputStreamWriter(format),    format);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
670	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "BINARY  is  not  supported. ");  [CE]  <identifier>  expected  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "BINARY  is  not  supported. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "BINARY  is  not  supported. ");	  throw    new    IllegalArgumentException(   "BINARY    is    not    supported.   ");    	non-compiled	[CE]  <identifier>  expected	123	None	replace
671	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  supported. ");  [CE]  unreachable  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  supported. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  supported. ");	  throw    new    IllegalArgumentException(   "BINARY    is    not    supported.   ");    	non-compiled	[CE]  unreachable  statement	123	None	replace
672	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  supported.  Format: "  +  format);  [CE]  unreachable  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  supported.  Format: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "BINARY  is  not  supported.  Format: "  +  format);	  throw    new    IllegalArgumentException(   "BINARY    is    not    supported.   ");    	non-compiled	[CE]  unreachable  statement	123	None	replace
673	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  supported: ");  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  supported: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "BINARY  is  not  supported: ");	  throw    new    IllegalArgumentException(   "BINARY    is    not    supported.   ");    	non-compiled	[CE]  unreachable  statement	123	None	replace
674	[BUG]  [BUGGY]  out.put(null,  format);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.put(null,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.put(null,  format);	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(null,    format);    }    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
675	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [CE]  ';'  expected  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(null,    format);    }    	non-compiled	[CE]  ';'  expected	158	None	replace
676	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(null,    format);    }    	non-compiled	[CE]  orphaned  default	158	None	replace
677	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(null,    format);    }    	non-compiled	[CE]  orphaned  default	158	None	replace
678	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(null,    format);    }    	non-compiled	[CE]  orphaned  default	158	None	replace
679	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  out.put(null,  format);  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  out.put(null,  format);  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  out.put(null,  format);  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(null,    format);    }    	non-compiled	[CE]  orphaned  default	158	None	replace
680	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	71	None	replace
681	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW_BINARY)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	71	None	replace
682	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
683	[BUG]  [BUGGY]  if(format  ==  FORMAT_BINARY  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_BINARY  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_BINARY  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	167	None	replace
684	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format.length()  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format.length()  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format.length()  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	167	None	replace
685	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(format,  written);  [CE]  no  suitable  method  found  for  get(short,long)  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(format,  written);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.names.get(format,  written);	  OutputStream    out    =(OutputStream)this.names.get(format);    	non-compiled	[CE]  no  suitable  method  found  for  get(short,long)	27	None	replace
686	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(format,  crc);  [CE]  no  suitable  method  found  for  get(short,long)  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(format,  crc);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.names.get(format,  crc);	  OutputStream    out    =(OutputStream)this.names.get(format);    	non-compiled	[CE]  no  suitable  method  found  for  get(short,long)	27	None	replace
687	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(format,  this.entryFormat);  [CE]  no  suitable  method  found  for  get(short,short)  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(format,  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.names.get(format,  this.entryFormat);	  OutputStream    out    =(OutputStream)this.names.get(format);    	non-compiled	[CE]  no  suitable  method  found  for  get(short,short)	27	None	replace
688	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(format,  format);  [CE]  no  suitable  method  found  for  get(short,short)  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(format,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.names.get(format,  format);	  OutputStream    out    =(OutputStream)this.names.get(format);    	non-compiled	[CE]  no  suitable  method  found  for  get(short,short)	27	None	replace
689	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(format,  0);  [CE]  no  suitable  method  found  for  get(short,int)  [FE]                                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(format,  0);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.names.get(format,  0);	  OutputStream    out    =(OutputStream)this.names.get(format);    	non-compiled	[CE]  no  suitable  method  found  for  get(short,int)	27	None	replace
690	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(format,  cpioEntry);  [CE]  no  suitable  method  found  for  get(short,CpioArchiveEntry)  [FE]                                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(format,  cpioEntry);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.names.get(format,  cpioEntry);	  OutputStream    out    =(OutputStream)this.names.get(format);    	non-compiled	[CE]  no  suitable  method  found  for  get(short,CpioArchiveEntry)	27	None	replace
691	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	143	1	add
692	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	143	1	add
693	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	143	1	add
694	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	143	1	add
695	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >>  FORMAT_NEW)  {  break;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >>  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  >>  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	143	None	add
696	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	143	1	add
697	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	143	1	add
698	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	143	1	add
699	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	143	1	add
700	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  [CE]  orphaned  default  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;	  	non-compiled	[CE]  orphaned  default	143	None	add
701	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	143	1	add
702	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]                EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	143	1	add
703	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  break;  }  [CE]  orphaned  default  [FE]                  EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  break;  }	  	non-compiled	[CE]  orphaned  default	143	None	add
704	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	59	None	replace
705	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY)  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	59	None	replace
706	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	59	None	replace
707	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
708	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	59	None	replace
709	[BUG]  [BUGGY]  this.entryFormat  =  FormatUtils.getEntryFormat(format);  [CE]  cannot  find  symbol  FormatUtils  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  FormatUtils.getEntryFormat(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  FormatUtils.getEntryFormat(format);	  this.entryFormat    =    entryFormat;    	non-compiled	[CE]  cannot  find  symbol  FormatUtils	74	None	replace
710	[BUG]  [BUGGY]  this.entryFormat  =  FormatUtils.getBinaryFormat(format);  [CE]  cannot  find  symbol  FormatUtils  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  FormatUtils.getBinaryFormat(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  FormatUtils.getBinaryFormat(format);	  this.entryFormat    =    entryFormat;    	non-compiled	[CE]  cannot  find  symbol  FormatUtils	74	None	replace
711	[BUG]  [BUGGY]  this.entryFormat  =  FormatUtilities.readFully(format);  [CE]  cannot  find  symbol  FormatUtilities  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  FormatUtilities.readFully(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  FormatUtilities.readFully(format);	  this.entryFormat    =    entryFormat;    	non-compiled	[CE]  cannot  find  symbol  FormatUtilities	74	None	replace
712	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap  <  String,Object>();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap  <  String,Object>();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap  <  String,Object>();	  this.entryFormat    =    entryFormat;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	74	None	replace
713	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	160	1	add
714	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	160	1	add
715	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	160	1	add
716	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	160	1	add
717	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format!=  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format!=  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	160	1	add
718	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format!=  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]        IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format!=  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format!=  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	160	1	add
719	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  >=  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format  >=  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	160	1	add
720	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  >=  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]          IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  >=  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format  >=  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	160	1	add
721	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format!=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	160	1	add
722	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]            IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format!=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	160	1	add
723	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  [CE]  orphaned  default  [FE]              IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;	  	non-compiled	[CE]  orphaned  default	160	None	add
724	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  Format  ==  FORMAT_NEW_CRC)  {  break;  }  [CE]  cannot  find  symbol  Format  [FE]                IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  Format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  Format  ==  FORMAT_NEW_CRC)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  Format	160	None	add
725	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  If(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [CE]  ';'  expected  [FE]                  IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  If(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    If(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	non-compiled	[CE]  ';'  expected	160	None	add
726	[BUG]  [BUGGY]  this.entryFormat  =  format  +  2;  [CE]  possible  loss  of  precision  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  +  2;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  +  2;	  this.entryFormat    =    format    +    1;    	non-compiled	[CE]  possible  loss  of  precision	72	None	replace
727	[BUG]  [BUGGY]  this.entryFormat  =  format  /  1;  [CE]  possible  loss  of  precision  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  /  1;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  /  1;	  this.entryFormat    =    format    +    1;    	non-compiled	[CE]  possible  loss  of  precision	72	None	replace
728	[BUG]  [BUGGY]  this.entryFormat  =  format  +  4;  [CE]  possible  loss  of  precision  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  +  4;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  +  4;	  this.entryFormat    =    format    +    1;    	non-compiled	[CE]  possible  loss  of  precision	72	None	replace
729	[BUG]  [BUGGY]  this.entryFormat  =  format  +  1L;  [CE]  possible  loss  of  precision  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  +  1L;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  +  1L;	  this.entryFormat    =    format    +    1;    	non-compiled	[CE]  possible  loss  of  precision	72	None	replace
730	[BUG]  [BUGGY]  this.entryFormat  =  format  +  3;  [CE]  possible  loss  of  precision  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  +  3;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  +  3;	  this.entryFormat    =    format    +    1;    	non-compiled	[CE]  possible  loss  of  precision	72	None	replace
731	[BUG]  [BUGGY]  this.entryFormat  =  format  -  1;  [CE]  possible  loss  of  precision  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  -  1;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  -  1;	  this.entryFormat    =    format    +    1;    	non-compiled	[CE]  possible  loss  of  precision	72	None	replace
732	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	46	None	replace
733	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format.length()  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format.length()  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format.length()  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	46	None	replace
734	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	46	None	replace
735	[BUG]  [BUGGY]  out.flush();  [CE]  unreachable  statement  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.flush();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.flush();	  out.close();    	non-compiled	[CE]  unreachable  statement	128	None	replace
736	[BUG]  [BUGGY]  out.write( "n ");  [CE]  no  suitable  method  found  for  write(String)  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.write( "n ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.write( "n ");	  out.close();    	non-compiled	[CE]  no  suitable  method  found  for  write(String)	128	None	replace
737	[BUG]  [BUGGY]  out.write('_');  [CE]  unreachable  statement  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.write('_');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.write('_');	  out.close();    	non-compiled	[CE]  unreachable  statement	128	None	replace
738	[BUG]  [BUGGY]  out.write('/');  [CE]  unreachable  statement  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.write('/');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.write('/');	  out.close();    	non-compiled	[CE]  unreachable  statement	128	None	replace
739	[BUG]  [BUGGY]  out.defaultReader().close();  [CE]  cannot  find  symbol  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.defaultReader().close();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.defaultReader().close();	  out.close();    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
740	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.getValue();  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.getValue();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)cpioEntry.getValue();	  OutputStream    out    =(OutputStream)cpioEntry.clone();    	non-compiled	[CE]  cannot  find  symbol	170	None	replace
741	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.getKey();  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.getKey();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)cpioEntry.getKey();	  OutputStream    out    =(OutputStream)cpioEntry.clone();    	non-compiled	[CE]  cannot  find  symbol	170	None	replace
742	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.cloneBinary();  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.cloneBinary();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)cpioEntry.cloneBinary();	  OutputStream    out    =(OutputStream)cpioEntry.clone();    	non-compiled	[CE]  cannot  find  symbol	170	None	replace
743	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.getCurrentSegment();  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.getCurrentSegment();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)cpioEntry.getCurrentSegment();	  OutputStream    out    =(OutputStream)cpioEntry.clone();    	non-compiled	[CE]  cannot  find  symbol	170	None	replace
744	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.getCurrentStructure();  [CE]  cannot  find  symbol  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.getCurrentStructure();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)cpioEntry.getCurrentStructure();	  OutputStream    out    =(OutputStream)cpioEntry.clone();    	non-compiled	[CE]  cannot  find  symbol	170	None	replace
745	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.getAscii();  [CE]  cannot  find  symbol  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.getAscii();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)cpioEntry.getAscii();	  OutputStream    out    =(OutputStream)cpioEntry.clone();    	non-compiled	[CE]  cannot  find  symbol	170	None	replace
746	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	68	1	add
747	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	68	1	add
748	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	68	1	add
749	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	68	1	add
750	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format  >>  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	68	None	add
751	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	68	1	add
752	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	68	1	add
753	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  [Delete]  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [CE]  ')'  expected  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  [Delete]  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format  [Delete]  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  ')'  expected	68	None	add
754	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	68	1	add
755	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	68	1	add
756	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  [CE]  orphaned  default  [FE]                EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;	  	non-compiled	[CE]  orphaned  default	68	None	add
757	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  break;  }  [CE]  orphaned  default  [FE]                  EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  break;  }	  	non-compiled	[CE]  orphaned  default	68	None	add
758	[BUG]  [BUGGY]  reason(format  ==  FORMAT_NEW_CRC))  {  break;  }  [CE]  ';'  expected  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  reason(format  ==  FORMAT_NEW_CRC))  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	reason(format  ==  FORMAT_NEW_CRC))  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  ';'  expected	2	None	replace
759	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: ");  [CE]  <identifier>  expected  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: ");	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format:   ");    	non-compiled	[CE]  <identifier>  expected	113	None	replace
760	[BUG]  [BUGGY]  Throwables.warning( "Format  is  not  a  valid  format: ");  [CE]  cannot  find  symbol  Throwables  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.warning( "Format  is  not  a  valid  format: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.warning( "Format  is  not  a  valid  format: ");	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format:   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	113	None	replace
761	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	55	None	replace
762	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
763	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
764	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW)  {  break;  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW)  {  break;	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    ==    FORMAT_NEW)    {    break;    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
765	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    ==    FORMAT_NEW)    {    break;    	compilable	  [FE]  EOFException  	86	1	replace
766	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    ==    FORMAT_NEW)    {    break;    	compilable	  [FE]  EOFException  	86	1	replace
767	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    ==    FORMAT_NEW)    {    break;    	compilable	  [FE]  EOFException  	86	1	replace
768	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    ==    FORMAT_NEW)    {    break;    	compilable	  [FE]  EOFException  	86	1	replace
769	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Binary  format  not  supported.  Format: "  +  format);  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Binary  format  not  supported.  Format: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Binary  format  not  supported.  Format: "  +  format);	  throw    new    IllegalArgumentException(   "Binary    format    not    supported.   ");    	non-compiled	[CE]  unreachable  statement	182	None	replace
770	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Binary  format  not  supported: ");  [CE]  unreachable  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Binary  format  not  supported: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Binary  format  not  supported: ");	  throw    new    IllegalArgumentException(   "Binary    format    not    supported.   ");    	non-compiled	[CE]  unreachable  statement	182	None	replace
771	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Binary  format  not  supported. ");  [CE]  <identifier>  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Binary  format  not  supported. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Binary  format  not  supported. ");	  throw    new    IllegalArgumentException(   "Binary    format    not    supported.   ");    	non-compiled	[CE]  <identifier>  expected	182	None	replace
772	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Binary  format  not  supported: "  +  format);  [CE]  unreachable  statement  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Binary  format  not  supported: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Binary  format  not  supported: "  +  format);	  throw    new    IllegalArgumentException(   "Binary    format    not    supported.   ");    	non-compiled	[CE]  unreachable  statement	182	None	replace
773	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  null! ");  [CE]  <identifier>  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  null! ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  is  null! ");	  throw    new    IllegalArgumentException(   "Format    is    null!   ");    	non-compiled	[CE]  <identifier>  expected	38	None	replace
774	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null! ".);  [CE]  <identifier>  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null! ".);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null! ".);	  throw    new    IllegalArgumentException(   "Format    is    null!   ");    	non-compiled	[CE]  <identifier>  expected	38	None	replace
775	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
776	[BUG]  [BUGGY]  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
777	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW_BINARY)  {  break;  }	  ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
778	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW_ASCII)  {  break;  }	  ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
779	[BUG]  [BUGGY]  ||  format  ==  FORMAT_OLD_ABSTRACT)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_OLD_ABSTRACT)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_OLD_ABSTRACT)  {  break;  }	  ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
780	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CCRC  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_CCRC  [FE]        IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CCRC  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CCRC  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_NEW_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_CCRC	114	None	replace
781	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_RCC  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_RCC  [FE]          IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_RCC  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_RCC  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_NEW_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_RCC	114	None	replace
782	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_NEW_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    	compilable	  [FE]  EOFException  	114	1	replace
783	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [FE]  EOFException  [FE]            IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_NEW_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    	compilable	  [FE]  EOFException  	114	1	replace
784	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_BINARY);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_BINARY);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_BINARY);	  cpioEntry.setFormat(new    InputStreamReader(format),    DEFAULT_VERSION);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
785	[BUG]  [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_VERSION);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_VERSION);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_VERSION);	  cpioEntry.setFormat(new    InputStreamReader(format),    DEFAULT_VERSION);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
786	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_VERSION,  format);  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_VERSION,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_VERSION,  format);	  cpioEntry.setFormat(new    InputStreamReader(format),    DEFAULT_VERSION);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
787	[BUG]  [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_BINARY);  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_BINARY);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_BINARY);	  cpioEntry.setFormat(new    InputStreamReader(format),    DEFAULT_VERSION);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
788	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_ASCII);  [CE]  cannot  find  symbol  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_ASCII);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_ASCII);	  cpioEntry.setFormat(new    InputStreamReader(format),    DEFAULT_VERSION);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
789	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format),  DEFAULT_VERSION);  [CE]  ';'  expected  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format),  DEFAULT_VERSION);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  InputStreamReader(format),  DEFAULT_VERSION);	  cpioEntry.setFormat(new    InputStreamReader(format),    DEFAULT_VERSION);    	non-compiled	[CE]  ';'  expected	23	None	replace
790	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  may  not  be  null. ");  [CE]  <identifier>  expected  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  may  not  be  null. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  may  not  be  null. ");	  Throwables.throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
791	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  not  null. ");  [CE]  <identifier>  expected  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  not  null. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  is  not  null. ");	  Throwables.throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
792	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  must  be  null. ");  [CE]  <identifier>  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  must  be  null. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  must  be  null. ");	  Throwables.throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
793	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  has  not  been  set. ");  [CE]  <identifier>  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  has  not  been  set. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  has  not  been  set. ");	  Throwables.throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
794	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  not  null. ");  [CE]  <identifier>  expected  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  not  null. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  not  null. ");	  Throwables.throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
795	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	63	1	add
796	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	63	1	add
797	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_C)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_C  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_C)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_C)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_C	63	None	add
798	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	63	None	add
799	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	63	1	add
800	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	63	1	add
801	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	63	1	add
802	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	63	1	add
803	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	63	1	add
804	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	63	1	add
805	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	63	1	add
806	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]                EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW_CRC)  {  break;  }	  	compilable	  [FE]  EOFException  	63	1	add
807	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  break;  }  [CE]  orphaned  default  [FE]                  EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  break;  }	  	non-compiled	[CE]  orphaned  default	63	None	add
808	[BUG]  [BUGGY]  OutputStream  out  =  getEntryFormat(format,  written);  [CE]  cannot  find  symbol  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  getEntryFormat(format,  written);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  getEntryFormat(format,  written);	  OutputStream    out    =    getEntryFormat(format);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
809	[BUG]  [BUGGY]  OutputStream  out  =  getEntryFormat(format,  format);  [CE]  cannot  find  symbol  [FE]                                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  getEntryFormat(format,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  getEntryFormat(format,  format);	  OutputStream    out    =    getEntryFormat(format);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
810	[BUG]  [BUGGY]  OutputStream  out  =  getEntryFormat(format,  this.names);  [CE]  cannot  find  symbol  [FE]                                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  getEntryFormat(format,  this.names);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  getEntryFormat(format,  this.names);	  OutputStream    out    =    getEntryFormat(format);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
811	[BUG]  [BUGGY]  OutputStream  out  =  getEntryFormat(format,  cpioEntry);  [CE]  cannot  find  symbol  [FE]                                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  getEntryFormat(format,  cpioEntry);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  getEntryFormat(format,  cpioEntry);	  OutputStream    out    =    getEntryFormat(format);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
812	[BUG]  [BUGGY]  OutputStream  out  =  getEntryFormat(format,  cpioEntry.length);  [CE]  cannot  find  symbol  length  [FE]                                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  getEntryFormat(format,  cpioEntry.length);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  getEntryFormat(format,  cpioEntry.length);	  OutputStream    out    =    getEntryFormat(format);    	non-compiled	[CE]  cannot  find  symbol  length	30	None	replace
813	[BUG]  [BUGGY]  OutputStream  out  =  getEntryFormat(format,  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  getEntryFormat(format,  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  getEntryFormat(format,  this.entryFormat);	  OutputStream    out    =    getEntryFormat(format);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
814	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_ASCII  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_ASCII	161	None	replace
815	[BUG]  [BUGGY]  cpioEntry.setFormat(this.format,  format);  [CE]  cannot  find  symbol  format  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(this.format,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(this.format,  format);	  cpioEntry.setFormat(this.format);    	non-compiled	[CE]  cannot  find  symbol  format	92	None	replace
816	[BUG]  [BUGGY]  cpioEntry.setFormat(entryFormat);  [CE]  unreachable  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(entryFormat);	  cpioEntry.setFormat(this.format);    	non-compiled	[CE]  unreachable  statement	92	None	replace
817	[BUG]  [BUGGY]  cpioEntry.setFormat(this.format,  this.entryFormat);  [CE]  cannot  find  symbol  format  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(this.format,  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(this.format,  this.entryFormat);	  cpioEntry.setFormat(this.format);    	non-compiled	[CE]  cannot  find  symbol  format	92	None	replace
818	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	191	None	replace
819	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	191	None	replace
820	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	191	None	replace
821	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  null! ");  [CE]  not  a  statement  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  null! ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throw  new  IllegalArgumentException( "Format  is  null! ");	  Throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  not  a  statement	186	None	replace
822	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  null ",  format);  [CE]  not  a  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  null ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throw  new  IllegalArgumentException( "Format  is  null ",  format);	  Throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  not  a  statement	186	None	replace
823	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  null.  Format: "  +  format);  [CE]  not  a  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  null.  Format: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throw  new  IllegalArgumentException( "Format  is  null.  Format: "  +  format);	  Throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  not  a  statement	186	None	replace
824	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  null, ");  [CE]  not  a  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  null, ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throw  new  IllegalArgumentException( "Format  is  null, ");	  Throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  not  a  statement	186	None	replace
825	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  null.  Format  must  not  be  null. ");  [CE]  not  a  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  null.  Format  must  not  be  null. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throw  new  IllegalArgumentException( "Format  is  null.  Format  must  not  be  null. ");	  Throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  not  a  statement	186	None	replace
826	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BRC)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_OLD_BRC  [FE]          IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BRC)  {  break;  }	  if(format    ==    FORMAT_NEW_BINARY    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_OLD_BRC	190	None	replace
827	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	207	None	replace
828	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	207	None	replace
829	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	207	None	replace
830	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	207	None	replace
831	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ABSTRACT)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_ABSTRACT  [FE]          IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ABSTRACT)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ABSTRACT)  {  break;  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_ABSTRACT	115	None	replace
832	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BRC)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BRC  [FE]            IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BRC)  {  break;  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BRC	115	None	replace
833	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  string ");  [CE]  unreachable  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  string ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  not  followed  by  a  string ");	  throw    new    IllegalArgumentException(   "):    format;    	non-compiled	[CE]  unreachable  statement	120	None	replace
834	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	212	None	replace
835	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	139	1	add
836	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	139	1	add
837	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	139	1	add
838	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	139	1	add
839	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	139	1	add
840	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]        IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	139	1	add
841	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >>  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >>  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >>  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	139	None	add
842	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  [Delete]  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  ')'  expected  [FE]            IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  [Delete]  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  [Delete]  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  ')'  expected	139	None	add
843	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	139	1	add
844	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]              IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	139	1	add
845	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  [CE]  orphaned  default  [FE]                IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;	  	non-compiled	[CE]  orphaned  default	139	None	add
846	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_N  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_N  [FE]                  IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_N  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_N  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_N	139	None	add
847	[BUG]  [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(out);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  OutputStreamWriter(out);	  this.entryFormat    =    new    OutputStreamWriter();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
848	[BUG]  [BUGGY]  this.entryFormat  =  new  OutputStreamReader(format);  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  OutputStreamReader(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  OutputStreamReader(format);	  this.entryFormat    =    new    OutputStreamWriter();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
849	[BUG]  [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(out,  format);  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(out,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  OutputStreamWriter(out,  format);	  this.entryFormat    =    new    OutputStreamWriter();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
850	[BUG]  [BUGGY]  this.entryFormat  =  new  OutputStreamReader();  [CE]  cannot  find  symbol  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  OutputStreamReader();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  OutputStreamReader();	  this.entryFormat    =    new    OutputStreamWriter();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
851	[BUG]  [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(this.names);  [CE]  cannot  find  symbol  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(this.names);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  OutputStreamWriter(this.names);	  this.entryFormat    =    new    OutputStreamWriter();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
852	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	194	None	replace
853	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	194	None	replace
854	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [CE]  not  a  statement  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  not  a  statement	194	None	replace
855	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
856	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	194	None	replace
857	[BUG]  [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(format,  out);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(format,  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  OutputStreamWriter(format,  out);	  this.entryFormat    =    new    OutputStreamWriter(format);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
858	[BUG]  [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(format,  format);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(format,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  OutputStreamWriter(format,  format);	  this.entryFormat    =    new    OutputStreamWriter(format);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
859	[BUG]  [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(format,  SHORT_DESCRIPTOR);  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(format,  SHORT_DESCRIPTOR);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  OutputStreamWriter(format,  SHORT_DESCRIPTOR);	  this.entryFormat    =    new    OutputStreamWriter(format);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
860	[BUG]  [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(format,  DEFAULT_VERSION);  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(format,  DEFAULT_VERSION);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  OutputStreamWriter(format,  DEFAULT_VERSION);	  this.entryFormat    =    new    OutputStreamWriter(format);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
861	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(this.entryFormat),  format);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(this.entryFormat),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(this.entryFormat),  format);	  cpioEntry.setFormat(new    OutputStreamWriter(format),    this.entryFormat);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
862	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(format),  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(format),  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamWriter(format),  this.entryFormat);	  cpioEntry.setFormat(new    OutputStreamWriter(format),    this.entryFormat);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
863	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(format),  this.entryFormat);  [CE]  <identifier>  expected  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(format),  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamWriter(format),  this.entryFormat);	  cpioEntry.setFormat(new    OutputStreamWriter(format),    this.entryFormat);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
864	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(this.format),  format);  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(this.format),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(this.format),  format);	  cpioEntry.setFormat(new    OutputStreamWriter(format),    this.entryFormat);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
865	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.entryFormat.clone();  out.flush();  [CE]  short  cannot  be  dereferenced  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.entryFormat.clone();  out.flush();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.entryFormat.clone();  out.flush();	  OutputStream    out    =(OutputStream)this.entryFormat.clone();    out.close();    	non-compiled	[CE]  short  cannot  be  dereferenced	29	None	replace
866	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.entryFormat.clone();  out.write(format);  [CE]  short  cannot  be  dereferenced  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.entryFormat.clone();  out.write(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.entryFormat.clone();  out.write(format);	  OutputStream    out    =(OutputStream)this.entryFormat.clone();    out.close();    	non-compiled	[CE]  short  cannot  be  dereferenced	29	None	replace
867	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.entryFormat.clone();  this.out.close();  [CE]  short  cannot  be  dereferenced  [FE]                                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.entryFormat.clone();  this.out.close();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.entryFormat.clone();  this.out.close();	  OutputStream    out    =(OutputStream)this.entryFormat.clone();    out.close();    	non-compiled	[CE]  short  cannot  be  dereferenced	29	None	replace
868	[BUG]  [BUGGY]  out  =(OutputStream)this.entryFormat.clone();  out.close();  [CE]  cannot  assign  a  value  to  final  variable  out  [FE]                                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out  =(OutputStream)this.entryFormat.clone();  out.close();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out  =(OutputStream)this.entryFormat.clone();  out.close();	  OutputStream    out    =(OutputStream)this.entryFormat.clone();    out.close();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  out	29	None	replace
869	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.format.clone();  out.close();  [CE]  cannot  find  symbol  format  [FE]                                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.format.clone();  out.close();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.format.clone();  out.close();	  OutputStream    out    =(OutputStream)this.entryFormat.clone();    out.close();    	non-compiled	[CE]  cannot  find  symbol  format	29	None	replace
870	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	43	None	replace
871	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	43	None	replace
872	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	43	None	replace
873	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put  [CE]  not  a  statement  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	43	None	replace
874	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  not  a  valid  format, ");  [CE]  <identifier>  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  not  a  valid  format, ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  is  not  a  valid  format, ");	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format,   ");    	non-compiled	[CE]  <identifier>  expected	95	None	replace
875	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,   "  +  format);  [CE]  unreachable  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,   "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,   "  +  format);	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format,   ");    	non-compiled	[CE]  unreachable  statement	95	None	replace
876	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,  cannot  be  set. ");  [CE]  unreachable  statement  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,  cannot  be  set. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,  cannot  be  set. ");	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format,   ");    	non-compiled	[CE]  unreachable  statement	95	None	replace
877	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap(format);  [CE]  incompatible  types  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap(format);	  this.entryFormat    =    new    HashMap();    	non-compiled	[CE]  incompatible  types	73	None	replace
878	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap(),  format);  [CE]  ';'  expected  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap(),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap(),  format);	  this.entryFormat    =    new    HashMap();    	non-compiled	[CE]  ';'  expected	73	None	replace
879	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap(),  format;  [CE]  ';'  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap(),  format;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap(),  format;	  this.entryFormat    =    new    HashMap();    	non-compiled	[CE]  ';'  expected	73	None	replace
880	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap(numbers);  [CE]  cannot  find  symbol  numbers  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap(numbers);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap(numbers);	  this.entryFormat    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol  numbers	73	None	replace
881	[BUG]  [BUGGY]  this.entryFormat  =  new  LinkedHashMap();  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  LinkedHashMap();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  LinkedHashMap();	  this.entryFormat    =    new    HashMap();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
882	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap(0);  [CE]  incompatible  types  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap(0);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap(0);	  this.entryFormat    =    new    HashMap();    	non-compiled	[CE]  incompatible  types	73	None	replace
883	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format);  [CE]  <identifier>  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format);	  throw    new    IllegalArgumentException(   "Format    does    not    exist:    format    '   "    +    format);    	non-compiled	[CE]  <identifier>  expected	199	None	replace
884	[BUG]  [BUGGY]  new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format);  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format);	  throw    new    IllegalArgumentException(   "Format    does    not    exist:    format    '   "    +    format);    	non-compiled	[CE]  unreachable  statement	199	None	replace
885	[BUG]  [BUGGY]  Throwables.log( "Format  does  not  exist:  format  ' "  +  format);  [CE]  cannot  find  symbol  Throwables  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.log( "Format  does  not  exist:  format  ' "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.log( "Format  does  not  exist:  format  ' "  +  format);	  throw    new    IllegalArgumentException(   "Format    does    not    exist:    format    '   "    +    format);    	non-compiled	[CE]  cannot  find  symbol  Throwables	199	None	replace
886	[BUG]  [BUGGY]  Throwables.warning( "Format  does  not  exist:  format  ' "  +  format);  [CE]  cannot  find  symbol  Throwables  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.warning( "Format  does  not  exist:  format  ' "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.warning( "Format  does  not  exist:  format  ' "  +  format);	  throw    new    IllegalArgumentException(   "Format    does    not    exist:    format    '   "    +    format);    	non-compiled	[CE]  cannot  find  symbol  Throwables	199	None	replace
887	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist:  Format  ' "  +  format);  [CE]  unreachable  statement  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist:  Format  ' "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  does  not  exist:  Format  ' "  +  format);	  throw    new    IllegalArgumentException(   "Format    does    not    exist:    format    '   "    +    format);    	non-compiled	[CE]  unreachable  statement	199	None	replace
888	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	69	1	replace
889	[BUG]  [BUGGY]  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	69	1	replace
890	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  break;  cpioEntry.setFormat(format);  break;  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format);  break;  cpioEntry.setFormat(format);  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);    break;    cpioEntry.setFormat(format);  break;	  	non-compiled	[CE]  unreachable  statement	172	None	add
891	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  break;  CpioEntry  cpioEntry.setFormat(format);  break;  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format);  break;  CpioEntry  cpioEntry.setFormat(format);  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);    break;    CpioEntry  cpioEntry.setFormat(format);  break;	  	non-compiled	[CE]  ';'  expected	172	None	add
892	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  break;  cpioEntry.setFormat(format);  [CE]  unreachable  statement  [FE]        NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format);  break;  cpioEntry.setFormat(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);    break;    cpioEntry.setFormat(format);	  	non-compiled	[CE]  unreachable  statement	172	None	add
893	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  break;  CpioEntry  cpioEntry  =  getCpioEntry();  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format);  break;  CpioEntry  cpioEntry  =  getCpioEntry();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);    break;    CpioEntry  cpioEntry  =  getCpioEntry();	  	non-compiled	[CE]  cannot  find  symbol	172	None	add
894	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  break;  CpioEntry  cpioEntry  =  getCpioEntry();  break;  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format);  break;  CpioEntry  cpioEntry  =  getCpioEntry();  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);    break;    CpioEntry  cpioEntry  =  getCpioEntry();  break;	  	non-compiled	[CE]  cannot  find  symbol	172	None	add
895	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  break;  CpioEntry  cpioEntry  =  getCpioEntry(format);  break;  [CE]  cannot  find  symbol  [FE]              NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format);  break;  CpioEntry  cpioEntry  =  getCpioEntry(format);  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);    break;    CpioEntry  cpioEntry  =  getCpioEntry(format);  break;	  	non-compiled	[CE]  cannot  find  symbol	172	None	add
896	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  null! ");  [CE]  unreachable  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  null! ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  null! ");	  throw    new    IllegalArgumentException(   "Format    is    not    null.   ");    	non-compiled	[CE]  unreachable  statement	37	None	replace
897	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  null ",  format);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  null ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  null ",  format);	  throw    new    IllegalArgumentException(   "Format    is    not    null.   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)	37	None	replace
898	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  null  format. ");  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  null  format. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  null  format. ");	  throw    new    IllegalArgumentException(   "Format    is    not    null.   ");    	non-compiled	[CE]  unreachable  statement	37	None	replace
899	[BUG]  [BUGGY]  OutputStream  out  =  cpioEntry.getOutputStream();  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  cpioEntry.getOutputStream();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  cpioEntry.getOutputStream();	  cpioEntry.setFormat(format);    out.close();    	non-compiled	[CE]  cannot  find  symbol	174	None	replace
900	[BUG]  [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(format),  out);  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(format),  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  InputStreamReader(format),  out);	  CpioEntry.setFormat(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
901	[BUG]  [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(format),  cpioOutputStream);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(format),  cpioOutputStream);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  InputStreamReader(format),  cpioOutputStream);	  CpioEntry.setFormat(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
902	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Not  a  valid  format: "  +  format);  [CE]  unreachable  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Not  a  valid  format: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Not  a  valid  format: "  +  format);	  throw    new    IllegalArgumentException(   "Not    a    valid    format   ");    	non-compiled	[CE]  unreachable  statement	125	None	replace
903	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Not  a  valid  format. ");  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Not  a  valid  format. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Not  a  valid  format. ");	  throw    new    IllegalArgumentException(   "Not    a    valid    format   ");    	non-compiled	[CE]  unreachable  statement	125	None	replace
904	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  not  a  valid  format ");  [CE]  unreachable  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  not  a  valid  format ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  not  a  valid  format ");	  throw    new    IllegalArgumentException(   "Not    a    valid    format   ");    	non-compiled	[CE]  unreachable  statement	125	None	replace
905	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Not  a  valid  format ",  format);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Not  a  valid  format ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Not  a  valid  format ",  format);	  throw    new    IllegalArgumentException(   "Not    a    valid    format   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)	125	None	replace
906	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	78	1	add
907	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	78	1	add
908	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	78	1	add
909	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	78	1	add
910	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	78	1	add
911	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	78	1	add
912	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_  [CE]  ')'  expected  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_	  	non-compiled	[CE]  ')'  expected	78	None	add
913	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT  [CE]  ')'  expected  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT	  	non-compiled	[CE]  ')'  expected	78	None	add
914	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_  [CE]  ')'  expected  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_	  	non-compiled	[CE]  ')'  expected	78	None	add
915	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  [CE]  orphaned  default  [FE]                EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {	  	non-compiled	[CE]  orphaned  default	78	None	add
916	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                  EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	78	1	add
917	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]                  EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	78	1	add
918	[BUG]  [BUGGY]  out.put(format,  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.put(format,  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.put(format,  this.entryFormat);	  out.put(format,    format);    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
919	[BUG]  [BUGGY]  out.put(format,  entryFormat);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.put(format,  entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.put(format,  entryFormat);	  out.put(format,    format);    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
920	[BUG]  [BUGGY]  out.put(format,  DEFAULT_FORMAT_BINARY);  [CE]  cannot  find  symbol  DEFAULT_FORMAT_BINARY  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.put(format,  DEFAULT_FORMAT_BINARY);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.put(format,  DEFAULT_FORMAT_BINARY);	  out.put(format,    format);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_FORMAT_BINARY	147	None	replace
921	[BUG]  [BUGGY]  out.put(format,  DEFAULT_BINARY);  [CE]  cannot  find  symbol  DEFAULT_BINARY  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.put(format,  DEFAULT_BINARY);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.put(format,  DEFAULT_BINARY);	  out.put(format,    format);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_BINARY	147	None	replace
922	[BUG]  [BUGGY]  out.put(format,  format));  [CE]  ';'  expected  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.put(format,  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.put(format,  format));	  out.put(format,    format);    	non-compiled	[CE]  ';'  expected	147	None	replace
923	[BUG]  [BUGGY]  out.put(format,  BINARY);  [CE]  cannot  find  symbol  BINARY  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.put(format,  BINARY);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.put(format,  BINARY);	  out.put(format,    format);    	non-compiled	[CE]  cannot  find  symbol  BINARY	147	None	replace
924	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.cpioEntry.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.cpioEntry.clone();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.cpioEntry.clone();	  OutputStream    out    =(OutputStream)this.entryFormat.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	24	None	replace
925	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.format.clone();  [CE]  cannot  find  symbol  format  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.format.clone();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.format.clone();	  OutputStream    out    =(OutputStream)this.entryFormat.clone();    	non-compiled	[CE]  cannot  find  symbol  format	24	None	replace
926	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.entryFormat,  format.clone();  [CE]  ';'  expected  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.entryFormat,  format.clone();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.entryFormat,  format.clone();	  OutputStream    out    =(OutputStream)this.entryFormat.clone();    	non-compiled	[CE]  ';'  expected	24	None	replace
927	[BUG]  [BUGGY]  OutputStream  out  =(outputStream)this.entryFormat.clone();  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(outputStream)this.entryFormat.clone();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(outputStream)this.entryFormat.clone();	  OutputStream    out    =(OutputStream)this.entryFormat.clone();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
928	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.info.entryFormat.clone();  [CE]  cannot  find  symbol  info  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.info.entryFormat.clone();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.info.entryFormat.clone();	  OutputStream    out    =(OutputStream)this.entryFormat.clone();    	non-compiled	[CE]  cannot  find  symbol  info	24	None	replace
929	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.crc.clone();  [CE]  long  cannot  be  dereferenced  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.crc.clone();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.crc.clone();	  OutputStream    out    =(OutputStream)this.entryFormat.clone();    	non-compiled	[CE]  long  cannot  be  dereferenced	24	None	replace
930	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value. ");  [CE]  unreachable  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value. ");	  throw    new    IllegalArgumentException(   "Format    not    followed    by    a    string    value   ");    	non-compiled	[CE]  unreachable  statement	124	None	replace
931	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value ",  format);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value ",  format);	  throw    new    IllegalArgumentException(   "Format    not    followed    by    a    string    value   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)	124	None	replace
932	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value: "  +  format);  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value: "  +  format);	  throw    new    IllegalArgumentException(   "Format    not    followed    by    a    string    value   ");    	non-compiled	[CE]  unreachable  statement	124	None	replace
933	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value ");  [CE]  <identifier>  expected  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value ");	  throw    new    IllegalArgumentException(   "Format    not    followed    by    a    string    value   ");    	non-compiled	[CE]  <identifier>  expected	124	None	replace
934	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value: ");  [CE]  unreachable  statement  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value: ");	  throw    new    IllegalArgumentException(   "Format    not    followed    by    a    string    value   ");    	non-compiled	[CE]  unreachable  statement	124	None	replace
935	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  not  a  valid  format ");  [CE]  <identifier>  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  not  a  valid  format ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  is  not  a  valid  format ");	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format   ");    	non-compiled	[CE]  <identifier>  expected	97	None	replace
936	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format ",  format);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  valid  format ",  format);	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)	97	None	replace
937	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap  <  Short,  Short>(format);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap  <  Short,  Short>(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap  <  Short,  Short>(format);	  this.entryFormat    =    new    HashMap    <    Short,    Short>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	165	None	replace
938	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap  <  short,  Short>();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap  <  short,  Short>();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap  <  short,  Short>();	  this.entryFormat    =    new    HashMap    <    Short,    Short>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	165	None	replace
939	[BUG]  [BUGGY]  this.entryFormat  =  new  LinkedHashMap  <  Short,  Short>();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  LinkedHashMap  <  Short,  Short>();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  LinkedHashMap  <  Short,  Short>();	  this.entryFormat    =    new    HashMap    <    Short,    Short>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	165	None	replace
940	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap  <  Short,  Short>(),  format;  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap  <  Short,  Short>(),  format;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap  <  Short,  Short>(),  format;	  this.entryFormat    =    new    HashMap    <    Short,    Short>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	165	None	replace
941	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap  <  Short,  Short>(1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap  <  Short,  Short>(1);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap  <  Short,  Short>(1);	  this.entryFormat    =    new    HashMap    <    Short,    Short>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	165	None	replace
942	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap  <  Short,  Short>(0);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap  <  Short,  Short>(0);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap  <  Short,  Short>(0);	  this.entryFormat    =    new    HashMap    <    Short,    Short>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	165	None	replace
943	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  out);  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(format,  out);	  CpioEntry    cpioEntry    =    new    CpioEntry(format);    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
944	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  crc);  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  crc);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(format,  crc);	  CpioEntry    cpioEntry    =    new    CpioEntry(format);    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
945	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  written);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  written);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(format,  written);	  CpioEntry    cpioEntry    =    new    CpioEntry(format);    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
946	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  true);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  true);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(format,  true);	  CpioEntry    cpioEntry    =    new    CpioEntry(format);    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
947	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(format,  this.entryFormat);	  CpioEntry    cpioEntry    =    new    CpioEntry(format);    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
948	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
949	[BUG]  [BUGGY]  if(format  ==  FORMAT_BINARY  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_BINARY  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_BINARY  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	137	None	replace
950	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	163	2	replace
951	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	163	2	replace
952	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    	compilable	  [FE]  EOFException  	163	1	replace
953	[BUG]  [BUGGY]  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [FE]  EOFException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    	compilable	  [FE]  EOFException  	163	1	replace
954	[BUG]  [BUGGY]  If(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [CE]  ';'  expected  [FE]        IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  If(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	If(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    	non-compiled	[CE]  ';'  expected	163	None	replace
955	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  out,  format);  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  out,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  out,  format);	  cpioEntry.setFormat(new    InputStreamReader(format),    out);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
956	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format    >>    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	7	2	replace
957	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  IllegalArgumentException  [FE]              IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format    >>    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	7	2	replace
958	[BUG]  [BUGGY]  reason(format  ==  FORMAT_OLD_BINARY))  {  break;  }  [CE]  ';'  expected  [FE]                IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  reason(format  ==  FORMAT_OLD_BINARY))  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	reason(format  ==  FORMAT_OLD_BINARY))  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format    >>    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
959	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_CRC)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	57	None	replace
960	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put  [CE]  not  a  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put	  if(format    ==    FORMAT_NEW_CRC)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	57	None	replace
961	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(	  if(format    ==    FORMAT_NEW_CRC)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
962	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put  [CE]  not  a  statement  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put	  if(format    ==    FORMAT_NEW_CRC)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	57	None	replace
963	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_NEW_CRC)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	57	None	replace
964	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out  [CE]  not  a  statement  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out	  if(format    ==    FORMAT_NEW_CRC)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	57	None	replace
965	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format  ==  null)  {  break;  }  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format  ==  null)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format  ==  null)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    If(format    ==    FORMAT_NEW)    {    break;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	85	None	replace
966	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  throw  new  IllegalArgumentException( " ");  }	  if(format    ==    FORMAT_NEW)    {    break;    }    If(format    ==    FORMAT_NEW)    {    break;    }    	non-compiled	[CE]  unreachable  statement	85	None	replace
967	[BUG]  [BUGGY]  cpioEntry.setFormat(format,  format  +  1);  [CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format,  format  +  1);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format,  format  +  1);	  cpioEntry.setFormat(format    +    1);    	non-compiled	[CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;	90	None	replace
968	[BUG]  [BUGGY]  cpioEntry.setFormat(format,  out  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format,  out  +  1);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format,  out  +  1);	  cpioEntry.setFormat(format    +    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	90	None	replace
969	[BUG]  [BUGGY]  cpioEntry.setFormat(format  +  1,  format);  [CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format  +  1,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format  +  1,  format);	  cpioEntry.setFormat(format    +    1);    	non-compiled	[CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;	90	None	replace
970	[BUG]  [BUGGY]  cpioEntry.setFormat(format  +  1,  format,  out);  [CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format  +  1,  format,  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format  +  1,  format,  out);	  cpioEntry.setFormat(format    +    1);    	non-compiled	[CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;	90	None	replace
971	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	134	None	replace
972	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	134	None	replace
973	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	134	None	replace
974	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	134	None	replace
975	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  length  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  length	134	None	replace
976	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(format),  DEFAULT_VERSION);  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(format),  DEFAULT_VERSION);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamWriter(format),  DEFAULT_VERSION);	  CpioEntry.setFormat(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
977	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(format),  cpioOutputStream);  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(format),  cpioOutputStream);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamWriter(format),  cpioOutputStream);	  CpioEntry.setFormat(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
978	[BUG]  [BUGGY]  reason(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC))  {  break;  }  [CE]  ';'  expected  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  reason(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC))  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	reason(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC))  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    ==    FORMAT_NEW)    {    break;    }    	non-compiled	[CE]  ';'  expected	79	None	replace
979	[BUG]  [BUGGY]  cpioEntry.setFormat(new  Integer(format));  [CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;  [FE]            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  Integer(format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  Integer(format));	  cpioEntry.setFormat(this.entryFormat);    	non-compiled	[CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;	88	None	replace
980	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	184	None	replace
981	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	184	None	replace
982	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	184	None	replace
983	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	67	None	replace
984	[BUG]  [BUGGY]  if(format  ==  FORMAT_CRC  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_CRC  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_CRC  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_CRC  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_CRC	67	None	replace
985	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CCRC)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_CCRC  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CCRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CCRC)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_CCRC	67	None	replace
986	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null: "  +  format);  [CE]  unreachable  statement  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null: "  +  format);	  throw    new    IllegalArgumentException(   "Format    is    null:   ");    	non-compiled	[CE]  unreachable  statement	150	None	replace
987	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  null: ");  [CE]  <identifier>  expected  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  is  null: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  is  null: ");	  throw    new    IllegalArgumentException(   "Format    is    null:   ");    	non-compiled	[CE]  <identifier>  expected	150	None	replace
988	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null: ",  format);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null: ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null: ",  format);	  throw    new    IllegalArgumentException(   "Format    is    null:   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)	150	None	replace
989	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format,  out));  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format,  out));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(format,  out));	  cpioEntry.setFormat(new    OutputStreamReader(out,    format));    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
990	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  out));  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  out));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  out));	  cpioEntry.setFormat(new    OutputStreamReader(out,    format));    	non-compiled	[CE]  ';'  expected	217	None	replace
991	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamReader(format,  format);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamReader(format,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamReader(format,  format);	  cpioEntry.setFormat(new    OutputStreamReader(out,    format));    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
992	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(format,  out));  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(format,  out));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamReader(format,  out));	  cpioEntry.setFormat(new    OutputStreamReader(out,    format));    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
993	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(out,  format),  crc);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(out,  format),  crc);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(out,  format),  crc);	  cpioEntry.setFormat(new    OutputStreamReader(out,    format));    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
994	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  [CE]  ';'  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(null,    format);    }    	non-compiled	[CE]  ';'  expected	149	None	replace
995	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(null,    format);    }    	non-compiled	[CE]  orphaned  default	149	None	replace
996	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(null,    format);    }    	non-compiled	[CE]  orphaned  default	149	None	replace
997	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(null,    format);    }    	non-compiled	[CE]  orphaned  default	149	None	replace
998	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  }  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(null,    format);    }    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
999	[BUG]  [BUGGY]  cpioEntry.setFormat(format,  out,  crc);  [CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format,  out,  crc);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format,  out,  crc);	  cpioEntry.setFormat(format,    out);    	non-compiled	[CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;	91	None	replace
1000	[BUG]  [BUGGY]  cpioEntry.setFormat(out,  format);  [CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(out,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(out,  format);	  cpioEntry.setFormat(format,    out);    	non-compiled	[CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;	91	None	replace
1001	[BUG]  [BUGGY]  cpioEntry.setFormat(format,  format,  out);  [CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format,  format,  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format,  format,  out);	  cpioEntry.setFormat(format,    out);    	non-compiled	[CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;	91	None	replace
1002	[BUG]  [BUGGY]  cpioEntry.setFormat(format,  out,  written);  [CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format,  out,  written);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format,  out,  written);	  cpioEntry.setFormat(format,    out);    	non-compiled	[CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;	91	None	replace
1003	[BUG]  [BUGGY]  cpioEntry.setFormat(format,  format,  crc);  [CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format,  format,  crc);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format,  format,  crc);	  cpioEntry.setFormat(format,    out);    	non-compiled	[CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;	91	None	replace
1004	[BUG]  [BUGGY]  cpioEntry.setFormat(format,  out,  format);  [CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format,  out,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format,  out,  format);	  cpioEntry.setFormat(format,    out);    	non-compiled	[CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;	91	None	replace
1005	[BUG]  [BUGGY]  cpioEntry.setFormat(format,  crc,  out);  [CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format,  crc,  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format,  crc,  out);	  cpioEntry.setFormat(format,    out);    	non-compiled	[CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;	91	None	replace
1006	[BUG]  [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(format,  written);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(format,  written);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  OutputStreamWriter(format,  written);	  this.entryFormat    =    new    OutputStreamWriter(format);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
1007	[BUG]  [BUGGY]  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
1008	[BUG]  [BUGGY]  if(format!=  FORMAT_OLD)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_OLD)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_OLD)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	145	None	replace
1009	[BUG]  [BUGGY]  cpioEntry.setFormat(format,  written,  out);  [CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format,  written,  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format,  written,  out);	  cpioEntry.setFormat(format,    out);    	non-compiled	[CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;	91	None	replace
1010	[BUG]  [BUGGY]  cpioEntry.setFormat(format,  out,  this.entryFormat);  [CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format,  out,  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format,  out,  this.entryFormat);	  cpioEntry.setFormat(format,    out);    	non-compiled	[CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;	91	None	replace
1011	[BUG]  [BUGGY]  cpioEntry.setPath(format);  break;  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setPath(format);  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setPath(format);  break;	  cpioEntry.setFormat(format);    break;    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
1012	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.length();  i++)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  names.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  names.length();  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
1013	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  this.entryFormat.getCpioEntry();  [CE]  cannot  find  symbol  [FE]            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  this.entryFormat.getCpioEntry();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  this.entryFormat.getCpioEntry();	  cpioEntry.setFormat(this.entryFormat);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
1014	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Format  cannot  be  null. ");  [CE]  unreachable  statement  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalStateException( "Format  cannot  be  null. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalStateException( "Format  cannot  be  null. ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  unreachable  statement	112	None	replace
1015	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Format  not  followed  by  a  string  value ");  [CE]  unreachable  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalStateException( "Format  not  followed  by  a  string  value ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalStateException( "Format  not  followed  by  a  string  value ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  unreachable  statement	112	None	replace
1016	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Format  not  followed  by  a  value ");  [CE]  unreachable  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalStateException( "Format  not  followed  by  a  value ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalStateException( "Format  not  followed  by  a  value ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  unreachable  statement	112	None	replace
1017	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put  [CE]  not  a  statement  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put	  if(format    ==    FORMAT_NEW_CRC)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	44	None	replace
1018	[BUG]  [BUGGY]  if(format  ==  null)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  null)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  null)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_CRC)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	44	None	replace
1019	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	176	None	replace
1020	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	176	None	replace
1021	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  not  null. ");  [CE]  unreachable  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  not  null. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  not  null. ");	  throw    new    IllegalArgumentException(   "Format    is    not    null.   ");    	non-compiled	[CE]  unreachable  statement	37	None	replace
1022	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	135	None	replace
1023	[BUG]  [BUGGY]  &&  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  &&  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	&&  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
1024	[BUG]  [BUGGY]  &&  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  &&  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	&&  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
1025	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	5	None	add
1026	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
1027	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
1028	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_ASCII  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_ASCII	5	None	add
1029	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
1030	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
1031	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_BINARY  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_BINARY	5	None	add
1032	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_INARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_INARY  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_INARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_INARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_INARY	5	None	add
1033	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_ASCII)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_ASCII  [FE]                EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_ASCII)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_ASCII)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_ASCII	5	None	add
1034	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  Format.BINARY);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  Format.BINARY);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  Format.BINARY);  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	102	None	replace
1035	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ')'  expected	102	None	replace
1036	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  Format.BINARY);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  Format.BINARY);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  Format.BINARY);  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	102	None	replace
1037	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.  [CE]  <identifier>  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.	  if(format    ==    FORMAT_NEW_CRC)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
1038	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(out,  format));  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(out,  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(out,  format));	  cpioEntry.setFormat(new    OutputStreamReader(out,    format));    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
1039	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  out));  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  out));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(format,  out));	  cpioEntry.setFormat(new    OutputStreamReader(out,    format));    	non-compiled	[CE]  ';'  expected	217	None	replace
1040	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format,  out));  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format,  out));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format,  out));	  cpioEntry.setFormat(new    OutputStreamReader(out,    format));    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
1041	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  Format  >=  FORMAT_NEW)  {  break;  }  [CE]  cannot  find  symbol  Format  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  Format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  Format  >=  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  Format	195	None	add
1042	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  namespaces.size();  ++i)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  namespaces  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  namespaces.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  namespaces.size();  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  namespaces	156	None	replace
1043	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  files.size();  ++i)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  files  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  files.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  files.size();  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  files	156	None	replace
1044	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	104	None	replace
1045	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	104	None	replace
1046	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	138	None	replace
1047	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format  +  ')'  [CE]  ')'  expected  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format  +  ')'  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format  +  ')'	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	138	None	replace
1048	[BUG]  [BUGGY]  out.put(format,  DEFAULT_FORMAT);  [CE]  cannot  find  symbol  DEFAULT_FORMAT  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.put(format,  DEFAULT_FORMAT);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.put(format,  DEFAULT_FORMAT);	  out.put(format,    format);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_FORMAT	147	None	replace
1049	[BUG]  [BUGGY]  out.put(format,  format)+  1;  [CE]  not  a  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.put(format,  format)+  1;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.put(format,  format)+  1;	  out.put(format,    format);    	non-compiled	[CE]  not  a  statement	147	None	replace
1050	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  support  valid  format: "  +  format);  [CE]  unreachable  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  support  valid  format: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  does  not  support  valid  format: "  +  format);	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format:   "    +    format);    	non-compiled	[CE]  unreachable  statement	96	None	replace
1051	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	109	None	replace
1052	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	109	None	replace
1053	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	109	None	replace
1054	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put  [CE]  not  a  statement  [FE]                                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	109	None	replace
1055	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(  [CE]  illegal  start  of  expression  [FE]                                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1056	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i  [CE]  ')'  expected  [FE]                                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  ')'  expected	109	None	replace
1057	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  >=  FORMAT_NEW)  {  break;  }	  if(format!=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	142	1	replace
1058	[BUG]  [BUGGY]  if(format  >=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  >=  FORMAT_NEW)  {  break;  }	  if(format!=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	142	1	replace
1059	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_OLD  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD)  {  break;  }	  if(format!=    FORMAT_NEW)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_OLD	142	None	replace
1060	[BUG]  [BUGGY]  if(format  >>  FORMAT_NEW)  {  break;  }  [CE]  incompatible  types  [FE]        IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >>  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  >>  FORMAT_NEW)  {  break;  }	  if(format!=    FORMAT_NEW)    {    break;    }    	non-compiled	[CE]  incompatible  types	142	None	replace
1061	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format.toString());  [CE]  short  cannot  be  dereferenced  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format.toString());  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format.toString());	  throw    new    IllegalArgumentException(   "Unknown    format    format    '   "    +    format);    	non-compiled	[CE]  short  cannot  be  dereferenced	198	None	replace
1062	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	110	None	replace
1063	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	110	None	replace
1064	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	56	None	replace
1065	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put  [CE]  not  a  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	56	None	replace
1066	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  orphaned  default	53	None	replace
1067	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  orphaned  default	53	None	replace
1068	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  orphaned  default  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  orphaned  default	53	None	replace
1069	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  DEFAULT_VERSION);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  DEFAULT_VERSION);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(format,  DEFAULT_VERSION);	  cpioEntry.setFormat(new    InputStreamReader(format),    DEFAULT_VERSION);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
1070	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  format,  DEFAULT_VERSION);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  format,  DEFAULT_VERSION);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  format,  DEFAULT_VERSION);	  cpioEntry.setFormat(new    InputStreamReader(format),    DEFAULT_VERSION);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
1071	[BUG]  [BUGGY]  &&  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  &&  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	&&  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
1072	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	167	None	replace
1073	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	167	None	replace
1074	[BUG]  [BUGGY]  &&  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  &&  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	&&  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
1075	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	168	None	replace
1076	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BRIDGE)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BRIDGE)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BRIDGE)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	168	None	replace
1077	[BUG]  [BUGGY]  if(format  >>  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >>  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  >>  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	69	None	replace
1078	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	49	None	replace
1079	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	49	None	replace
1080	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	49	None	replace
1081	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	49	None	replace
1082	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	49	None	replace
1083	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put  [CE]  not  a  statement  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	49	None	replace
1084	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1085	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  '.class'  expected  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  For(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	For(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  '.class'  expected	136	None	replace
1086	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  cannot  be  null! ");  [CE]  unreachable  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  cannot  be  null! ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  cannot  be  null! ");	  throw    new    IllegalArgumentException(   "Format    cannot    be    null.   ");    	non-compiled	[CE]  unreachable  statement	94	None	replace
1087	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  cannot  be  null ".   ");  [CE]  unclosed  string  literal  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  cannot  be  null ".   ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  cannot  be  null ".   ");	  throw    new    IllegalArgumentException(   "Format    cannot    be    null.   ");    	non-compiled	[CE]  unclosed  string  literal	94	None	replace
1088	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  BINARY);  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  BINARY);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  BINARY);	  CpioEntry    cpioEntry    =    new    CpioEntry(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
1089	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  this.out);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  this.out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format),  this.out);	  CpioEntry    cpioEntry    =    new    CpioEntry(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
1090	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(null,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
1091	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(null,    format);    }    	non-compiled	[CE]  orphaned  default	149	None	replace
1092	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(null,    format);    }    	non-compiled	[CE]  orphaned  default	149	None	replace
1093	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  this.out);  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  this.out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  this.out);	  cpioEntry.setFormat(new    InputStreamReader(format),    out);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
1094	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  BINARY);  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  BINARY);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(format,  BINARY);	  CpioEntry    cpioEntry    =    new    CpioEntry(format);    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
1095	[BUG]  [BUGGY]  this.entryFormat  =  FormatUtils.currentTimeMillis();  [CE]  cannot  find  symbol  FormatUtils  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  FormatUtils.currentTimeMillis();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  FormatUtils.currentTimeMillis();	  this.entryFormat    =    entryFormat;    	non-compiled	[CE]  cannot  find  symbol  FormatUtils	74	None	replace
1096	[BUG]  [BUGGY]  this.entryFormat  =  FormatUtils.EMPTY_STRING;  [CE]  cannot  find  symbol  FormatUtils  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  FormatUtils.EMPTY_STRING;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  FormatUtils.EMPTY_STRING;	  this.entryFormat    =    entryFormat;    	non-compiled	[CE]  cannot  find  symbol  FormatUtils	74	None	replace
1097	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap  <  String,  Short>();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap  <  String,  Short>();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap  <  String,  Short>();	  this.entryFormat    =    entryFormat;    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	74	None	replace
1098	[BUG]  [BUGGY]  this.entryFormat  =  format  ==  null?  FORMAT_NOT_BINARY  :  new  HashMap();  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  ==  null?  FORMAT_NOT_BINARY  :  new  HashMap();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  ==  null?  FORMAT_NOT_BINARY  :  new  HashMap();	  this.entryFormat    =    format    ==    null?    format    :    new    HashMap();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	204	None	replace
1099	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,  cannot  be   ");  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,  cannot  be   ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,  cannot  be   ");	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format,   ");    	non-compiled	[CE]  unreachable  statement	95	None	replace
1100	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,  cannot  be   "  +  format);  [CE]  unreachable  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,  cannot  be   "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,  cannot  be   "  +  format);	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format,   ");    	non-compiled	[CE]  unreachable  statement	95	None	replace
1101	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,  or  a  valid  format ");  [CE]  unreachable  statement  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,  or  a  valid  format ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,  or  a  valid  format ");	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format,   ");    	non-compiled	[CE]  unreachable  statement	95	None	replace
1102	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,  should  be  a  valid  format ");  [CE]  unreachable  statement  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,  should  be  a  valid  format ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,  should  be  a  valid  format ");	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format,   ");    	non-compiled	[CE]  unreachable  statement	95	None	replace
1103	[BUG]  [BUGGY]  &&  format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  &&  format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	&&  format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1104	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null:  ' "  +  format);  [CE]  unreachable  statement  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null:  ' "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null:  ' "  +  format);	  throw    new    IllegalArgumentException(   "Format    is    null:   ");    	non-compiled	[CE]  unreachable  statement	150	None	replace
1105	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  getCpioEntry(format);  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  getCpioEntry(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  getCpioEntry(format);	  cpioEntry.setCpio(format);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
1106	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  createCpioEntry(format);  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  createCpioEntry(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  createCpioEntry(format);	  cpioEntry.setCpio(format);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
1107	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NW  ||  format  ==  FORMAT_NW)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NW  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NW  ||  format  ==  FORMAT_NW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NW  ||  format  ==  FORMAT_NW)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NW	61	None	add
1108	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  Format  ==  FORMAT_NEW)  {  break;  }  [CE]  cannot  find  symbol  Format  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  Format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  Format  ==  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  Format	61	None	add
1109	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(format),  written);  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(format),  written);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamWriter(format),  written);	  CpioEntry.setFormat(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
1110	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  Format!=  FORMAT_NEW)  {  break;  }  [CE]  cannot  find  symbol  Format  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW  ||  Format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW  ||  Format!=  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  Format	143	None	add
1111	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  If(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [CE]  ';'  expected  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  If(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    If(format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  ';'  expected	143	None	add
1112	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	51	None	replace
1113	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	51	None	replace
1114	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	51	None	replace
1115	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(null,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
1116	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(null,    format);    }    	non-compiled	[CE]  orphaned  default	158	None	replace
1117	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(null,    format);    }    	non-compiled	[CE]  orphaned  default	158	None	replace
1118	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  this.out);  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  this.out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  this.out);	  CpioEntry    cpioEntry    =    new    CpioEntry(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
1119	[BUG]  [BUGGY]  &&  format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  &&  format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	&&  format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
1120	[BUG]  [BUGGY]  &&  format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  &&  format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	&&  format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
1121	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  EOFException  	140	1	replace
1122	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]        IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  EOFException  	140	1	replace
1123	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	209	None	replace
1124	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put  [CE]  not  a  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  not  a  statement	209	None	replace
1125	[BUG]  [BUGGY]  &&  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  &&  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	&&  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
1126	[BUG]  [BUGGY]  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
1127	[BUG]  [BUGGY]  if(format!=  FORMAT_OLD)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_OLD)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_OLD)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	134	None	replace
1128	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format),  this.entryFormat);	  cpioEntry.setFormat(new    OutputStreamReader(format),    this.entryFormat);    	non-compiled	[CE]  cannot  find  symbol	218	None	replace
1129	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(this.format),  format);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(this.format),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamReader(this.format),  format);	  cpioEntry.setFormat(new    OutputStreamReader(format),    this.entryFormat);    	non-compiled	[CE]  cannot  find  symbol	218	None	replace
1130	[BUG]  [BUGGY]  out.write('ufffd');  [CE]  unclosed  character  literal  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.write('ufffd');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.write('ufffd');	  out.close();    	non-compiled	[CE]  unclosed  character  literal	128	None	replace
1131	[BUG]  [BUGGY]  out.write('  ');  [CE]  unreachable  statement  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.write('  ');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.write('  ');	  out.close();    	non-compiled	[CE]  unreachable  statement	128	None	replace
1132	[BUG]  [BUGGY]  out.defaultWrite( "BINARY: ");  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.defaultWrite( "BINARY: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.defaultWrite( "BINARY: ");	  out.close();    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
1133	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	47	None	replace
1134	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put  [CE]  not  a  statement  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	47	None	replace
1135	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(  [CE]  illegal  start  of  expression  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1136	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	47	None	replace
1137	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	58	None	replace
1138	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put  [CE]  not  a  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	58	None	replace
1139	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1140	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	58	None	replace
1141	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1142	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format,  BINARY));  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format,  BINARY));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(format,  BINARY));	  cpioEntry.setFormat(new    OutputStreamReader(format,    format));    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
1143	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  this.format);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  this.format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  this.format);	  cpioEntry.setFormat(new    InputStreamReader(format),    format);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
1144	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	208	None	replace
1145	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ABSTRACT)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ABSTRACT)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_ABSTRACT)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	208	None	replace
1146	[BUG]  [BUGGY]  &&  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  &&  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	&&  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	208	None	replace
1147	[BUG]  [BUGGY]  if(out!=  null)  {  cpioEntry.setFormat(format);  out.close();  }  [CE]  unreachable  statement  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(out!=  null)  {  cpioEntry.setFormat(format);  out.close();  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(out!=  null)  {  cpioEntry.setFormat(format);  out.close();  }	  cpioEntry.setFormat(format);    out.close();    	non-compiled	[CE]  unreachable  statement	174	None	replace
1148	[BUG]  [BUGGY]  if(out!=  null)  {  cpioEntry.setFormat(format);  out.close();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unreachable  statement  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(out!=  null)  {  cpioEntry.setFormat(format);  out.close();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(out!=  null)  {  cpioEntry.setFormat(format);  out.close();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  cpioEntry.setFormat(format);    out.close();    	non-compiled	[CE]  unreachable  statement	174	None	replace
1149	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW_BINARY)  {  break;	  ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	212	None	replace
1150	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format),  this.out);  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format),  this.out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(format),  this.out);	  cpioEntry.setFormat(new    OutputStreamReader(format),    out);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
1151	[BUG]  [BUGGY]  &&  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  &&  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	&&  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
1152	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	153	None	replace
1153	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	106	None	replace
1154	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	106	None	replace
1155	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put  [CE]  not  a  statement  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	106	None	replace
1156	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	106	None	replace
1157	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	106	None	replace
1158	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put  [CE]  not  a  statement  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	106	None	replace
1159	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null! ",  format);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null! ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null! ",  format);	  throw    new    IllegalArgumentException(   "Format    is    null!   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)	38	None	replace
1160	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  EOFException  	6	1	replace
1161	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  EOFException  	6	1	replace
1162	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW_ABSTRACT)  {  break;  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW_ABSTRACT)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW_ABSTRACT)  {  break;  }	  ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
1163	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	54	None	replace
1164	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	54	None	replace
1165	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	54	None	replace
1166	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	54	None	replace
1167	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(  [CE]  illegal  start  of  expression  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
1168	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put  [CE]  not  a  statement  [FE]                                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  not  a  statement	54	None	replace
1169	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	193	None	replace
1170	[BUG]  [BUGGY]  &&  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  &&  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	&&  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
1171	[BUG]  [BUGGY]  &&  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  &&  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	&&  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	193	None	replace
1172	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_NEW  ||  Format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  Format  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_NEW  ||  Format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_NEW  ||  Format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  Format	139	None	add
1173	[BUG]  [BUGGY]  Because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	183	None	replace
1174	[BUG]  [BUGGY]  because(format  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	183	None	replace
1175	[BUG]  [BUGGY]  because(format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	183	None	replace
1176	[BUG]  [BUGGY]  because(format!=  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format!=  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format!=  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	183	None	replace
1177	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  null)  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  null)  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  null)  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	183	None	replace
1178	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  <  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  <  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    >=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	81	2	replace
1179	[BUG]  [BUGGY]  if(format  <  FORMAT_NEW)  {  break;  }  [FE]  IllegalArgumentException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  <  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  <  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    >=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	81	2	replace
1180	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  [CE]  orphaned  default  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;	  	non-compiled	[CE]  orphaned  default	141	None	add
1181	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	98	None	replace
1182	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  Format.BINARY);  }  [CE]  orphaned  default  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  Format.BINARY);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  Format.BINARY);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	98	None	replace
1183	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	41	None	replace
1184	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format.length()!=  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format.length()!=  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format.length()!=  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	41	None	replace
1185	[BUG]  [BUGGY]  if(format  ==  FORMAT_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	148	None	replace
1186	[BUG]  [BUGGY]  if(format  ==  FORMAT_BLACK)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_BLACK)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_BLACK)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	148	None	replace
1187	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	148	None	replace
1188	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  +  ')'  expected  [CE]  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  +  ')'  expected  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  +  ')'  expected	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format    	non-compiled	[CE]  	148	None	replace
1189	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  this);  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  this);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  this);	  CpioEntry    cpioEntry    =    new    CpioEntry(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
1190	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  crc);  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  crc);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format),  crc);	  CpioEntry    cpioEntry    =    new    CpioEntry(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
1191	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format);  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(format);	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
1192	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.getOutputs();  [CE]  short  cannot  be  dereferenced  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat.getOutputs();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.getOutputs();	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  short  cannot  be  dereferenced	108	None	replace
1193	[BUG]  [BUGGY]  OutputStream  out  =  getOutputFormat(format);  [CE]  cannot  find  symbol  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  getOutputFormat(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  getOutputFormat(format);	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
1194	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format);  [CE]  <identifier>  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw(new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format);	  throw    new    IllegalArgumentException(   "Format    does    not    exist:    format    '   "    +    format);    	non-compiled	[CE]  <identifier>  expected	199	None	replace
1195	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format));  [CE]  <identifier>  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw(new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format));	  throw    new    IllegalArgumentException(   "Format    does    not    exist:    format    '   "    +    format);    	non-compiled	[CE]  <identifier>  expected	199	None	replace
1196	[BUG]  [BUGGY]  Because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	191	None	replace
1197	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	191	None	replace
1198	[BUG]  [BUGGY]  Because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	191	None	replace
1199	[BUG]  [BUGGY]  because(format  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	191	None	replace
1200	[BUG]  [BUGGY]  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	71	None	replace
1201	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    	compilable	  [FE]  EOFException  	71	1	replace
1202	[BUG]  [BUGGY]  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    	compilable	  [FE]  EOFException  	71	1	replace
1203	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BRIDGE)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BRIDGE  [FE]        IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BRIDGE)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BRIDGE)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BRIDGE	71	None	replace
1204	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  >>  ')'  [CE]  ')'  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  >>  ')'  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  >>  ')'	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	157	None	replace
1205	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	157	None	replace
1206	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  >>  ')'  expected  [CE]  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  >>  ')'  expected  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  >>  ')'  expected	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format    	non-compiled	[CE]  	157	None	replace
1207	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  +  ')'  expected  [CE]  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  +  ')'  expected  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  +  ')'  expected	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format    	non-compiled	[CE]  	157	None	replace
1208	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(out,  format);  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(out,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(out,  format);	  cpioEntry.setFormat(new    OutputStreamWriter(out,    format));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
1209	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ACCEPT)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_ACCEPT  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ACCEPT)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ACCEPT)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_ACCEPT	67	None	replace
1210	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW_RCC)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_RCC  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW_RCC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW_RCC)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_RCC	116	None	add
1211	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  supported  by: ");  [CE]  unreachable  statement  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  supported  by: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "BINARY  is  not  supported  by: ");	  throw    new    IllegalArgumentException(   "BINARY    is    not    supported.   ");    	non-compiled	[CE]  unreachable  statement	123	None	replace
1212	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  supported! ");  [CE]  unreachable  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  supported! ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "BINARY  is  not  supported! ");	  throw    new    IllegalArgumentException(   "BINARY    is    not    supported.   ");    	non-compiled	[CE]  unreachable  statement	123	None	replace
1213	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  supported  by: "  +  format);  [CE]  unreachable  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  supported  by: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "BINARY  is  not  supported  by: "  +  format);	  throw    new    IllegalArgumentException(   "BINARY    is    not    supported.   ");    	non-compiled	[CE]  unreachable  statement	123	None	replace
1214	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)cpioArchiveEntry.clone();  [CE]  cannot  find  symbol  cpioArchiveEntry  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)cpioArchiveEntry.clone();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)cpioArchiveEntry.clone();	  OutputStream    out    =(OutputStream)cpioEntry.clone();    	non-compiled	[CE]  cannot  find  symbol  cpioArchiveEntry	170	None	replace
1215	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.getData();  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.getData();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)cpioEntry.getData();	  OutputStream    out    =(OutputStream)cpioEntry.clone();    	non-compiled	[CE]  cannot  find  symbol	170	None	replace
1216	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  support  valid  format: ");  [CE]  unreachable  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  support  valid  format: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  does  not  support  valid  format: ");	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format:   ");    	non-compiled	[CE]  unreachable  statement	113	None	replace
1217	[BUG]  [BUGGY]  &&  format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  &&  format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	&&  format  ==  FORMAT_NEW  ||  format!=  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
1218	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	207	None	replace
1219	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format!=  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format!=  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY  ||  format!=  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	207	None	replace
1220	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    Format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	154	None	replace
1221	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    Format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	154	None	replace
1222	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    Format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	154	None	replace
1223	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    Format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	154	None	replace
1224	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	101	None	replace
1225	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	101	None	replace
1226	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	101	None	replace
1227	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [CE]  not  a  statement  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	101	None	replace
1228	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1229	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	101	None	replace
1230	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  ')'  expected	101	None	replace
1231	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.info.clone();  [CE]  cannot  find  symbol  info  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.info.clone();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.info.clone();	  OutputStream    out    =(OutputStream)this.entryFormat.clone();    	non-compiled	[CE]  cannot  find  symbol  info	24	None	replace
1232	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.out.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.out.clone();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.out.clone();	  OutputStream    out    =(OutputStream)this.entryFormat.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	24	None	replace
1233	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.encodeBase64Variants.clone();  [CE]  cannot  find  symbol  encodeBase64Variants  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.encodeBase64Variants.clone();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.encodeBase64Variants.clone();	  OutputStream    out    =(OutputStream)this.entryFormat.clone();    	non-compiled	[CE]  cannot  find  symbol  encodeBase64Variants	24	None	replace
1234	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.env.clone();  [CE]  cannot  find  symbol  env  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.env.clone();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.env.clone();	  OutputStream    out    =(OutputStream)this.entryFormat.clone();    	non-compiled	[CE]  cannot  find  symbol  env	24	None	replace
1235	[BUG]  [BUGGY]  Because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	206	None	replace
1236	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	206	None	replace
1237	[BUG]  [BUGGY]  because(format  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	206	None	replace
1238	[BUG]  [BUGGY]  Because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Because(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	206	None	replace
1239	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CREATOR)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_CREATOR  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CREATOR)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CREATOR)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_CREATOR	63	None	add
1240	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CREATE)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_CREATE  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CREATE)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CREATE)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_CREATE	63	None	add
1241	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_RCC)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_RCC  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_RCC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_RCC)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_RCC	63	None	add
1242	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	63	1	add
1243	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	63	1	add
1244	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	211	None	replace
1245	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.getOutputFile(format);  [CE]  short  cannot  be  dereferenced  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat.getOutputFile(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.getOutputFile(format);	  OutputStream    out    =    this.entryFormat.getOutputFile();    	non-compiled	[CE]  short  cannot  be  dereferenced	25	None	replace
1246	[BUG]  [BUGGY]  Throwables.warning( "Format  is  null:  ' "  +  format);  [CE]  cannot  find  symbol  Throwables  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.warning( "Format  is  null:  ' "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.warning( "Format  is  null:  ' "  +  format);	  Throwables.warning(   "Format    is    null.   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	39	None	replace
1247	[BUG]  [BUGGY]  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
1248	[BUG]  [BUGGY]  if(format!=  FORMAT_OLD)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_OLD)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_OLD)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	166	None	replace
1249	[BUG]  [BUGGY]  if(format!=  FORMAT_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	166	None	replace
1250	[BUG]  [BUGGY]  if(format!=  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	166	None	replace
1251	[BUG]  [BUGGY]  &&  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  &&  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	&&  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
1252	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put  [CE]  not  a  statement  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  not  a  statement	177	None	replace
1253	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BAINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_OLD_BAINARY  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BAINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    if(format  ==  FORMAT_OLD_BAINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_OLD_BAINARY	162	None	add
1254	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  Format  ==  FORMAT_NEW)  {  break;  }  [CE]  cannot  find  symbol  Format  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW  ||  Format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW  ||  Format  ==  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  Format	68	None	add
1255	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format:  ' "  +  format);  [CE]  unreachable  statement  [FE]            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format:  ' "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format:  ' "  +  format);	  throw    new    IllegalArgumentException(   "Unknown    format:   ");    	non-compiled	[CE]  unreachable  statement	111	None	replace
1256	[BUG]  [BUGGY]  this.entryFormat  =  format  ==  null?  getFormat()  :  FormatUtils.EMPTY_STRING;  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  ==  null?  getFormat()  :  FormatUtils.EMPTY_STRING;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  ==  null?  getFormat()  :  FormatUtils.EMPTY_STRING;	  this.entryFormat    =    format    {    null?    getFormat()    :    format;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	205	None	replace
1257	[BUG]  [BUGGY]  this.entryFormat  =  format  ==  null?  getFormat()  :  FormatUtils.EMPTY;  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  ==  null?  getFormat()  :  FormatUtils.EMPTY;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  ==  null?  getFormat()  :  FormatUtils.EMPTY;	  this.entryFormat    =    format    {    null?    getFormat()    :    format;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	205	None	replace
1258	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	192	None	replace
1259	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [CE]  not  a  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  not  a  statement	192	None	replace
1260	[BUG]  [BUGGY]  OutputStream  out  =  getEntryFormat(this.entryFormat);  [CE]  cannot  find  symbol  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  getEntryFormat(this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  getEntryFormat(this.entryFormat);	  OutputStream    out    =    getEntryFormat(format);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
1261	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format:  ' "  +  format);  [CE]  unreachable  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format:  ' "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  format:  ' "  +  format);	  throw    new    IllegalArgumentException(   "Unknown    format    format:   ");    	non-compiled	[CE]  unreachable  statement	180	None	replace
1262	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	3	None	add
1263	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
1264	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
1265	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_ASCII  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_ASCII	3	None	add
1266	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >>  FORMAT_OLD_BINARY)  {  break;  }  [CE]  incompatible  types  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >>  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >>  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  incompatible  types	3	None	add
1267	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_BINARY  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_BINARY	3	None	add
1268	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_INARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_INARY  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_INARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_INARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_INARY	3	None	add
1269	[BUG]  [BUGGY]  cpioEntry.setPath(new  File(format));  [CE]  cannot  find  symbol  [FE]            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setPath(new  File(format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setPath(new  File(format));	  cpioEntry.setPath(format);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
1270	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  getCpioEntry().setPath(format);  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  getCpioEntry().setPath(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  getCpioEntry().setPath(format);	  cpioEntry.setPath(format);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
1271	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  getCpioEntry();  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  getCpioEntry();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  getCpioEntry();	  cpioEntry.setPath(format);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
1272	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.newInstance();  [CE]  short  cannot  be  dereferenced  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat.newInstance();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.newInstance();	  OutputStream    out    =    this.entryFormat.getOutputStream();    	non-compiled	[CE]  short  cannot  be  dereferenced	28	None	replace
1273	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.toBinary();  [CE]  short  cannot  be  dereferenced  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat.toBinary();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.toBinary();	  OutputStream    out    =    this.entryFormat.getOutputStream();    	non-compiled	[CE]  short  cannot  be  dereferenced	28	None	replace
1274	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	43	None	replace
1275	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put  [CE]  not  a  statement  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	43	None	replace
1276	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  format));  [CE]  ';'  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(format,  format));	  cpioEntry.setFormat(new    InputStreamReader(format,    format));    	non-compiled	[CE]  ';'  expected	22	None	replace
1277	[BUG]  [BUGGY]  this.entryFormat  =  new  OutputStreamOutputStream();  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  OutputStreamOutputStream();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  OutputStreamOutputStream();	  this.entryFormat    =    new    OutputStreamWriter();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
1278	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_ASCII  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_ASCII	161	None	replace
1279	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	55	None	replace
1280	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  out.put(names.size()  -  1);  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  out.put(names.size()  -  1);  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  out.put(names.size()  -  1);  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	55	None	replace
1281	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(this.out,  format),  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(this.out,  format),  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(this.out,  format),  this.entryFormat);	  cpioEntry.setFormat(new    OutputStreamWriter(format),    this.entryFormat);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
1282	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(this.entryFormat),  format);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(this.entryFormat),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamWriter(this.entryFormat),  format);	  cpioEntry.setFormat(new    OutputStreamWriter(format),    this.entryFormat);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
1283	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(out,  format));  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(out,  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(out,  format));	  cpioEntry.setFormat(new    InputStreamReader(out,    format));    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
1284	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format,  out));  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format,  out));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  InputStreamReader(format,  out));	  cpioEntry.setFormat(new    InputStreamReader(out,    format));    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
1285	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	99	None	replace
1286	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	99	None	replace
1287	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	99	None	replace
1288	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	99	None	replace
1289	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [CE]  not  a  statement  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	99	None	replace
1290	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [CE]  not  a  statement  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	99	None	replace
1291	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(out),  format);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(out),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(out),  format);	  cpioEntry.setFormat(new    OutputStreamWriter(format),    out);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
1292	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format),  written);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format),  written);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(format),  written);	  cpioEntry.setFormat(new    OutputStreamWriter(format),    out);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
1293	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format),  this.out);  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(format),  this.out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(format),  this.out);	  cpioEntry.setFormat(new    OutputStreamWriter(format),    out);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
1294	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap(names);  [CE]  incompatible  types  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap(names);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap(names);	  this.entryFormat    =    new    HashMap();    	non-compiled	[CE]  incompatible  types	73	None	replace
1295	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Format  must  be  null. ");  [CE]  not  a  statement  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throw  new  IllegalArgumentException( "Format  must  be  null. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throw  new  IllegalArgumentException( "Format  must  be  null. ");	  Throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  not  a  statement	186	None	replace
1296	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  null: ");  [CE]  not  a  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  null: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throw  new  IllegalArgumentException( "Format  is  null: ");	  Throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  not  a  statement	186	None	replace
1297	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW  ||  format  >  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	196	1	replace
1298	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  >  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	196	1	replace
1299	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  <  FORMAT_NEW  ||  format  >  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  <  FORMAT_NEW  ||  format  >  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	196	2	replace
1300	[BUG]  [BUGGY]  if(format  <  FORMAT_NEW  ||  format  >  FORMAT_NEW)  {  break;  }  [FE]  IllegalArgumentException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  <  FORMAT_NEW  ||  format  >  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  <  FORMAT_NEW  ||  format  >  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	196	2	replace
1301	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  namespaces.size();  i++)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  namespaces  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  namespaces.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  namespaces.size();  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  namespaces	146	None	replace
1302	[BUG]  [BUGGY]  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1303	[BUG]  [BUGGY]  if(format!=  FORMAT_OLD)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_OLD)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_OLD)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	152	None	replace
1304	[BUG]  [BUGGY]  if(format!=  FORMAT_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	152	None	replace
1305	[BUG]  [BUGGY]  if(format!=  FORMAT_NON_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NON_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NON_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	152	None	replace
1306	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	50	None	replace
1307	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  ')'  expected	50	None	replace
1308	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	70	None	add
1309	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CREATOR)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_CREATOR  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CREATOR)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CREATOR)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_CREATOR	70	None	add
1310	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	70	1	add
1311	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]        IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	70	1	add
1312	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format,  written);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format,  written);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  InputStreamReader(format,  written);	  CpioEntry    cpioEntry    =    new    InputStreamReader(format);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
1313	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format)+  1;  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format)+  1;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  InputStreamReader(format)+  1;	  CpioEntry    cpioEntry    =    new    InputStreamReader(format);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
1314	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(this.format);  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(this.format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamReader(this.format);	  CpioEntry    cpioEntry    =    new    OutputStreamReader(format);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
1315	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  BINARY);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  BINARY);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamReader(format,  BINARY);	  CpioEntry    cpioEntry    =    new    OutputStreamReader(format);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
1316	[BUG]  [BUGGY]  if(format  ==  FORMAT_N)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_N  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_N)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_N)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    ==    FORMAT_N)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_N	87	None	replace
1317	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_BINARY  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    ==    FORMAT_N)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_BINARY	87	None	replace
1318	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  Format.BINARY);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  Format.BINARY);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  Format.BINARY);  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	59	None	replace
1319	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ')'  expected	59	None	replace
1320	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  Format.BINARY);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  Format.BINARY);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  Format.BINARY);  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	59	None	replace
1321	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  break;  CpioEntry  cpioEntry  =(CpioEntry)cpioEntry.clone();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format);  break;  CpioEntry  cpioEntry  =(CpioEntry)cpioEntry.clone();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);    break;    CpioEntry  cpioEntry  =(CpioEntry)cpioEntry.clone();	  	non-compiled	[CE]  cannot  find  symbol	172	None	add
1322	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  break;  CpioEntry  cpioEntry  =(CpioEntry)cpioEntry.getValue();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format);  break;  CpioEntry  cpioEntry  =(CpioEntry)cpioEntry.getValue();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);    break;    CpioEntry  cpioEntry  =(CpioEntry)cpioEntry.getValue();	  	non-compiled	[CE]  cannot  find  symbol	172	None	add
1323	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  break;  CpioEntry  cpioEntry  =(CpioEntry)cpioEntry.clone();  break;  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format);  break;  CpioEntry  cpioEntry  =(CpioEntry)cpioEntry.clone();  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);    break;    CpioEntry  cpioEntry  =(CpioEntry)cpioEntry.clone();  break;	  	non-compiled	[CE]  cannot  find  symbol	172	None	add
1324	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  break;  CpioEntry  cpioEntry  =(CpioEntry)cpioEntry.getValue();  break;  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format);  break;  CpioEntry  cpioEntry  =(CpioEntry)cpioEntry.getValue();  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);    break;    CpioEntry  cpioEntry  =(CpioEntry)cpioEntry.getValue();  break;	  	non-compiled	[CE]  cannot  find  symbol	172	None	add
1325	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_C)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_C  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_C)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_C)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_C	160	None	add
1326	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CREATE)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_CREATE  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CREATE)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CREATE)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_CREATE	160	None	add
1327	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_RCC)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_RCC  [FE]        IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_RCC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_RCC)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_RCC	160	None	add
1328	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	78	1	add
1329	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	78	1	add
1330	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	78	1	add
1331	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	78	1	add
1332	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_BINARY  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_BINARY	78	None	add
1333	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_UNKNOWN)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_UNKNOWN  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_UNKNOWN)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_UNKNOWN)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_UNKNOWN	78	None	add
1334	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	78	1	add
1335	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	78	1	add
1336	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_BLACK)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_BLACK  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_BLACK)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_BLACK)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_BLACK	78	None	add
1337	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  [CE]  orphaned  default  [FE]                EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;	  	non-compiled	[CE]  orphaned  default	78	None	add
1338	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Format  is  null. "  +  format));  [CE]  <identifier>  expected  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Format  is  null. "  +  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw(new  IllegalArgumentException( "Format  is  null. "  +  format));	  throw    new    IllegalArgumentException(   "Format    is    null.    Format:   "    +    format);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
1339	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null,  Format: "  +  format);  [CE]  unreachable  statement  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null,  Format: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null,  Format: "  +  format);	  throw    new    IllegalArgumentException(   "Format    is    null.    Format:   "    +    format);    	non-compiled	[CE]  unreachable  statement	40	None	replace
1340	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(format  +  1);  [CE]  no  suitable  method  found  for  get(int)  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.names.get(format  +  1);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.names.get(format  +  1);	  OutputStream    out    =(OutputStream)this.names.get(0);    	non-compiled	[CE]  no  suitable  method  found  for  get(int)	26	None	replace
1341	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(format),  written);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(format),  written);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamReader(format),  written);	  CpioEntry.setFormat(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1342	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(format),  cpioOutputStream);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(format),  cpioOutputStream);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamReader(format),  cpioOutputStream);	  CpioEntry.setFormat(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1343	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap  <  Short,  Short>(2);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap  <  Short,  Short>(2);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap  <  Short,  Short>(2);	  this.entryFormat    =    new    HashMap    <    Short,    Short>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	165	None	replace
1344	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	1	1	add
1345	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	1	1	add
1346	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_ASCII  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_ASCII	1	None	add
1347	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	1	1	add
1348	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	1	1	add
1349	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_ASCII  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_ASCII	1	None	add
1350	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_INARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_INARY  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_INARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_INARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_INARY	1	None	add
1351	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_BRIDGE)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BRIDGE  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW_BRIDGE)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW_BRIDGE)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BRIDGE	1	None	add
1352	[BUG]  [BUGGY]  if(format  ==  FORMAT_BLACK)  {  break;  }  if(format  ==  FORMAT_BLACK)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_BLACK  [FE]        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_BLACK)  {  break;  }  if(format  ==  FORMAT_BLACK)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_BLACK)  {  break;  }  if(format  ==  FORMAT_BLACK)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    ==    FORMAT_NW)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_BLACK	164	None	replace
1353	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format: "):  format;  [CE]  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format: "):  format;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  format: "):  format;	  throw    new    IllegalArgumentException(   "Unknown    format    format       "):    format;    	non-compiled	[CE]  	200	None	replace
1354	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]          IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_NEW_BINARY    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	190	None	replace
1355	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [CE]  not  a  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  not  a  statement	194	None	replace
1356	[BUG]  [BUGGY]  &&  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  &&  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	&&  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
1357	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	184	None	replace
1358	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	184	None	replace
1359	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	107	None	replace
1360	[BUG]  [BUGGY]  (format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY))  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  not  a  statement  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  (format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY))  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY))  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  not  a  statement	107	None	replace
1361	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	100	None	replace
1362	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	100	None	replace
1363	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [CE]  not  a  statement  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  not  a  statement	100	None	replace
1364	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [CE]  not  a  statement  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  not  a  statement	100	None	replace
1365	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [CE]  not  a  statement  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  not  a  statement	100	None	replace
1366	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	45	None	replace
1367	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	45	None	replace
1368	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format.   "  +  format);  [CE]  unreachable  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format.   "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  valid  format.   "  +  format);	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format.   ");    	non-compiled	[CE]  unreachable  statement	93	None	replace
1369	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW)  {  break;  }  [CE]  incompatible  types  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  incompatible  types	80	None	add
1370	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	80	1	add
1371	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	80	1	add
1372	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  <  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  <  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	80	1	add
1373	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  <  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  <  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  <  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	80	1	add
1374	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	80	1	add
1375	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	80	1	add
1376	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_BINARY  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_BINARY	80	None	add
1377	[BUG]  [BUGGY]  Because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Because(format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	175	None	replace
1378	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	175	None	replace
1379	[BUG]  [BUGGY]  because(format  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  0)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	175	None	replace
1380	[BUG]  [BUGGY]  because(format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	175	None	replace
1381	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  out.write('0');  [CE]  unreachable  statement  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format);  out.write('0');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);  out.write('0');	  cpioEntry.setFormat(format);    out.write('n');    	non-compiled	[CE]  unreachable  statement	171	None	replace
1382	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(write);  out.write(format);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(write);  out.write(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(write);  out.write(format);	  OutputStream    out    =    new    OutputStreamWriter();    out.write(format);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
1383	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter();  out.write(this.entryFormat);  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter();  out.write(this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter();  out.write(this.entryFormat);	  OutputStream    out    =    new    OutputStreamWriter();    out.write(format);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
1384	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter();  out.write(format,  written);  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter();  out.write(format,  written);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter();  out.write(format,  written);	  OutputStream    out    =    new    OutputStreamWriter();    out.write(format);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
1385	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.cpioEntry.clone();  out.close();  [CE]  clone()  has  protected  access  in  Object  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.cpioEntry.clone();  out.close();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.cpioEntry.clone();  out.close();	  OutputStream    out    =(OutputStream)this.entryFormat.clone();    out.close();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	29	None	replace
1386	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.entryFormat.clone();  out.write('n');  [CE]  short  cannot  be  dereferenced  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.entryFormat.clone();  out.write('n');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.entryFormat.clone();  out.write('n');	  OutputStream    out    =(OutputStream)this.entryFormat.clone();    out.close();    	non-compiled	[CE]  short  cannot  be  dereferenced	29	None	replace
1387	[BUG]  [BUGGY]  (format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY))  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  not  a  statement  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  (format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY))  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY))  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  not  a  statement	46	None	replace
1388	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	210	None	replace
1389	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Binary  format  not  supported! ");  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Binary  format  not  supported! ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Binary  format  not  supported! ");	  throw    new    IllegalArgumentException(   "Binary    format    not    supported.   ");    	non-compiled	[CE]  unreachable  statement	182	None	replace
1390	[BUG]  [BUGGY]  this.entryFormat  =  format!=  null?  new  HashMap()  :  format;  [CE]  bad  operand  types  for  binary  operator  '!='  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format!=  null?  new  HashMap()  :  format;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format!=  null?  new  HashMap()  :  format;	  this.entryFormat    =    format!=    null?    format    :    new    HashMap();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '!='	203	None	replace
1391	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Not  a  valid  format: ");  [CE]  unreachable  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Not  a  valid  format: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Not  a  valid  format: ");	  throw    new    IllegalArgumentException(   "Not    a    valid    format   ");    	non-compiled	[CE]  unreachable  statement	125	None	replace
1392	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Not  a  valid  format, ");  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Not  a  valid  format, ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Not  a  valid  format, ");	  throw    new    IllegalArgumentException(   "Not    a    valid    format   ");    	non-compiled	[CE]  unreachable  statement	125	None	replace
1393	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	82	1	add
1394	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	82	1	add
1395	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW)  {  break;  }  [CE]  incompatible  types  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >>  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  incompatible  types	82	None	add
1396	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_BINARY  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_BINARY	82	None	add
1397	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	82	1	add
1398	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	82	1	add
1399	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	82	1	add
1400	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	82	1	add
1401	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  [CE]  orphaned  default  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NEW)  {  break;	  	non-compiled	[CE]  orphaned  default	82	None	add
1402	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NON_NEW)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NON_NEW  [FE]                EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NON_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NON_NEW)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NON_NEW	82	None	add
1403	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW.BINARY)  {  break;  }  [CE]  short  cannot  be  dereferenced  [FE]          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW.BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW.BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW.length)    {    break;    }    	non-compiled	[CE]  short  cannot  be  dereferenced	197	None	replace
1404	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW,  out.length)  {  break;  }  [CE]  ')'  expected  [FE]            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW,  out.length)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW,  out.length)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW.length)    {    break;    }    	non-compiled	[CE]  ')'  expected	197	None	replace
1405	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW,  format.length)  {  break;  }  [CE]  ')'  expected  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW,  format.length)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW,  format.length)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW.length)    {    break;    }    	non-compiled	[CE]  ')'  expected	197	None	replace
1406	[BUG]  [BUGGY]  cpioEntry.setPadded(null);  [CE]  cannot  find  symbol  [FE]            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setPadded(null);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setPadded(null);	  cpioEntry.setPadded(true);    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
1407	[BUG]  [BUGGY]  cpioEntry.setFormat(new  String(format)+  format);  [CE]  no  suitable  constructor  found  for  String(short)  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  String(format)+  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  String(format)+  format);	  cpioEntry.setFormat(new    String(format));    	non-compiled	[CE]  no  suitable  constructor  found  for  String(short)	89	None	replace
1408	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NON_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NON_NEW  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NON_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NON_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NON_NEW	65	None	add
1409	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW  ||  Format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  Format  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_NEW  ||  Format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_NEW  ||  Format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  Format	65	None	add
1410	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	60	None	replace
1411	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	60	None	replace
1412	[BUG]  [BUGGY]  cpioEntry.setFormat(format,  written  +  1);  [CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format,  written  +  1);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format,  written  +  1);	  cpioEntry.setFormat(format    +    1);    	non-compiled	[CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;	90	None	replace
1413	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  written);  out.write('n');  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  written);  out.write('n');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(format,  written);  out.write('n');	  OutputStream    out    =    new    OutputStreamWriter(format);    out.write('n');    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1414	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  SHORT_NAME);  out.write('n');  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  SHORT_NAME);  out.write('n');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(format,  SHORT_NAME);  out.write('n');	  OutputStream    out    =    new    OutputStreamWriter(format);    out.write('n');    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1415	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	48	None	replace
1416	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  out.put(0,  format);  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	48	None	replace
1417	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  out.put(names[i]);  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  out.put(names[i]);  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  out.put(names[i]);  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	48	None	replace
1418	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)names.get(format);  [CE]  no  suitable  method  found  for  get(short)  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)names.get(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)names.get(format);	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  no  suitable  method  found  for  get(short)	103	None	replace
1419	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap  <  String,String>(2);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap  <  String,String>(2);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap  <  String,String>(2);	  this.entryFormat    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	75	None	replace
1420	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap  <  String,String>(4);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap  <  String,String>(4);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap  <  String,String>(4);	  this.entryFormat    =    new    HashMap    <    String,String>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	75	None	replace
1421	[BUG]  [BUGGY]  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
1422	[BUG]  [BUGGY]  if(format!=  FORMAT_OLD)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_OLD)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_OLD)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	155	None	replace
1423	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(out);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamWriter(out);	  CpioEntry    cpioEntry    =    new    OutputStreamWriter(format);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
1424	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  written);  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  written);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamWriter(format,  written);	  CpioEntry    cpioEntry    =    new    OutputStreamWriter(format);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
1425	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	207	None	replace
1426	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	207	None	replace
1427	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(this.entryFormat,  format));  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(this.entryFormat,  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(this.entryFormat,  format));	  cpioEntry.setFormat(new    OutputStreamWriter(format,    format));    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
1428	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist:  format "):  format;  [CE]  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist:  format "):  format;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  does  not  exist:  format "):  format;	  throw    new    IllegalArgumentException(   "Format    does    not    exist:   "):    format;    	non-compiled	[CE]  	121	None	replace
1429	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format!=  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    >>    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	84	1	replace
1430	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format!=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format!=  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    >>    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	84	1	replace
1431	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_NEW_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    ==    FORMAT_NW)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	164	None	replace
1432	[BUG]  [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(this.entryFormat));  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(this.entryFormat));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  InputStreamReader(this.entryFormat));	  CpioEntry.setFormat(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
1433	[BUG]  [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(format,  out.readLine()));  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  InputStreamReader(format,  out.readLine()));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  InputStreamReader(format,  out.readLine()));	  CpioEntry.setFormat(new    InputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
1434	[BUG]  [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(System.out);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(System.out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  OutputStreamWriter(System.out);	  this.entryFormat    =    new    OutputStreamWriter();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
1435	[BUG]  [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(this);  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(this);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  OutputStreamWriter(this);	  this.entryFormat    =    new    OutputStreamWriter();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
1436	[BUG]  [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(this.format);  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  OutputStreamWriter(this.format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  OutputStreamWriter(this.format);	  this.entryFormat    =    new    OutputStreamWriter();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
1437	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null, ",  format);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null, ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null, ",  format);	  throw    new    IllegalArgumentException(   "Format    is    null   ",    format);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)	187	None	replace
1438	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null ",  format,  '.');  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short,char)  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null ",  format,  '.');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null ",  format,  '.');	  throw    new    IllegalArgumentException(   "Format    is    null   ",    format);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short,char)	187	None	replace
1439	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  supported.  Format: ");  [CE]  unreachable  statement  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  supported.  Format: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "BINARY  is  not  supported.  Format: ");	  throw    new    IllegalArgumentException(   "BINARY    is    not    supported.   ");    	non-compiled	[CE]  unreachable  statement	123	None	replace
1440	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  supported.  Please  report  this  error. ");  [CE]  unreachable  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "BINARY  is  not  supported.  Please  report  this  error. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "BINARY  is  not  supported.  Please  report  this  error. ");	  throw    new    IllegalArgumentException(   "BINARY    is    not    supported.   ");    	non-compiled	[CE]  unreachable  statement	123	None	replace
1441	[BUG]  [BUGGY]  this.entryFormat  =  format  ==  null?  new  HashMap()  :  new  HashMap();  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  ==  null?  new  HashMap()  :  new  HashMap();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  ==  null?  new  HashMap()  :  new  HashMap();	  this.entryFormat    =    format!=    null?    format    :    new    HashMap();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	203	None	replace
1442	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	54	None	replace
1443	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	54	None	replace
1444	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	54	None	replace
1445	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	54	None	replace
1446	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(this.entryFormat));  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(this.entryFormat));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamReader(this.entryFormat));	  CpioEntry.setFormat(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1447	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(format,  out.readLine()));  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(format,  out.readLine()));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamReader(format,  out.readLine()));	  CpioEntry.setFormat(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1448	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_BRIDARY);  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_BRIDARY);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_BRIDARY);	  cpioEntry.setFormat(new    InputStreamReader(format),    DEFAULT_VERSION);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
1449	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_BUFFER);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_BUFFER);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_BUFFER);	  cpioEntry.setFormat(new    InputStreamReader(format),    DEFAULT_VERSION);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
1450	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_VAR);  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_VAR);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_VAR);	  cpioEntry.setFormat(new    InputStreamReader(format),    DEFAULT_VERSION);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
1451	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_VERSION,  DEFAULT_BINARY);  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_VERSION,  DEFAULT_BINARY);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  DEFAULT_VERSION,  DEFAULT_BINARY);	  cpioEntry.setFormat(new    InputStreamReader(format),    DEFAULT_VERSION);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
1452	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format);  [CE]  not  a  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throw  new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throw  new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format);	  throw    new    IllegalArgumentException(   "Format    does    not    exist:    format    '   "    +    format);    	non-compiled	[CE]  not  a  statement	199	None	replace
1453	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format+ "' ");  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format+ "' ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format+ "' ");	  throw    new    IllegalArgumentException(   "Format    does    not    exist:    format    '   "    +    format);    	non-compiled	[CE]  unreachable  statement	199	None	replace
1454	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format.toString());  [CE]  short  cannot  be  dereferenced  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format.toString());  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  does  not  exist:  format  ' "  +  format.toString());	  throw    new    IllegalArgumentException(   "Format    does    not    exist:    format    '   "    +    format);    	non-compiled	[CE]  short  cannot  be  dereferenced	199	None	replace
1455	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  Format.BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  Format.BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  Format.BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	167	None	replace
1456	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  break;  }  [CE]  orphaned  default  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  break;  }	  	non-compiled	[CE]  orphaned  default	160	None	add
1457	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	51	None	replace
1458	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	51	None	replace
1459	[BUG]  [BUGGY]  cpioEntry.setPadded(true,  true);  [CE]  cannot  find  symbol  [FE]            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setPadded(true,  true);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setPadded(true,  true);	  cpioEntry.setPadded(true);    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
1460	[BUG]  [BUGGY]  ||  format  <  FORMAT_OLD_BINARY)  {  break;  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  <  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  <  FORMAT_OLD_BINARY)  {  break;  }	  ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
1461	[BUG]  [BUGGY]  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  >=  FORMAT_OLD_BINARY)  {  break;  }	  ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
1462	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  entry  format:  ' "  +  format);  [CE]  unreachable  statement  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  entry  format:  ' "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  entry  format:  ' "  +  format);	  throw    new    IllegalArgumentException(   "Unknown    entry    format:   ");    	non-compiled	[CE]  unreachable  statement	179	None	replace
1463	[BUG]  [BUGGY]  cpioEntry.setPath(this.entryFormat);  [CE]  cannot  find  symbol  [FE]            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setPath(this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setPath(this.entryFormat);	  cpioEntry.setPath(format);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
1464	[BUG]  [BUGGY]  OutputStream  out  =(HashMap)this.names.get(0);  [CE]  no  suitable  method  found  for  get(int)  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(HashMap)this.names.get(0);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(HashMap)this.names.get(0);	  OutputStream    out    =(OutputStream)this.names.get(0);    	non-compiled	[CE]  no  suitable  method  found  for  get(int)	26	None	replace
1465	[BUG]  [BUGGY]  OutputStream  out  =(HashOutputStream)this.names.get(0);  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(HashOutputStream)this.names.get(0);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(HashOutputStream)this.names.get(0);	  OutputStream    out    =(OutputStream)this.names.get(0);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
1466	[BUG]  [BUGGY]  cpioEntry.setFormat(new  String(format),  this.entryFormat);  [CE]  no  suitable  constructor  found  for  String(short)  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  String(format),  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  String(format),  this.entryFormat);	  cpioEntry.setFormat(new    String(format));    	non-compiled	[CE]  no  suitable  constructor  found  for  String(short)	89	None	replace
1467	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(this.entryFormat);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  InputStreamReader(this.entryFormat);	  CpioEntry    cpioEntry    =    new    InputStreamReader(format);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
1468	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format,  out.readLine());  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  InputStreamReader(format,  out.readLine());  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  InputStreamReader(format,  out.readLine());	  CpioEntry    cpioEntry    =    new    InputStreamReader(format);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
1469	[BUG]  [BUGGY]  cpioEntry.setFormat(format,  format,  BINARY);  [CE]  cannot  find  symbol  BINARY  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format,  format,  BINARY);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format,  format,  BINARY);	  cpioEntry.setFormat(format,    out);    	non-compiled	[CE]  cannot  find  symbol  BINARY	91	None	replace
1470	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.next();  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.next();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)cpioEntry.next();	  OutputStream    out    =(OutputStream)cpioEntry.clone();    	non-compiled	[CE]  cannot  find  symbol	170	None	replace
1471	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	52	None	replace
1472	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(this.entryFormat,  format));  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(this.entryFormat,  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(this.entryFormat,  format));	  cpioEntry.setFormat(new    OutputStreamReader(format,    format));    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
1473	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format,  out));  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format,  out));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamWriter(format,  out));	  CpioEntry    cpioEntry    =    new    CpioEntry(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
1474	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	135	None	replace
1475	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	135	None	replace
1476	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  length  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  length	135	None	replace
1477	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	135	None	replace
1478	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  format.setCpio(cpioEntry.getCpio());  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  format.setCpio(cpioEntry.getCpio());  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  format.setCpio(cpioEntry.getCpio());	  cpioEntry.setCpio(format);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
1479	[BUG]  [BUGGY]  cpioEntry.setCpio(this.entryFormat);  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setCpio(this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setCpio(this.entryFormat);	  cpioEntry.setCpio(format);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
1480	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  format.setCpio(cpioEntry.getValue());  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  format.setCpio(cpioEntry.getValue());  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  format.setCpio(cpioEntry.getValue());	  cpioEntry.setCpio(format);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
1481	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  format.setCpio(cpioEntry.getKey());  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  format.setCpio(cpioEntry.getKey());  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  format.setCpio(cpioEntry.getKey());	  cpioEntry.setCpio(format);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
1482	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	153	None	replace
1483	[BUG]  [BUGGY]  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
1484	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(this.entryFormat));  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(this.entryFormat));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamWriter(this.entryFormat));	  CpioEntry.setFormat(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
1485	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(format,  out.readLine()));  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamWriter(format,  out.readLine()));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamWriter(format,  out.readLine()));	  CpioEntry.setFormat(new    OutputStreamWriter(format));    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
1486	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	78	1	add
1487	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	78	1	add
1488	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	78	1	add
1489	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }	  	compilable	  [FE]  EOFException  	78	1	add
1490	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NW)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NW  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    ==    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NW)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NW	78	None	add
1491	[BUG]  [BUGGY]  out.put(this.entryFormat,  format);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  out.put(this.entryFormat,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	out.put(this.entryFormat,  format);	  out.put(format,    format);    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
1492	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NW_CRC)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NW_CRC  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NW_CRC)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NW_CRC	116	None	add
1493	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  out;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  [CE]  not  a  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  out;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  out;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format    	non-compiled	[CE]  not  a  statement	157	None	replace
1494	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	157	None	replace
1495	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	46	None	replace
1496	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  short  cannot  be  dereferenced  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  short  cannot  be  dereferenced	46	None	replace
1497	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  not  a  valid  format. ");  [CE]  not  a  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  not  a  valid  format. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throw  new  IllegalArgumentException( "Format  is  not  a  valid  format. ");	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format.   ");    	non-compiled	[CE]  not  a  statement	93	None	replace
1498	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format.  Please  check  that  it  does. ");  [CE]  unreachable  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format.  Please  check  that  it  does. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  valid  format.  Please  check  that  it  does. ");	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format.   ");    	non-compiled	[CE]  unreachable  statement	93	None	replace
1499	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format.  Please  check  that  the  format  does  not  exist: ");  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format.  Please  check  that  the  format  does  not  exist: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  valid  format.  Please  check  that  the  format  does  not  exist: ");	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format.   ");    	non-compiled	[CE]  unreachable  statement	93	None	replace
1500	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,  but ");  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,  but ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  valid  format,  but ");	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format,   ");    	non-compiled	[CE]  unreachable  statement	95	None	replace
1501	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format),  format,  BINARY);  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format),  format,  BINARY);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(format),  format,  BINARY);	  cpioEntry.setFormat(new    OutputStreamReader(format),    out);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
1502	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: ");  [CE]  not  a  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: ");	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format:   ");    	non-compiled	[CE]  not  a  statement	113	None	replace
1503	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  value! ");  [CE]  unreachable  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  value! ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  not  followed  by  a  value! ");	  throw    new    IllegalArgumentException(   "Format    not    followed    by    a    value   ");    	non-compiled	[CE]  unreachable  statement	201	None	replace
1504	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Format  not  followed  by  a  value ");  [CE]  not  a  statement  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throw  new  IllegalArgumentException( "Format  not  followed  by  a  value ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throw  new  IllegalArgumentException( "Format  not  followed  by  a  value ");	  throw    new    IllegalArgumentException(   "Format    not    followed    by    a    value   ");    	non-compiled	[CE]  not  a  statement	201	None	replace
1505	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	100	None	replace
1506	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	100	None	replace
1507	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	100	None	replace
1508	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	100	None	replace
1509	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	45	None	replace
1510	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	45	None	replace
1511	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	45	None	replace
1512	[BUG]  [BUGGY]  this.entryFormat  =  format  ==  null?  FORMAT_NON_NULL  :  new  HashMap();  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  ==  null?  FORMAT_NON_NULL  :  new  HashMap();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  ==  null?  FORMAT_NON_NULL  :  new  HashMap();	  this.entryFormat    =    format    ==    null?    format    :    new    HashMap();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	204	None	replace
1513	[BUG]  [BUGGY]  this.entryFormat  =  format  ==  null?  getFormat()  :  new  HashMap();  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  ==  null?  getFormat()  :  new  HashMap();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  ==  null?  getFormat()  :  new  HashMap();	  this.entryFormat    =    format    ==    null?    format    :    new    HashMap();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	204	None	replace
1514	[BUG]  [BUGGY]  reason(this.entryFormat  ==  null))  {  break;  }  [CE]  ';'  expected  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  reason(this.entryFormat  ==  null))  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	reason(this.entryFormat  ==  null))  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    ==    FORMAT_NEW)    {    break;    }    	non-compiled	[CE]  ';'  expected	79	None	replace
1515	[BUG]  [BUGGY]  reason(this.entryFormat!=  null))  {  break;  }  [CE]  ';'  expected  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  reason(this.entryFormat!=  null))  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	reason(this.entryFormat!=  null))  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    if(format    ==    FORMAT_NEW)    {    break;    }    	non-compiled	[CE]  ';'  expected	79	None	replace
1516	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	107	None	replace
1517	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  short  cannot  be  dereferenced  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  short  cannot  be  dereferenced	107	None	replace
1518	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format.length()  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format.length()  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format.length()  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	107	None	replace
1519	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(  [CE]  illegal  start  of  expression  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
1520	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	109	None	replace
1521	[BUG]  [BUGGY]  if(format!=  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	109	None	replace
1522	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	109	None	replace
1523	[BUG]  [BUGGY]  if(format!=  null)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  null)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  null)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	109	None	replace
1524	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(  [CE]  illegal  start  of  expression  [FE]                                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1525	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	106	None	replace
1526	[BUG]  [BUGGY]  if(format!=  null)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  null)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  null)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	106	None	replace
1527	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	106	None	replace
1528	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(System.out);  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(System.out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(System.out);	  OutputStream    out    =    new    OutputStreamWriter();    out.write(format);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
1529	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(this.entryFormat);  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(this.entryFormat);	  OutputStream    out    =    new    OutputStreamWriter();    out.write(format);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
1530	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(this.entryFormat);  out.write(format);  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(this.entryFormat);  out.write(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(this.entryFormat);  out.write(format);	  OutputStream    out    =    new    OutputStreamWriter();    out.write(format);    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
1531	[BUG]  [BUGGY]  cpioEntry.setFormat(format  +  format,  finished);  [CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format  +  format,  finished);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format  +  format,  finished);	  cpioEntry.setFormat(format    +    1);    	non-compiled	[CE]  method  setFormat  in  class  CpioArchiveEntry  cannot  be  applied  to  given  types;	90	None	replace
1532	[BUG]  [BUGGY]  this.entryFormat  =  format  ==  null?  getFormat(format):  format;  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  ==  null?  getFormat(format):  format;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  ==  null?  getFormat(format):  format;	  this.entryFormat    =    format    {    null?    getFormat()    :    format;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	205	None	replace
1533	[BUG]  [BUGGY]  this.entryFormat  =  format  ==  null?  getFormatInstance()  :  format;  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  ==  null?  getFormatInstance()  :  format;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  ==  null?  getFormatInstance()  :  format;	  this.entryFormat    =    format    {    null?    getFormat()    :    format;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	205	None	replace
1534	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format   "):  format.toString();  [CE]  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format   "):  format.toString();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  format   "):  format.toString();	  throw    new    IllegalArgumentException(   "Unknown    format    format       "):    format;    	non-compiled	[CE]  	200	None	replace
1535	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format   "):  format.getBinaryFormat();  [CE]  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format   "):  format.getBinaryFormat();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  format   "):  format.getBinaryFormat();	  throw    new    IllegalArgumentException(   "Unknown    format    format       "):    format;    	non-compiled	[CE]  	200	None	replace
1536	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	60	None	replace
1537	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	60	None	replace
1538	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  >  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW_CRC  ||  format  >  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	117	2	replace
1539	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  >  FORMAT_NEW_CRC)  {  break;  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  >  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  >  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	117	2	replace
1540	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  format ");  [CE]  unreachable  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  format ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  format ");	  throw    new    IllegalArgumentException(   "):    format;    	non-compiled	[CE]  unreachable  statement	120	None	replace
1541	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BAINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_OLD_BAINARY  [FE]        IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BAINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BAINARY)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format    ==    FORMAT_OLD_BAINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_OLD_BAINARY	159	None	replace
1542	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Binary  format  not  supported.  Format: ");  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Binary  format  not  supported.  Format: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Binary  format  not  supported.  Format: ");	  throw    new    IllegalArgumentException(   "Binary    format    not    supported.   ");    	non-compiled	[CE]  unreachable  statement	182	None	replace
1543	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Binary  format  not  supported. ");  [CE]  not  a  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throw  new  IllegalArgumentException( "Binary  format  not  supported. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throw  new  IllegalArgumentException( "Binary  format  not  supported. ");	  throw    new    IllegalArgumentException(   "Binary    format    not    supported.   ");    	non-compiled	[CE]  not  a  statement	182	None	replace
1544	[BUG]  [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(this.entryFormat),  format);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry.setFormat(new  OutputStreamReader(this.entryFormat),  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry.setFormat(new  OutputStreamReader(this.entryFormat),  format);	  cpioEntry.setFormat(new    OutputStreamReader(format),    this.entryFormat);    	non-compiled	[CE]  cannot  find  symbol	218	None	replace
1545	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put  [CE]  not  a  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put	  if(format    ==    FORMAT_NEW_CRC)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	57	None	replace
1546	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BRINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BRINARY  [FE]                IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BRINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BRINARY)  {  break;  }	  if(format    ==    FORMAT_NEW_ASCII)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BRINARY	119	None	replace
1547	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
1548	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
1549	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  <  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  <  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
1550	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  <  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  <  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  <  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
1551	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
1552	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
1553	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  [CE]  orphaned  default  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;	  	non-compiled	[CE]  orphaned  default	3	None	add
1554	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  [Delete]  FORMAT_OLD_BINARY)  {  break;  }  [CE]  ')'  expected  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  [Delete]  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  [Delete]  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  ')'  expected	3	None	add
1555	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
1556	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    >=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	3	1	add
1557	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	47	None	replace
1558	[BUG]  [BUGGY]  if(format!=  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	47	None	replace
1559	[BUG]  [BUGGY]  if(format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  null)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	47	None	replace
1560	[BUG]  [BUGGY]  if(format!=  null)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  null)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  null)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	47	None	replace
1561	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	47	None	replace
1562	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(this.entryFormat,  format);  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(this.entryFormat,  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(this.entryFormat,  format);	  cpioEntry.setFormat(new    InputStreamReader(format),    this.entryFormat);    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
1563	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  break;  CpioEntry  cpioEntry  =  getCpioEntry(format);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format);  break;  CpioEntry  cpioEntry  =  getCpioEntry(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);    break;    CpioEntry  cpioEntry  =  getCpioEntry(format);	  	non-compiled	[CE]  cannot  find  symbol	172	None	add
1564	[BUG]  [BUGGY]  cpioEntry.setFormat(format);  break;  CpioEntry  cpioEntry  =(CpioEntry)cpio.clone();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(format);  break;  CpioEntry  cpioEntry  =(CpioEntry)cpio.clone();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(format);    break;    CpioEntry  cpioEntry  =(CpioEntry)cpio.clone();	  	non-compiled	[CE]  cannot  find  symbol	172	None	add
1565	[BUG]  [BUGGY]  because(format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	175	None	replace
1566	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	175	None	replace
1567	[BUG]  [BUGGY]  because(format  >=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  >=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  >=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	175	None	replace
1568	[BUG]  [BUGGY]  this.entryFormat  =  format  *  1;  [CE]  possible  loss  of  precision  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  format  *  1;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  format  *  1;	  this.entryFormat    =    format    +    1;    	non-compiled	[CE]  possible  loss  of  precision	72	None	replace
1569	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	99	None	replace
1570	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	99	None	replace
1571	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [CE]  not  a  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	99	None	replace
1572	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	1	1	add
1573	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	1	1	add
1574	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	1	1	add
1575	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	1	1	add
1576	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	1	1	add
1577	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	1	1	add
1578	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  <  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  <  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	1	1	add
1579	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  <  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  <  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format  <  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	1	1	add
1580	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	58	None	replace
1581	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	58	None	replace
1582	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1583	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1584	[BUG]  [BUGGY]  cpioEntry.write(format);  out.write('n');  [CE]  cannot  find  symbol  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.write(format);  out.write('n');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.write(format);  out.write('n');	  cpioEntry.setFormat(format);    out.write('n');    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
1585	[BUG]  [BUGGY]  cpioEntry.setPath(format);  out.write('n');  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setPath(format);  out.write('n');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setPath(format);  out.write('n');	  cpioEntry.setFormat(format);    out.write('n');    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
1586	[BUG]  [BUGGY]  cpioEntry.setString(format);  out.write('n');  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setString(format);  out.write('n');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setString(format);  out.write('n');	  cpioEntry.setFormat(format);    out.write('n');    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
1587	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  &&  format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW  &&  format!=  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	144	2	replace
1588	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  &&  format!=  FORMAT_NEW)  {  break;  }  [FE]  IllegalArgumentException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  &&  format!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  &&  format!=  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	144	2	replace
1589	[BUG]  [BUGGY]  if(format  ==  forMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [CE]  cannot  find  symbol  forMAT_NEW  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  forMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  forMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format!=    FORMAT_NEW)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  forMAT_NEW	144	None	replace
1590	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format    >>    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  EOFException  	7	1	replace
1591	[BUG]  [BUGGY]  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]              IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format    >>    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  EOFException  	7	1	replace
1592	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_OLD_BINARY  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format    >>    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  EOFException  	7	1	replace
1593	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]                IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_BINARY  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format    >>    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  EOFException  	7	1	replace
1594	[BUG]  [BUGGY]  reason(this.entryFormat!=  null))  {  break;  }  else  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [CE]  ';'  expected  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  reason(this.entryFormat!=  null))  {  break;  }  else  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	reason(this.entryFormat!=  null))  {  break;  }  else  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    If(format    ==    FORMAT_NEW)    {    break;    }    	non-compiled	[CE]  ';'  expected	85	None	replace
1595	[BUG]  [BUGGY]  reason(this.entryFormat!=  null))  {  break;  }  else  if(format  ==  FORMAT_NEW)  {  break;  }  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  reason(this.entryFormat!=  null))  {  break;  }  else  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	reason(this.entryFormat!=  null))  {  break;  }  else  if(format  ==  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    If(format    ==    FORMAT_NEW)    {    break;    }    	non-compiled	[CE]  ';'  expected	85	None	replace
1596	[BUG]  [BUGGY]  reason(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_NEW)  {  break;  }  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  reason(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	reason(format  ==  FORMAT_NEW)  {  break;  }  else  if(format  ==  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    If(format    ==    FORMAT_NEW)    {    break;    }    	non-compiled	[CE]  ';'  expected	85	None	replace
1597	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	101	None	replace
1598	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	101	None	replace
1599	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1600	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [CE]  not  a  statement  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	101	None	replace
1601	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null.  Format: ",  format);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null.  Format: ",  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null.  Format: ",  format);	  throw    new    IllegalArgumentException(   "Format    is    null.    Format:   "    +    format);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,short)	40	None	replace
1602	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	184	None	replace
1603	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	184	None	replace
1604	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	168	None	replace
1605	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCI)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_OLD_ASCI  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCI)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCI)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_OLD_ASCI	162	None	add
1606	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
1607	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put  [CE]  not  a  statement  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	50	None	replace
1608	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	176	None	replace
1609	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  format,  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  format,  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  format,  this.entryFormat);	  cpioEntry.setFormat(new    InputStreamReader(format),    format);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
1610	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  format,  CpioArchiveEntry.DEFAULT);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  format,  CpioArchiveEntry.DEFAULT);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  format,  CpioArchiveEntry.DEFAULT);	  cpioEntry.setFormat(new    InputStreamReader(format),    format);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
1611	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  type, ");  [CE]  unreachable  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  type, ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  type, ");	  throw    new    IllegalArgumentException(   "Unknown    format    type   ");    	non-compiled	[CE]  unreachable  statement	181	None	replace
1612	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(this.entryFormat);  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamReader(this.entryFormat);	  CpioEntry    cpioEntry    =    new    OutputStreamReader(format);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
1613	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format)+  1;  [CE]  cannot  find  symbol  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamReader(format)+  1;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamReader(format)+  1;	  CpioEntry    cpioEntry    =    new    OutputStreamReader(format);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
1614	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap  <  Short,  Short>(4);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap  <  Short,  Short>(4);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap  <  Short,  Short>(4);	  this.entryFormat    =    new    HashMap    <    Short,    Short>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	165	None	replace
1615	[BUG]  [BUGGY]  this.entryFormat  =  new  HashMap  <  Short,  Short>(8);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  new  HashMap  <  Short,  Short>(8);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  new  HashMap  <  Short,  Short>(8);	  this.entryFormat    =    new    HashMap    <    Short,    Short>();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	165	None	replace
1616	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_RCC)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_RCC  [FE]          IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_RCC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_RCC)  {  break;  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_RCC	115	None	replace
1617	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null!. ");  [CE]  unreachable  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null!. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null!. ");	  throw    new    IllegalArgumentException(   "Format    is    null!   ");    	non-compiled	[CE]  unreachable  statement	38	None	replace
1618	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null!! ");  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  null!! ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  null!! ");	  throw    new    IllegalArgumentException(   "Format    is    null!   ");    	non-compiled	[CE]  unreachable  statement	38	None	replace
1619	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	177	None	replace
1620	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  length  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  length	177	None	replace
1621	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	177	None	replace
1622	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(out,  format),  this);  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(out,  format),  this);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(out,  format),  this);	  cpioEntry.setFormat(new    OutputStreamWriter(out,    format));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
1623	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(out,  format),  CpioArchiveEntry.DEFAULT_BINARY);  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(out,  format),  CpioArchiveEntry.DEFAULT_BINARY);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(out,  format),  CpioArchiveEntry.DEFAULT_BINARY);	  cpioEntry.setFormat(new    OutputStreamWriter(out,    format));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
1624	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.entries.clone();  [CE]  cannot  find  symbol  entries  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =(OutputStream)this.entries.clone();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =(OutputStream)this.entries.clone();	  OutputStream    out    =(OutputStream)this.entryFormat.clone();    	non-compiled	[CE]  cannot  find  symbol  entries	24	None	replace
1625	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  EOFException  	66	1	replace
1626	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  EOFException  	66	1	replace
1627	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY  ||  format  ==  null)  {  break;  }  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY  ||  format  ==  null)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY  ||  format  ==  null)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	66	None	replace
1628	[BUG]  [BUGGY]  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  'else'  without  'if'  [FE]                  IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  }  else  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	}  else  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    If(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
1629	[BUG]  [BUGGY]  }  else  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  [CE]  'else'  without  'if'  [FE]                    IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  }  else  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	}  else  if(format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    If(format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
1630	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	102	None	replace
1631	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	102	None	replace
1632	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format),  format,  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamReader(format),  format,  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamReader(format),  format,  this.entryFormat);	  cpioEntry.setFormat(new    OutputStreamReader(format),    format);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
1633	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(this.entryFormat,  format));  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(this.entryFormat,  format));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(this.entryFormat,  format));	  cpioEntry.setFormat(new    InputStreamReader(out,    format));    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
1634	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(out,  format),  this);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(out,  format),  this);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(out,  format),  this);	  cpioEntry.setFormat(new    InputStreamReader(out,    format));    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
1635	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nameCount;  ++i)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  nameCount  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  nameCount;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  nameCount;  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  nameCount	136	None	replace
1636	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.length;  ++i)  {  format.put(i,  format);  }  [CE]  cannot  find  symbol  length  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  names.length;  ++i)  {  format.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  names.length;  ++i)  {  format.put(i,  format);  }	  for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  length	136	None	replace
1637	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  format.length;  ++i)  {  out.put(i,  format);  }  [CE]  short  cannot  be  dereferenced  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  format.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  format.length;  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  short  cannot  be  dereferenced	136	None	replace
1638	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  [CE]  orphaned  default  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;	  	non-compiled	[CE]  orphaned  default	63	None	add
1639	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  Format  ==  FORMAT_NEW_CRC)  {  break;  }  [CE]  cannot  find  symbol  Format  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format  ==  FORMAT_NEW  ||  Format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format  ==  FORMAT_NEW  ||  Format  ==  FORMAT_NEW_CRC)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  Format	63	None	add
1640	[BUG]  [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(out,  format),  out);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  OutputStreamWriter(out,  format),  out);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  OutputStreamWriter(out,  format),  out);	  cpioEntry.setFormat(new    OutputStreamWriter(format),    out);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
1641	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Unknown  format: ");  [CE]  unreachable  statement  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalStateException( "Unknown  format: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalStateException( "Unknown  format: ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  unreachable  statement	112	None	replace
1642	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Format  not  followed  by  a  string. ");  [CE]  unreachable  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalStateException( "Format  not  followed  by  a  string. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalStateException( "Format  not  followed  by  a  string. ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  unreachable  statement	112	None	replace
1643	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.entries.length;  i++)  {  out.put(i,  format);  }  [CE]  cannot  find  symbol  entries  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  this.entries.length;  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  this.entries.length;  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol  entries	105	None	replace
1644	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  format.cloneTree());  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  format.cloneTree());  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(format,  format.cloneTree());	  CpioEntry    cpioEntry    =    new    CpioEntry(format,    format);    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
1645	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(this.entryFormat);  out.write('n');  [CE]  cannot  find  symbol  [FE]                              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(this.entryFormat);  out.write('n');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(this.entryFormat);  out.write('n');	  OutputStream    out    =    new    OutputStreamWriter(format);    out.write('n');    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1646	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(this.format);  out.write('n');  [CE]  cannot  find  symbol  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(this.format);  out.write('n');  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(this.format);  out.write('n');	  OutputStream    out    =    new    OutputStreamWriter(format);    out.write('n');    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1647	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  this.entryFormat);  [CE]  cannot  find  symbol  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(format,  this.entryFormat);	  OutputStream    out    =    new    OutputStreamWriter(format);    out.write('n');    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1648	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  SHORT_DESCRIPTOR);  [CE]  cannot  find  symbol  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(format,  SHORT_DESCRIPTOR);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  new  OutputStreamWriter(format,  SHORT_DESCRIPTOR);	  OutputStream    out    =    new    OutputStreamWriter(format);    out.write('n');    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
1649	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  cannot  be  null.  If(format  ==  FORMAT_OLD_BINARY)  {  throw  new  IllegalArgumentException( "Format  cannot  be  null. ");  }  [CE]  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  cannot  be  null.  If(format  ==  FORMAT_OLD_BINARY)  {  throw  new  IllegalArgumentException( "Format  cannot  be  null. ");  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  cannot  be  null.  If(format  ==  FORMAT_OLD_BINARY)  {  throw  new  IllegalArgumentException( "Format  cannot  be  null. ");  }	  throw    new    IllegalArgumentException(   "Format    cannot    be    null.   ");    	non-compiled	[CE]  	94	None	replace
1650	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  cannot  be  null.  If(format  ==  FORMAT_NEW)  {  throw  new  IllegalArgumentException( "Format  cannot  be  null. ");  }  [CE]  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  cannot  be  null.  If(format  ==  FORMAT_NEW)  {  throw  new  IllegalArgumentException( "Format  cannot  be  null. ");  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  cannot  be  null.  If(format  ==  FORMAT_NEW)  {  throw  new  IllegalArgumentException( "Format  cannot  be  null. ");  }	  throw    new    IllegalArgumentException(   "Format    cannot    be    null.   ");    	non-compiled	[CE]  	94	None	replace
1651	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  cannot  be  null.  If(format  ==  FORMAT_NON_NULL)  {  throw  new  IllegalArgumentException( "Format  cannot  be  null. ");  }  [CE]  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  cannot  be  null.  If(format  ==  FORMAT_NON_NULL)  {  throw  new  IllegalArgumentException( "Format  cannot  be  null. ");  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  cannot  be  null.  If(format  ==  FORMAT_NON_NULL)  {  throw  new  IllegalArgumentException( "Format  cannot  be  null. ");  }	  throw    new    IllegalArgumentException(   "Format    cannot    be    null.   ");    	non-compiled	[CE]  	94	None	replace
1652	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Format  cannot  be  null. ");  [CE]  not  a  statement  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throw  new  IllegalArgumentException( "Format  cannot  be  null. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throw  new  IllegalArgumentException( "Format  cannot  be  null. ");	  throw    new    IllegalArgumentException(   "Format    cannot    be    null.   ");    	non-compiled	[CE]  not  a  statement	94	None	replace
1653	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  cannot  be  null.  If(format  ==  FORMAT_OLD)  {  throw  new  IllegalArgumentException( "Format  cannot  be  null. ");  }  [CE]  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  cannot  be  null.  If(format  ==  FORMAT_OLD)  {  throw  new  IllegalArgumentException( "Format  cannot  be  null. ");  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  cannot  be  null.  If(format  ==  FORMAT_OLD)  {  throw  new  IllegalArgumentException( "Format  cannot  be  null. ");  }	  throw    new    IllegalArgumentException(   "Format    cannot    be    null.   ");    	non-compiled	[CE]  	94	None	replace
1654	[BUG]  [BUGGY]  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  >=  FORMAT_NEW  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	137	None	replace
1655	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	137	None	replace
1656	[BUG]  [BUGGY]  if(format  >=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  >=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	55	None	replace
1657	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	166	None	replace
1658	[BUG]  [BUGGY]  OutputStream  out  =  getEntryFormat(format,  CpioArchiveEntry.class);  [CE]  cannot  find  symbol  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  getEntryFormat(format,  CpioArchiveEntry.class);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  getEntryFormat(format,  CpioArchiveEntry.class);	  OutputStream    out    =    getEntryFormat(format);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
1659	[BUG]  [BUGGY]  OutputStream  out  =  getEntryFormat(format,  this.cpioEntry);  [CE]  cannot  find  symbol  [FE]                                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  getEntryFormat(format,  this.cpioEntry);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  getEntryFormat(format,  this.cpioEntry);	  OutputStream    out    =    getEntryFormat(format);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
1660	[BUG]  [BUGGY]  OutputStream  out  =  getEntryFormat(format)+  1;  [CE]  cannot  find  symbol  [FE]                                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  getEntryFormat(format)+  1;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  getEntryFormat(format)+  1;	  OutputStream    out    =    getEntryFormat(format);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
1661	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  &&  format.length()  >  0)  {  break;  }  [CE]  short  cannot  be  dereferenced  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  &&  format.length()  >  0)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  &&  format.length()  >  0)  {  break;  }	  if(format!=    FORMAT_NEW)    {    break;    }    	non-compiled	[CE]  short  cannot  be  dereferenced	142	None	replace
1662	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(this.entryFormat!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(this.entryFormat!=  FORMAT_NEW)  {  break;  }	  if(format!=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	142	2	replace
1663	[BUG]  [BUGGY]  if(this.entryFormat!=  FORMAT_NEW)  {  break;  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(this.entryFormat!=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(this.entryFormat!=  FORMAT_NEW)  {  break;  }	  if(format!=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	142	2	replace
1664	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  &&  format.equals( " "))  {  break;  }  [CE]  short  cannot  be  dereferenced  [FE]        IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  &&  format.equals( " "))  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  &&  format.equals( " "))  {  break;  }	  if(format!=    FORMAT_NEW)    {    break;    }    	non-compiled	[CE]  short  cannot  be  dereferenced	142	None	replace
1665	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	210	None	replace
1666	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	210	None	replace
1667	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    	compilable	  [FE]  EOFException  	163	1	replace
1668	[BUG]  [BUGGY]  if(format!=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [FE]  EOFException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    	compilable	  [FE]  EOFException  	163	1	replace
1669	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  >=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	163	2	replace
1670	[BUG]  [BUGGY]  if(format  >=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  >=  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	163	2	replace
1671	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	208	None	replace
1672	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	208	None	replace
1673	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	208	None	replace
1674	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	138	None	replace
1675	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format  +  ')'  [CE]  ')'  expected  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format  +  ')'  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format  +  ')'	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	138	None	replace
1676	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	56	None	replace
1677	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: "  +  format);  [CE]  not  a  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: "  +  format);	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format:   "    +    format);    	non-compiled	[CE]  not  a  statement	96	None	replace
1678	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: "  +  format,  this);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,CpioArchiveOutputStream)  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: "  +  format,  this);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  a  valid  format: "  +  format,  this);	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format:   "    +    format);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,CpioArchiveOutputStream)	96	None	replace
1679	[BUG]  [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  format,  BINARY);  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setFormat(new  InputStreamReader(format),  format,  BINARY);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setFormat(new  InputStreamReader(format),  format,  BINARY);	  cpioEntry.setFormat(new    InputStreamReader(format),    out);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
1680	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BRC  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BRC  [FE]        IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BRC  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BRC  ||  format  ==  FORMAT_OLD_ASCII)  {  break;  }	  if(format    ==    FORMAT_NEW_BINARY    ||    format    ==    FORMAT_OLD_ASCII)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BRC	114	None	replace
1681	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	193	None	replace
1682	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	193	None	replace
1683	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  >=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	193	None	replace
1684	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	110	None	replace
1685	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.decode(this.entryFormat.getOutputFile());  [CE]  short  cannot  be  dereferenced  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat.decode(this.entryFormat.getOutputFile());  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.decode(this.entryFormat.getOutputFile());	  OutputStream    out    =    this.entryFormat.getOutputFile();    	non-compiled	[CE]  short  cannot  be  dereferenced	25	None	replace
1686	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value, ");  [CE]  unreachable  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value, ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value, ");	  throw    new    IllegalArgumentException(   "Format    not    followed    by    a    string    value   ");    	non-compiled	[CE]  unreachable  statement	124	None	replace
1687	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value! ");  [CE]  unreachable  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value! ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  not  followed  by  a  string  value! ");	  throw    new    IllegalArgumentException(   "Format    not    followed    by    a    string    value   ");    	non-compiled	[CE]  unreachable  statement	124	None	replace
1688	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  names.keySet();  i++)  {  out.put(i,  format);  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  names.keySet();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  names.keySet();  i++)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	146	None	replace
1689	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  &&  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=  FORMAT_NEW  &&  format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	71	2	replace
1690	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  &&  format  ==  FORMAT_NEW_CRC)  {  break;  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  &&  format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  &&  format  ==  FORMAT_NEW_CRC)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	71	2	replace
1691	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  &&  format.equals( " "))  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  &&  format.equals( " "))  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  &&  format.equals( " "))  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format!=    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	155	None	replace
1692	[BUG]  [BUGGY]  if(format  >=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  >=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(null,    format);    }    	non-compiled	[CE]  orphaned  default	149	None	replace
1693	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(null,    format);    }    	non-compiled	[CE]  orphaned  default	149	None	replace
1694	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format,  out.readLine()));  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format,  out.readLine()));  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(new  OutputStreamReader(format,  out.readLine()));	  CpioEntry    cpioEntry    =    new    CpioEntry(new    OutputStreamReader(format));    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
1695	[BUG]  [BUGGY]  this.entryFormat  =  FormatUtils.getIntValue(format);  [CE]  cannot  find  symbol  FormatUtils  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  FormatUtils.getIntValue(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  FormatUtils.getIntValue(format);	  this.entryFormat    =    entryFormat;    	non-compiled	[CE]  cannot  find  symbol  FormatUtils	74	None	replace
1696	[BUG]  [BUGGY]  this.entryFormat  =  FormatUtils.readLineBinary(format);  [CE]  cannot  find  symbol  FormatUtils  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  FormatUtils.readLineBinary(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  FormatUtils.readLineBinary(format);	  this.entryFormat    =    entryFormat;    	non-compiled	[CE]  cannot  find  symbol  FormatUtils	74	None	replace
1697	[BUG]  [BUGGY]  this.entryFormat  =  FormatUtils.currentSecond();  [CE]  cannot  find  symbol  FormatUtils  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  this.entryFormat  =  FormatUtils.currentSecond();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	this.entryFormat  =  FormatUtils.currentSecond();	  this.entryFormat    =    entryFormat;    	non-compiled	[CE]  cannot  find  symbol  FormatUtils	74	None	replace
1698	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  for  format: ");  [CE]  unreachable  statement  [FE]            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  for  format: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  for  format: ");	  throw    new    IllegalArgumentException(   "Unknown    format:   ");    	non-compiled	[CE]  unreachable  statement	111	None	replace
1699	[BUG]  [BUGGY]  because(format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	206	None	replace
1700	[BUG]  [BUGGY]  because(format  >=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  >=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  >=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	206	None	replace
1701	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	206	None	replace
1702	[BUG]  [BUGGY]  because(format!=  FORMAT_OLD_BINARY)  {  break;  }  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format!=  FORMAT_OLD_BINARY)  {  break;  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	206	None	replace
1703	[BUG]  [BUGGY]  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	212	None	replace
1704	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(this.entryFormat);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  OutputStreamWriter(this.entryFormat);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  OutputStreamWriter(this.entryFormat);	  CpioEntry    cpioEntry    =    new    OutputStreamWriter(format);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
1705	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  [CE]  orphaned  default  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  >=  FORMAT_NEW)  {  break;	  	non-compiled	[CE]  orphaned  default	80	None	add
1706	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  [Delete]  FORMAT_NEW)  {  break;  }  [CE]  ')'  expected  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  [Delete]  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  [Delete]  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  ')'  expected	80	None	add
1707	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  [BUGGY]  FORMAT_NEW)  {  break;  }  [CE]  ')'  expected  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format  >=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  [BUGGY]  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format    >=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  [BUGGY]  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  ')'  expected	80	None	add
1708	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  was  null. ");  [CE]  <identifier>  expected  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  was  null. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  was  null. ");	  Throwables.throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
1709	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  does  not  exist. ");  [CE]  <identifier>  expected  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Format  does  not  exist. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throwables.throw  new  IllegalArgumentException( "Format  does  not  exist. ");	  Throwables.throw    new    IllegalArgumentException(   "Format    is    null.   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
1710	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >>  FORMAT_OLD_BINARY)  {  break;  }  [CE]  incompatible  types  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >>  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format  >>  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  incompatible  types	5	None	add
1711	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  [CE]  orphaned  default  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;	  	non-compiled	[CE]  orphaned  default	5	None	add
1712	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
1713	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  >=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
1714	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
1715	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	compilable	  [FE]  EOFException  	5	1	add
1716	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  [CE]  orphaned  default  [FE]            EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {	  	non-compiled	[CE]  orphaned  default	5	None	add
1717	[BUG]  [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BAINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_OLD_BAINARY  [FE]              EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    if(format!=  FORMAT_OLD_BINARY)  {  break;  }  if(format  ==  FORMAT_OLD_BAINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_OLD_BINARY)        {        break;        }        if(format!=    FORMAT_OLD_BINARY)    {    break;    }    if(format  ==  FORMAT_OLD_BAINARY)  {  break;  }  if(format!=  FORMAT_OLD_BINARY)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_OLD_BAINARY	5	None	add
1718	[BUG]  [BUGGY]  because(format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	191	None	replace
1719	[BUG]  [BUGGY]  because(this.entryFormat  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(this.entryFormat  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(this.entryFormat  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	191	None	replace
1720	[BUG]  [BUGGY]  because(format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	191	None	replace
1721	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BRC  [FE]          IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW_BINARY    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BRC	190	None	replace
1722	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_RCC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_RCC  [FE]            IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_RCC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_RCC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW_BINARY    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_RCC	190	None	replace
1723	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_ABSTRACT  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_ABSTRACT  [FE]              IllegalArgumentException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_ABSTRACT  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_ABSTRACT  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format    ==    FORMAT_NEW_BINARY    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_ABSTRACT	190	None	replace
1724	[BUG]  [BUGGY]  because(format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	183	None	replace
1725	[BUG]  [BUGGY]  because(format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format  [CE]  ';'  expected  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format!=  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format	  because(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	183	None	replace
1726	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist:  ' ");  [CE]  unreachable  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  does  not  exist:  ' ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  does  not  exist:  ' ");	  throw    new    IllegalArgumentException(   "Format    does    not    exist:   ");    	non-compiled	[CE]  unreachable  statement	151	None	replace
1727	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	209	None	replace
1728	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	209	None	replace
1729	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	209	None	replace
1730	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >=  FORMAT_NEW  ||  format  >  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format  >=  FORMAT_NEW  ||  format  >  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	196	1	replace
1731	[BUG]  [BUGGY]  if(format  >=  FORMAT_NEW  ||  format  >  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >=  FORMAT_NEW  ||  format  >  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  >=  FORMAT_NEW  ||  format  >  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	196	1	replace
1732	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	196	1	replace
1733	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  ||  format  >=  FORMAT_NEW)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    >=    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  EOFException  	196	1	replace
1734	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  format.size();  ++i)  {  out.put(i,  format);  }  [CE]  short  cannot  be  dereferenced  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  format.size();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  format.size();  ++i)  {  out.put(i,  format);  }	  for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  short  cannot  be  dereferenced	42	None	replace
1735	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  format.length();  ++i)  {  output.put(i,  format);  }  [CE]  short  cannot  be  dereferenced  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  for(int  i  =  0;  i  <  format.length();  ++i)  {  output.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	for(int  i  =  0;  i  <  format.length();  ++i)  {  output.put(i,  format);  }	  for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  short  cannot  be  dereferenced	42	None	replace
1736	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	103	None	replace
1737	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	103	None	replace
1738	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  &&  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=  FORMAT_NEW  &&  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	140	2	replace
1739	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  &&  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  &&  format  ==  FORMAT_OLD_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  &&  format  ==  FORMAT_OLD_BINARY)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	140	2	replace
1740	[BUG]  [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_BINARY  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_OLD_BINARY  ||  format  ==  FORMAT_NEW_BINARY)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_OLD_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_BINARY	140	None	replace
1741	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  out;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [CE]  not  a  statement  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  out;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  out;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format    	non-compiled	[CE]  not  a  statement	148	None	replace
1742	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [CE]  ')'  expected  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format    	non-compiled	[CE]  ')'  expected	148	None	replace
1743	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  not  a  valid  format ");  [CE]  not  a  statement  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  not  a  valid  format ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throw  new  IllegalArgumentException( "Format  is  not  a  valid  format ");	  throw    new    IllegalArgumentException(   "Format    is    not    a    valid    format   ");    	non-compiled	[CE]  not  a  statement	97	None	replace
1744	[BUG]  [BUGGY]  if(format!=  null)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  null)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  null)  {  if(format  ==  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_CRC)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	44	None	replace
1745	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.format(format);  [CE]  short  cannot  be  dereferenced  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat.format(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.format(format);	  OutputStream    out    =    this.entryFormat.getOutputStream();    	non-compiled	[CE]  short  cannot  be  dereferenced	28	None	replace
1746	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.openArchiveEntry();  [CE]  short  cannot  be  dereferenced  [FE]                                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat.openArchiveEntry();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.openArchiveEntry();	  OutputStream    out    =    this.entryFormat.getOutputStream();    	non-compiled	[CE]  short  cannot  be  dereferenced	28	None	replace
1747	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.writeEndObject();  [CE]  short  cannot  be  dereferenced  [FE]                                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat.writeEndObject();  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.writeEndObject();	  OutputStream    out    =    this.entryFormat.getOutputStream();    	non-compiled	[CE]  short  cannot  be  dereferenced	28	None	replace
1748	[BUG]  [BUGGY]  OutputStream  out  =  this.entryFormat.writeOut(format);  [CE]  short  cannot  be  dereferenced  [FE]                                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  OutputStream  out  =  this.entryFormat.writeOut(format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	OutputStream  out  =  this.entryFormat.writeOut(format);	  OutputStream    out    =    this.entryFormat.getOutputStream();    	non-compiled	[CE]  short  cannot  be  dereferenced	28	None	replace
1749	[BUG]  [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  SHORT_BINARY);  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  CpioEntry  cpioEntry  =  new  CpioEntry(format,  SHORT_BINARY);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	CpioEntry  cpioEntry  =  new  CpioEntry(format,  SHORT_BINARY);	  CpioEntry    cpioEntry    =    new    CpioEntry(format);    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
1750	[BUG]  [BUGGY]  if(format!=  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  null)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	104	None	replace
1751	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  null)  {  break;  }  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  null)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  null)  {  break;  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	104	None	replace
1752	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NW)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NW  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format!=  FORMAT_NW)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  FORMAT_NW	82	None	add
1753	[BUG]  [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  [Delete]  FORMAT_NEW)  {  break;  }  [CE]  ')'  expected  [FE]      EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format    ==    FORMAT_NEW)    {    break;    }    if(format!=  FORMAT_NEW)  {  break;  }  if(format  ==  FORMAT_NEW)  {  break;  }  if(format  [Delete]  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format        ==        FORMAT_NEW)        {        break;        }        if(format!=    FORMAT_NEW)    {    break;    }    if(format  ==  FORMAT_NEW)  {  break;  }  if(format  [Delete]  FORMAT_NEW)  {  break;  }	  	non-compiled	[CE]  ')'  expected	82	None	add
1754	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_BINARY  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	194	None	replace
1755	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
1756	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC  ||  format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_OLD_BINARY    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	194	None	replace
1757	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  [CE]  orphaned  default  [FE]    IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;	  	non-compiled	[CE]  orphaned  default	70	None	add
1758	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  Format  ==  FORMAT_NEW_CRC)  {  break;  }  [CE]  cannot  find  symbol  Format  [FE]      IllegalArgumentException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CRC)  {  break;  }  if(format!=  FORMAT_NEW  ||  Format  ==  FORMAT_NEW_CRC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW_CRC)    {    break;    }    if(format!=  FORMAT_NEW  ||  Format  ==  FORMAT_NEW_CRC)  {  break;  }	  	non-compiled	[CE]  cannot  find  symbol  Format	70	None	add
1759	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	108	None	replace
1760	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	108	None	replace
1761	[BUG]  [BUGGY]  because(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  because(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	because(format  ==  FORMAT_NEW_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  ';'  expected	192	None	replace
1762	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format);  [CE]  not  a  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format);  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format);	  throw    new    IllegalArgumentException(   "Unknown    format    format    '   "    +    format);    	non-compiled	[CE]  not  a  statement	198	None	replace
1763	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format;  [CE]  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Unknown  format  format  ' "  +  format;	  throw    new    IllegalArgumentException(   "Unknown    format    format    '   "    +    format);    	non-compiled	[CE]  	198	None	replace
1764	[BUG]  [BUGGY]  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  ||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	||  format  ==  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  Format.length();  i++)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    Format.length();    i++)    {    out.put(i,    format);    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
1765	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  &&  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	add	if(format!=  FORMAT_NEW  &&  format  ==  FORMAT_NEW)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	69	2	replace
1766	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW  &&  format  ==  FORMAT_NEW)  {  break;  }  [FE]  IllegalArgumentException  [FE]    EOFException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW  &&  format  ==  FORMAT_NEW)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW  &&  format  ==  FORMAT_NEW)  {  break;  }	  if(format!=    FORMAT_NEW    ||    format    ==    FORMAT_NEW)    {    break;    }    	compilable	  [FE]  IllegalArgumentException  	69	2	replace
1767	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_RCC)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_RCC  [FE]              EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_RCC)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_RCC)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_RCC	67	None	replace
1768	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CLIENT)  {  break;  }  [CE]  cannot  find  symbol  FORMAT_NEW_CLIENT  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CLIENT)  {  break;  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW  ||  format  ==  FORMAT_NEW_CLIENT)  {  break;  }	  if(format    ==    FORMAT_NEW    ||    format    ==    FORMAT_NEW_BINARY)    {    break;    }    	non-compiled	[CE]  cannot  find  symbol  FORMAT_NEW_CLIENT	67	None	replace
1769	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  not  null. ");  [CE]  not  a  statement  [FE]                EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  Throw  new  IllegalArgumentException( "Format  is  not  null. ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	Throw  new  IllegalArgumentException( "Format  is  not  null. ");	  throw    new    IllegalArgumentException(   "Format    is    not    null.   ");    	non-compiled	[CE]  not  a  statement	37	None	replace
1770	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  null, ");  [CE]  unreachable  statement  [FE]                  EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  null, ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  null, ");	  throw    new    IllegalArgumentException(   "Format    is    not    null.   ");    	non-compiled	[CE]  unreachable  statement	37	None	replace
1771	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  null: ");  [CE]  unreachable  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  throw  new  IllegalArgumentException( "Format  is  not  null: ");  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	throw  new  IllegalArgumentException( "Format  is  not  null: ");	  throw    new    IllegalArgumentException(   "Format    is    not    null.   ");    	non-compiled	[CE]  unreachable  statement	37	None	replace
1772	[BUG]  [BUGGY]  cpioEntry.setPadded(true);  break;  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setPadded(true);  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setPadded(true);  break;	  cpioEntry.setFormat(format);    break;    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
1773	[BUG]  [BUGGY]  cpioEntry.setCpio(format);  break;  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  cpioEntry.setCpio(format);  break;  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	cpioEntry.setCpio(format);  break;	  cpioEntry.setFormat(format);    break;    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
1774	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW)  {  out;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [CE]  not  a  statement  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW)  {  out;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW)  {  out;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(null,    format);    }    	non-compiled	[CE]  not  a  statement	158	None	replace
1775	[BUG]  [BUGGY]  if(format  >=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  >=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  >=  FORMAT_NEW)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.size();  ++i)  {  out.put(null,  format);  }	  if(format    ==    FORMAT_NEW)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.size();    ++i)    {    out.put(null,    format);    }    	non-compiled	[CE]  orphaned  default	158	None	replace
1776	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [CE]  orphaned  default  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }	  if(format    ==    FORMAT_NEW_CRC)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    	non-compiled	[CE]  orphaned  default	211	None	replace
1777	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                    EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	49	None	replace
1778	[BUG]  [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                      EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  FORMAT_NEW_CRC)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	49	None	replace
1779	[BUG]  [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out  [CE]  not  a  statement  [FE]                        EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format  ==  FORMAT_NEW_CRC  ||  format  ==  FORMAT_NEW_ASCII)  {  if(format  ==  FORMAT_OLD_BINARY)  {  break;  }  else  {  for(int  i  =  0;  i  <  names.length;  ++i)  {  out	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    names.length;    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  not  a  statement	49	None	replace
1780	[BUG]  [BUGGY]  if(format!=  null)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [CE]  orphaned  default  [FE]                          EOFException      [CONTEXT]      private  void  setFormat(final  short  format)  {  switch  (format)  {  case  FORMAT_NEW:  case  FORMAT_NEW_CRC:  case  FORMAT_OLD_ASCII:  case  FORMAT_OLD_BINARY:      [BUGGY]  if(format!=  null)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }  [BUGGY]      default:  throw  new  IllegalArgumentException(     "Unknown  header  type     ");  }  synchronized  (this)  {  this.entryFormat  =  format;  }  }  [CLASS]  CpioArchiveOutputStream  [METHOD]  setFormat  [RETURN_TYPE]  void  final  short  format  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	126	126	1	replace	if(format!=  null)  {  if(format  ==  FORMAT_NEW_ASCII)  {  break;  }  else  {  for(int  i  =  0;  i  <  format.length();  ++i)  {  out.put(i,  format);  }  }	  if(format    ==    FORMAT_NEW_ASCII)    {    if(format    ==    FORMAT_OLD_BINARY)    {    break;    }    else    {    for(int    i    =    0;    i    <    format.length();    ++i)    {    out.put(i,    format);    }    }    	non-compiled	[CE]  orphaned  default	43	None	replace
