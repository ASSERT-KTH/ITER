projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.closed){thrownewIOException("
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.isOpen()){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.closed){thrownewIOException("
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.isOpen()){thrownewIOException("
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(cpioEntry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.closed){return;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.closed;out.write(cpioEntry.getValue());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.closed;out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.closed;out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.closed;out.write(entry.getValue());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.clone();out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;++i){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){thrownewIOException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;++i){ensureOpen();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){this.closed=true;}else{out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;++i){ensureOpen(i,out);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;++i){ensureOpen(i);}
