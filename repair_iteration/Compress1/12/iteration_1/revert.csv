projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.closed){thrownewIOException("
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.isOpen()){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.closed){thrownewIOException("
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.isOpen()){thrownewIOException("
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(cpioEntry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.closed){return;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.closed;out.write(cpioEntry.getValue());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.closed;out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.closed;out.write(cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntryentry=(CpioArchiveEntry)this.closed;out.write(entry.getValue());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.clone();out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;++i){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){thrownewIOException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;++i){ensureOpen();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){this.closed=true;}else{out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;++i){ensureOpen(i,out);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;++i){ensureOpen(i);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111out.close();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.cloned;++i){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.open;++i){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<that.closed;++i){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<out.length;++i){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<it.next;++i){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.clone();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.clone();out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)super.clone();out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.clone
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)cpioEntry.clone();out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.open;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.clone();out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.names!=null){for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.equals(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.equals(cpioEntry
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.equals(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.closed){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.closed){thrownew
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.closed){thrownewIOException
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.closed){thrownewIOException(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.names!=null){for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.closed){thrownewIOException("
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.cloned;++i){ensureOpen(i,out);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<out.length;++i){ensureOpen(i,out);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.open;++i){ensureOpen(i,out);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<that.closed;++i){ensureOpen(i,out);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<it.next;++i){ensureOpen(i,out);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.isOpen()){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.isOpen()){thrownewIOException(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.isOpen()){thrownewIOException("
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.isOpen()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.isOpen()){thrownewIOException
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.isOpen()){thrownew
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.closed;out.write(cpioEntry.get
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.closed;out.write(cpioEntry.getValu
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.closed;out.write(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.closed;out.write(cpioEntry.getVal
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.closed;out.write(cpioEntry.getValue
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){out.write('n');}else{out.write('n');}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111out.write(this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){out.write('n');}else{out.write('r');}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){out.write("n");}else{out.write('n');}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){this.closed=true;}else{out.write("n");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){out.write("n");}else{out.write("n");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111out.write('n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.isOpen()){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.isOpen
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.isOpen()){out.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.isOpen()){out
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.closed){return;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.closed){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.closed){return;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.closed
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.closed){return
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.closed){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.closed;out.write(cpio
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.closed;out.write(cpioEntry.getKey()
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.closed;out.write(cpioEnt
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){for(inti=0;i<this.closed;++i){ensureOpen();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){for(inti=0;i<this.cloned;++i){ensureOpen();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.cloned;++i){ensureOpen();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.open;++i){ensureOpen();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<that.closed;++i){ensureOpen();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){for(inti=0;i<this.open;++i){ensureOpen();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111out.write(entry.getValue());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111OutputStreamout=cpioEntry.getOutputStream();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111OutputStreamout=getOutputStream();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111OutputStreamout=newFileOutputStream("UTF-8");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111OutputStreamout=newBufferedOutputStream(newFileOutputStream("UTF-8"));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111OutputStreamout=newBufferedOutputStream("UTF-8");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111OutputStreamout=cpioEntry.getInputStream();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.cloned;i++){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.open;i++){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<out.length;i++){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<that.closed;i++){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<it.next;i++){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111OutputStreamout=getOutputStream();if(out!=null){for(inti=0;i<this.closed;++i){ensureOpen(i);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.cloned;++i){ensureOpen(i);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.open;++i){ensureOpen(i);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111ensureOpen(i);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<that.closed;++i){ensureOpen(i);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111Thread.currentThread().setContextClassLoader(this);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111Thread.currentThread().getContextClassLoader().reset();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111Thread.currentThread().interrupt();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111Thread.currentThread().throwInternal();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111Thread.currentThread().getContextClassLoader().setCurrentName(this.closed);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111Thread.currentThread().setCurrentName(this.closed);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111Thread.currentThread().setContextClassLoader(getCurrentThreadContext());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111this.closed=true;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){this.closed=false;}else{out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){this.closed=false;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){this.closed=true;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.cloned;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.clone();out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<that.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.closed;out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.open;out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.open;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.open;out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.closed){thrownew
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.closed){thrownewIOException
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.closed){thrownewIOException(
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.closed){thrownew
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){this.closed=true;}else{out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){this.closed=true;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.close
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111out.write(cpioEntry.getValue());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111out.write(CpioArchiveEntry.getValue());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111out.write(cpioEntry.getKey());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111out.write(this.closed);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111out.write("n");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111out.write(entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111OutputStreamout=newOutputStreamWriter();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111out.write("ArchiveEntry.closed");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpi
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEnt
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpio
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(1);if(cpioEntry.
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.cloned;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.cloned;out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<it.next;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.closed;out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.closed;++i){ensureOpen();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){for(inti=0;i<this.finished;++i){ensureOpen();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){for(inti=0;i<this.readOnly;++i){ensureOpen();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111out.write(CpioArchiveEntry.getKey());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111out.write(CpioArchiveEntry.class);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){for(inti=0;i<this.closed;++i){ensureOpen(i,out);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.closed;++i){ensureOpen(i,out);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){for(inti=0;i<this.cloned;++i){ensureOpen(i,out);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){for(inti=0;i<this.finished;++i){ensureOpen(i,out);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){for(inti=0;i<this.closed;i++){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){for(inti=0;i<this.finished;i++){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){for(inti=0;i<this.cloned;i++){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){for(inti=0;i<this.closed;++i){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){for(inti=0;i<this.finished;++i){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){for(inti=0;i<this.cloned;++i){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.is
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){out.close();}else{out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){thrownewIOException("");}else{out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){out.close();}else{this.closed=true;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){for(inti=0;i<this.closed;++i){ensureOpen(i);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.closed;++i){ensureOpen(i);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){for(inti=0;i<this.finished;++i){ensureOpen(i);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){for(inti=0;i<this.cloned;++i){ensureOpen(i);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){for(inti=0;i<this.readOnly;++i){ensureOpen(i);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){for(inti=0;i<this.open;++i){ensureOpen(i);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.clone;i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.clone();out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.close
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.closed
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEnt
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){thrownewIOException("Streamclosed");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.finished){thrownewIOException("Streamclosed");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){thrownewIOException("Streamclosed.");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.open){thrownewIOException("Streamclosed");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.clone){thrownewIOException("Streamclosed");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();i++){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(i);if(cpioEntry.equals(c
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.names.size();++i){CpioArchiveEntrycpioEntry=(CpioArchiveEntry)this.names.get(0);if(cpioEntry.closed){thrownew
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111Iterator<CpioArchiveEntry>names=this.closed.iterator();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111while(this.closed){for(inti=0;i<this.closed;++i){ensureOpen(i);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<this.closed;i++){CpioArchiveEntrycpioEntry=newCpioArchiveEntry();out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111while(this.closed){thrownewIOException("Streamclosed");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111while(!this.closed){thrownewIOException("");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111while(!this.closed){thrownewIOException("Streamclosed");}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<it.next();++i){ensureOpen(i,out);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111for(inti=0;i<this.closed;++i){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<it.next();++i){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111OutputStreamout=newFileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111OutputStreamout=newFileOutputStream(this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java111if(this.closed){for(inti=0;i<it.next();i++){out.close();}
