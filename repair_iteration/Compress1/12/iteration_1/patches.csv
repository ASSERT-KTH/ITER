bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  out.close();  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  out.close();  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.close();	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
3	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
4	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
5	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
6	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  ++i)  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
7	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
8	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)super.clone();  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)super.clone();  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)super.clone();  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone  [CE]  ';'  expected  [FE]                    EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  ';'  expected	13	None	replace
10	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.close();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals(cpioEntry    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(cpi  [CE]  ')'  expected  [FE]                    EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(cpi  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(cpi	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals(cpioEntry    	non-compiled	[CE]  ')'  expected	6	None	replace
14	[BUG]  [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if  [CE]  '('  expected  [FE]                      EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals(cpioEntry    	non-compiled	[CE]  '('  expected	6	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals(  [CE]  illegal  start  of  expression  [FE]                        EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals(  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals(	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals(cpioEntry    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals(cpioEntry  [CE]  ')'  expected  [FE]                          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals(cpioEntry  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals(cpioEntry	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals(cpioEntry    	non-compiled	[CE]  ')'  expected	6	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals(cpi  [CE]  ')'  expected  [FE]                            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals(cpi  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals(cpi	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals(cpioEntry    	non-compiled	[CE]  ')'  expected	6	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    throw    new    IOException(   "    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  [CE]  <identifier>  expected  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    throw    new    IOException(   "    	non-compiled	[CE]  <identifier>  expected	4	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  IOException  [CE]  '('  or  '['  expected  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  IOException  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  IOException	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    throw    new    IOException(   "    	non-compiled	[CE]  '('  or  '['  expected	4	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  IOException(  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  IOException(  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  IOException(	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    throw    new    IOException(   "    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
22	[BUG]  [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if  [CE]  '('  expected  [FE]                      EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    throw    new    IOException(   "    	non-compiled	[CE]  '('  expected	4	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new  IOException( "  [CE]  unclosed  string  literal  [FE]                        EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new  IOException( "  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new  IOException( "	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    throw    new    IOException(   "    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
24	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
25	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
26	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
27	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
28	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.isOpen())    {    throw    new    IOException(   "    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  throw  new  IOException(  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  throw  new  IOException(  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  throw  new  IOException(	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.isOpen())    {    throw    new    IOException(   "    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  throw  new  IOException( "  [CE]  unclosed  string  literal  [FE]                    EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  throw  new  IOException( "  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  throw  new  IOException( "	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.isOpen())    {    throw    new    IOException(   "    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen()  [CE]  ')'  expected  [FE]                      EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen()  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen()	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.isOpen())    {    throw    new    IOException(   "    	non-compiled	[CE]  ')'  expected	5	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  throw  new  IOException  [CE]  '('  or  '['  expected  [FE]                        EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  throw  new  IOException  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  throw  new  IOException	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.isOpen())    {    throw    new    IOException(   "    	non-compiled	[CE]  '('  or  '['  expected	5	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  throw  new  [CE]  <identifier>  expected  [FE]                          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  throw  new  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  throw  new	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.isOpen())    {    throw    new    IOException(   "    	non-compiled	[CE]  <identifier>  expected	5	None	replace
35	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.get  [CE]  ')'  expected  [FE]        EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.get  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.get	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValue());    }    	non-compiled	[CE]  ')'  expected	9	None	replace
36	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.getValu  [CE]  ')'  expected  [FE]          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.getValu  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.getValu	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValue());    }    	non-compiled	[CE]  ')'  expected	9	None	replace
37	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpi  [CE]  ')'  expected  [FE]            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpi  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpi	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValue());    }    	non-compiled	[CE]  ')'  expected	9	None	replace
38	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.getVal  [CE]  ')'  expected  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.getVal  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.getVal	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValue());    }    	non-compiled	[CE]  ')'  expected	9	None	replace
39	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.getValue  [CE]  ')'  expected  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.getValue  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.getValue	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValue());    }    	non-compiled	[CE]  ')'  expected	9	None	replace
40	[BUG]  [BUGGY]  if(this.closed)  {  out.write('n');  }  else  {  out.write('n');  }  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  out.write('n');  }  else  {  out.write('n');  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  out.write('n');  }  else  {  out.write('n');  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
41	[BUG]  [BUGGY]  out.write(this.entryFormat);  [CE]  illegal  start  of  expression  [FE]                        EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  out.write(this.entryFormat);  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.entryFormat);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
42	[BUG]  [BUGGY]  if(this.closed)  {  out.write('n');  }  else  {  out.write('r');  }  [CE]  illegal  start  of  expression  [FE]                          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  out.write('n');  }  else  {  out.write('r');  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  out.write('n');  }  else  {  out.write('r');  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
43	[BUG]  [BUGGY]  if(this.closed)  {  out.write( "n ");  }  else  {  out.write('n');  }  [CE]  illegal  start  of  expression  [FE]                            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  out.write( "n ");  }  else  {  out.write('n');  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  out.write( "n ");  }  else  {  out.write('n');  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
44	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  out.write( "n ");  }  [CE]  illegal  start  of  expression  [FE]                              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  out.write( "n ");  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  true;  }  else  {  out.write( "n ");  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
45	[BUG]  [BUGGY]  if(this.closed)  {  out.write( "n ");  }  else  {  out.write( "n ");  }  [CE]  illegal  start  of  expression  [FE]                                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  out.write( "n ");  }  else  {  out.write( "n ");  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  out.write( "n ");  }  else  {  out.write( "n ");  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
46	[BUG]  [BUGGY]  out.write('n');  [CE]  illegal  start  of  expression  [FE]                                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  out.write('n');  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write('n');	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  out.close();  }	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.isOpen())    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen  [CE]  ')'  expected  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.isOpen())    {    out.close();    }    	non-compiled	[CE]  ')'  expected	3	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  out.  [CE]  <identifier>  expected  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  out.  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  out.	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.isOpen())    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  out  [CE]  not  a  statement  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  out  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  out	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.isOpen())    {    out.close();    }    	non-compiled	[CE]  not  a  statement	3	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.  [CE]  <identifier>  expected  [FE]                    EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.isOpen())    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  return;  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  return;  }	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  return;  [CE]  illegal  start  of  expression  [FE]                        EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  return;  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  return;	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed  [CE]  ')'  expected  [FE]                          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    return;    }    	non-compiled	[CE]  ')'  expected	7	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  return  [CE]  illegal  start  of  expression  [FE]                            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  return  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  return	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  [CE]  illegal  start  of  expression  [FE]                              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
58	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpio  [CE]  ')'  expected  [FE]            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpio  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpio	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getKey());    }    	non-compiled	[CE]  ')'  expected	11	None	replace
59	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.getKey()  [CE]  ')'  expected  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.getKey()  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.getKey()	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getKey());    }    	non-compiled	[CE]  ')'  expected	11	None	replace
60	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEnt  [CE]  ')'  expected  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEnt  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEnt	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getKey());    }    	non-compiled	[CE]  ')'  expected	11	None	replace
61	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
62	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
63	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
64	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
65	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
66	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
67	[BUG]  [BUGGY]  out.write(entry.getValue());  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  out.write(entry.getValue());  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(entry.getValue());	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.closed;    out.write(entry.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
68	[BUG]  [BUGGY]  OutputStream  out  =  cpioEntry.getOutputStream();  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  OutputStream  out  =  cpioEntry.getOutputStream();  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  cpioEntry.getOutputStream();	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.closed;    out.write(entry.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
69	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream();  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  OutputStream  out  =  getOutputStream();  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  getOutputStream();	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.closed;    out.write(entry.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
70	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream( "UTF-8 ");  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  OutputStream  out  =  new  FileOutputStream( "UTF-8 ");  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream( "UTF-8 ");	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.closed;    out.write(entry.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
71	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream( "UTF-8 "));  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream( "UTF-8 "));  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream( "UTF-8 "));	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.closed;    out.write(entry.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
72	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream( "UTF-8 ");  [CE]  illegal  start  of  expression  [FE]                        EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  OutputStream  out  =  new  BufferedOutputStream( "UTF-8 ");  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream( "UTF-8 ");	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.closed;    out.write(entry.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
73	[BUG]  [BUGGY]  OutputStream  out  =  cpioEntry.getInputStream();  [CE]  illegal  start  of  expression  [FE]                          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  OutputStream  out  =  cpioEntry.getInputStream();  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  cpioEntry.getInputStream();	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.closed;    out.write(entry.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
74	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
75	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
76	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
77	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  i++)  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
78	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  i++)  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
79	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.  [CE]  <identifier>  expected  [FE]        EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals(cpioEntry.    	non-compiled	[CE]  <identifier>  expected	1	None	replace
80	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream();  if(out!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  OutputStream  out  =  getOutputStream();  if(out!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  getOutputStream();  if(out!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
81	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
82	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
83	[BUG]  [BUGGY]  ensureOpen(i);  [CE]  illegal  start  of  expression  [FE]                          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  ensureOpen(i);  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	ensureOpen(i);	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
84	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
85	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextClassLoader(this);	  if(this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
86	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reset();  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  Thread.currentThread().getContextClassLoader().reset();  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().reset();	  if(this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
87	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().interrupt();	  if(this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
88	[BUG]  [BUGGY]  Thread.currentThread().throwInternal();  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  Thread.currentThread().throwInternal();  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().throwInternal();	  if(this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
89	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(this.closed);  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(this.closed);  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName(this.closed);	  if(this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
90	[BUG]  [BUGGY]  Thread.currentThread().setCurrentName(this.closed);  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  Thread.currentThread().setCurrentName(this.closed);  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setCurrentName(this.closed);	  if(this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
91	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getCurrentThreadContext());  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  Thread.currentThread().setContextClassLoader(getCurrentThreadContext());  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextClassLoader(getCurrentThreadContext());	  if(this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
92	[BUG]  [BUGGY]  this.closed  =  true;  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  this.closed  =  true;  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	this.closed  =  true;	  if(this.closed)    {    this.closed    =    true;    }    else    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
93	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  false;  }  else  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  this.closed  =  false;  }  else  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  false;  }  else  {  out.close();  }	  if(this.closed)    {    this.closed    =    true;    }    else    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
94	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  false;  }  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  this.closed  =  false;  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  false;  }	  if(this.closed)    {    this.closed    =    true;    }    else    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
95	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  true;  }	  if(this.closed)    {    this.closed    =    true;    }    else    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
96	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close();  }  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
97	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.close();  }  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
98	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.close();  }  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
99	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  [CE]  <identifier>  expected  [FE]          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    throw    new    IOException(   "    	non-compiled	[CE]  <identifier>  expected	2	None	replace
101	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  IOException  [CE]  '('  or  '['  expected  [FE]            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  IOException  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  IOException	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    throw    new    IOException(   "    	non-compiled	[CE]  '('  or  '['  expected	2	None	replace
102	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  IOException(  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  IOException(  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  IOException(	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    throw    new    IOException(   "    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
103	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new  [CE]  <identifier>  expected  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    throw    new    IOException(   "    	non-compiled	[CE]  <identifier>  expected	2	None	replace
104	[BUG]  [BUGGY]  if(this.finished)  {  this.closed  =  true;  }  else  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  this.closed  =  true;  }  else  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  this.closed  =  true;  }  else  {  out.close();  }	  if(this.closed)    {    this.closed    =    true;    }    else    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
105	[BUG]  [BUGGY]  if(this.finished)  {  this.closed  =  true;  }  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  this.closed  =  true;  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  this.closed  =  true;  }	  if(this.closed)    {    this.closed    =    true;    }    else    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
106	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.close  [CE]  ')'  expected  [FE]          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.close  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.close	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    throw    new    IOException(   "    	non-compiled	[CE]  ')'  expected	2	None	replace
107	[BUG]  [BUGGY]  out.write(cpioEntry.getValue());  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  out.write(cpioEntry.getValue());  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.getValue());	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
108	[BUG]  [BUGGY]  out.write(CpioArchiveEntry.getValue());  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  out.write(CpioArchiveEntry.getValue());  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(CpioArchiveEntry.getValue());	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
109	[BUG]  [BUGGY]  out.write(cpioEntry.getKey());  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  out.write(cpioEntry.getKey());  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.getKey());	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
110	[BUG]  [BUGGY]  out.write(this.closed);  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  out.write(this.closed);  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.closed);	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
111	[BUG]  [BUGGY]  out.write( "n ");  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  out.write( "n ");  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "n ");	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.closed;    out.write(entry.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
112	[BUG]  [BUGGY]  out.write(entryFormat);  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  out.write(entryFormat);  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(entryFormat);	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.closed;    out.write(entry.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
113	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter();  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  OutputStream  out  =  new  OutputStreamWriter();  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  OutputStreamWriter();	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.closed;    out.write(entry.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
114	[BUG]  [BUGGY]  out.write( "ArchiveEntry.closed ");  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  out.write( "ArchiveEntry.closed ");  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "ArchiveEntry.closed ");	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.closed;    out.write(entry.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
115	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpi  [CE]  ')'  expected  [FE]        EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpi  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpi	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals(cpioEntry.    	non-compiled	[CE]  ')'  expected	1	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEnt  [CE]  ')'  expected  [FE]          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEnt  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEnt	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals(cpioEntry.    	non-compiled	[CE]  ')'  expected	1	None	replace
117	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpio  [CE]  ')'  expected  [FE]            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpio  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpio	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals(cpioEntry.    	non-compiled	[CE]  ')'  expected	1	None	replace
118	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if  [CE]  '('  expected  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals(cpioEntry.    	non-compiled	[CE]  '('  expected	1	None	replace
119	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.  [CE]  <identifier>  expected  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals(cpioEntry.    	non-compiled	[CE]  <identifier>  expected	1	None	replace
120	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.cloned;  out.close();  }  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.cloned;  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.cloned;  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
121	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.close();  }  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
122	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals  [CE]  ')'  expected  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals(cpioEntry    	non-compiled	[CE]  ')'  expected	6	None	replace
123	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
124	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
125	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
126	[BUG]  [BUGGY]  out.write(CpioArchiveEntry.getKey());  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  out.write(CpioArchiveEntry.getKey());  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(CpioArchiveEntry.getKey());	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
127	[BUG]  [BUGGY]  out.write(CpioArchiveEntry.class);  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  out.write(CpioArchiveEntry.class);  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(CpioArchiveEntry.class);	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
128	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
130	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
131	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
132	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
133	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.finished;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.finished;  i++)  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.finished;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
134	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
135	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
136	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
137	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
138	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.is  [CE]  ')'  expected  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.is  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.is	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.isOpen())    {    throw    new    IOException(   "    	non-compiled	[CE]  ')'  expected	5	None	replace
139	[BUG]  [BUGGY]  if(this.closed)  {  out.close();  }  else  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  out.close();  }  else  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  out.close();  }  else  {  out.close();  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
140	[BUG]  [BUGGY]  if(this.closed)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  out.close();  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
141	[BUG]  [BUGGY]  if(this.closed)  {  throw  new  IOException( " ");  }  else  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  throw  new  IOException( " ");  }  else  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  throw  new  IOException( " ");  }  else  {  out.close();  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
142	[BUG]  [BUGGY]  if(this.closed)  {  out.close();  }  else  {  this.closed  =  true;  }  [CE]  illegal  start  of  expression  [FE]                            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  out.close();  }  else  {  this.closed  =  true;  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  out.close();  }  else  {  this.closed  =  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
143	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
144	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
145	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
146	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
147	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
148	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
149	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
150	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.close  [CE]  ')'  expected  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.close  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.close	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    throw    new    IOException(   "    	non-compiled	[CE]  ')'  expected	4	None	replace
151	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed  [CE]  ')'  expected  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    throw    new    IOException(   "    	non-compiled	[CE]  ')'  expected	4	None	replace
152	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEnt  [CE]  ')'  expected  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEnt  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEnt	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    throw    new    IOException(   "    	non-compiled	[CE]  ')'  expected	4	None	replace
153	[BUG]  [BUGGY]  if(this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  throw  new  IOException( "Stream  closed ");  }	  if(this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
154	[BUG]  [BUGGY]  if(this.finished)  {  throw  new  IOException( "Stream  closed ");  }  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.finished)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  throw  new  IOException( "Stream  closed ");  }	  if(this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
155	[BUG]  [BUGGY]  if(this.closed)  {  throw  new  IOException( "Stream  closed. ");  }  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  throw  new  IOException( "Stream  closed. ");  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  throw  new  IOException( "Stream  closed. ");  }	  if(this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
156	[BUG]  [BUGGY]  if(this.open)  {  throw  new  IOException( "Stream  closed ");  }  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.open)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.open)  {  throw  new  IOException( "Stream  closed ");  }	  if(this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
157	[BUG]  [BUGGY]  if(this.clone)  {  throw  new  IOException( "Stream  closed ");  }  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.clone)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.clone)  {  throw  new  IOException( "Stream  closed ");  }	  if(this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
158	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(c  [CE]  ')'  expected  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(c  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(c	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals(cpioEntry    	non-compiled	[CE]  ')'  expected	6	None	replace
159	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new  [CE]  <identifier>  expected  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    throw    new    IOException(   "    	non-compiled	[CE]  <identifier>  expected	4	None	replace
160	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.closed.iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.closed.iterator();  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  names  =  this.closed.iterator();	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	17	None	replace
161	[BUG]  [BUGGY]  while(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                    EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  while(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
162	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =  new  CpioArchiveEntry();  out.close();  }  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =  new  CpioArchiveEntry();  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =  new  CpioArchiveEntry();  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
163	[BUG]  [BUGGY]  while(this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  while(this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.closed)  {  throw  new  IOException( "Stream  closed ");  }	  if(this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
164	[BUG]  [BUGGY]  while(!this.closed)  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  while(!this.closed)  {  throw  new  IOException( " ");  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(!this.closed)  {  throw  new  IOException( " ");  }	  if(this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
165	[BUG]  [BUGGY]  while(!this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  while(!this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(!this.closed)  {  throw  new  IOException( "Stream  closed ");  }	  if(this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
166	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next();  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next();  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.next();  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
167	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
168	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next();  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next();  ++i)  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.next();  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
169	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT);  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT);  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT);	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.closed;    out.write(entry.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
170	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.entryFormat);  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.entryFormat);  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.entryFormat);	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    entry    =(CpioArchiveEntry)this.closed;    out.write(entry.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
171	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next();  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(   "Stream  closed   ");  }    [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next();  i++)  {  out.close();  }  [BUGGY]      [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.next();  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
