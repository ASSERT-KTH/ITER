bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(cpioEntry.  [CE]  <identifier>  expected  [FE]    EOFException  [CONTEXT]  private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(cpioEntry.  [BUGGY]    [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(cpioEntry.	}  	non-compiled	[CE]  <identifier>  expected	23	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  IOException( "  [CE]  unclosed  string  literal  [FE]      EOFException  [CONTEXT]  private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  IOException( "  [BUGGY]    [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  IOException( "	}  	non-compiled	[CE]  unclosed  string  literal	23	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]        EOFException  [CONTEXT]  private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  out.close();  }  [BUGGY]    [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  out.close();  }	}  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  IOException( "  [CE]  unclosed  string  literal  [FE]          EOFException  [CONTEXT]  private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  IOException( "  [BUGGY]    [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  throw  new  IOException( "	}  	non-compiled	[CE]  unclosed  string  literal	23	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  throw  new  IOException( "  [CE]  unclosed  string  literal  [FE]            EOFException  [CONTEXT]  private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  throw  new  IOException( "  [BUGGY]    [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.isOpen())  {  throw  new  IOException( "	}  	non-compiled	[CE]  unclosed  string  literal	23	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(cpioEntry  [CE]  ')'  expected  [FE]              EOFException  [CONTEXT]  private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(cpioEntry  [BUGGY]    [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(cpioEntry	}  	non-compiled	[CE]  ')'  expected	23	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                EOFException  [CONTEXT]  private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  return;  }  [BUGGY]    [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  return;  }	}  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                  EOFException  [CONTEXT]  private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]    [BUGGY]    [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
9	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.getValue());  }  [CE]  illegal  start  of  expression  [FE]    EOFException  [CONTEXT]  private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.getValue());  }  [BUGGY]    [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.getValue());  }	}  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
10	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.close();  }  [CE]  illegal  start  of  expression  [FE]      EOFException  [CONTEXT]  private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.close();  }  [BUGGY]    [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.close();  }	}  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
11	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.getKey());  }  [CE]  illegal  start  of  expression  [FE]        EOFException  [CONTEXT]  private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.getKey());  }  [BUGGY]    [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpioEntry.getKey());  }	}  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
12	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.closed;  out.write(entry.getValue());  }  [CE]  illegal  start  of  expression  [FE]          EOFException  [CONTEXT]  private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.closed;  out.write(entry.getValue());  }  [BUGGY]    [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  entry  =(CpioArchiveEntry)this.closed;  out.write(entry.getValue());  }	}  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
13	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close();  }  [CE]  illegal  start  of  expression  [FE]            EOFException  [CONTEXT]  private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close();  }  [BUGGY]    [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close();  }	}  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
14	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]    EOFException  [CONTEXT]  private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }  [BUGGY]    [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }	}  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
15	[BUG]  [BUGGY]  if(this.closed)  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]      EOFException  [CONTEXT]  private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]  if(this.closed)  {  throw  new  IOException( " ");  }  [BUGGY]    [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  throw  new  IOException( " ");  }	}  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
16	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]        EOFException  [CONTEXT]  private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }  [BUGGY]    [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }	}  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
17	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]          EOFException  [CONTEXT]  private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }  [BUGGY]    [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }	}  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
18	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]            EOFException  [CONTEXT]  private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  out.close();  }  [BUGGY]    [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  true;  }  else  {  out.close();  }	}  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
19	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]              EOFException  [CONTEXT]  private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]    [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }	}  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
20	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                EOFException  [CONTEXT]  private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]    [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }	}  	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
