bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().removeChild(this);  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().removeChild(this);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().removeChild(this);	  if(this.closed)    {    throw    new    IOException(   "Stream    closed.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
2	[BUG]  [BUGGY]  Thread.currentThread().setContextChanged();  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContextChanged();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextChanged();	  if(this.closed)    {    throw    new    IOException(   "Stream    closed.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
3	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.close;  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.close;  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.close;  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.open;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpio!=  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpio!=  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpio!=	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpio    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpio  ==  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpio  ==  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpio  ==	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpio    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpio!=  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpio!=  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpio!=	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpio    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpio  ==  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpio  ==  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpio  ==	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpio    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpio  }  [CE]  ')'  expected  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpio  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpio  }	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpio    	non-compiled	[CE]  ')'  expected	117	None	replace
9	[BUG]  [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpio    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
10	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.names.iterator().next();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.names.iterator().next();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  names  =  this.names.iterator().next();	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	28	None	replace
11	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  it  =  names.iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  it  =  names.iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  it  =  names.iterator();	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	28	None	replace
12	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
13	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  cpioEntrySet.iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  cpioEntrySet.iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  names  =  cpioEntrySet.iterator();	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	28	None	replace
14	[BUG]  [BUGGY]  ensureOpen(i,  out);  [CE]  illegal  start  of  expression  [FE]                                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  ensureOpen(i,  out);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	ensureOpen(i,  out);	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed!=  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed!=  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed!=	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed  }  [CE]  ')'  expected  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed  }	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed    	non-compiled	[CE]  ')'  expected	55	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed  ==  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed  ==  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed  ==	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed!=  [CE]  illegal  start  of  expression  [FE]                                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed!=  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed!=	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
19	[BUG]  [BUGGY]  this.closed  =  false;  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  this.closed  =  false;  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	this.closed  =  false;	  if(this.closed)    {    this.closed    =    false;    }    else    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
20	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  false;  }  else  {  out.flush();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  false;  }  else  {  out.flush();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  false;  }  else  {  out.flush();  }	  if(this.closed)    {    this.closed    =    false;    }    else    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
21	[BUG]  [BUGGY]  Thread.currentThread().setCurrentName(this.cpioEntry);  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setCurrentName(this.cpioEntry);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setCurrentName(this.cpioEntry);	  Thread.currentThread().setCurrentName(this.closed);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
22	[BUG]  [BUGGY]  Thread.currentThread().setCurrentName(this.open);  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setCurrentName(this.open);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setCurrentName(this.open);	  Thread.currentThread().setCurrentName(this.closed);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
23	[BUG]  [BUGGY]  Thread.currentThread().setCurrentName(this.clone);  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setCurrentName(this.clone);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setCurrentName(this.clone);	  Thread.currentThread().setCurrentName(this.closed);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
24	[BUG]  [BUGGY]  Thread.currentThread().setCurrentName(this.cloned);  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setCurrentName(this.cloned);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setCurrentName(this.cloned);	  Thread.currentThread().setCurrentName(this.closed);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
25	[BUG]  [BUGGY]  Thread.currentThread().setCurrentName(this.null);  [CE]  <identifier>  expected  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setCurrentName(this.null);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setCurrentName(this.null);	  Thread.currentThread().setCurrentName(this.closed);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
26	[BUG]  [BUGGY]  Thread.currentThread().setCurrentName(this.file);  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setCurrentName(this.file);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setCurrentName(this.file);	  Thread.currentThread().setCurrentName(this.closed);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
27	[BUG]  [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(1);    if(cpioEntry.    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.  [CE]  <identifier>  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  1;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  1;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(1);    if(cpioEntry.    	non-compiled	[CE]  <identifier>  expected	119	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(2);  if(cpioEntry.  [CE]  <identifier>  expected  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(2);  if(cpioEntry.  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(2);  if(cpioEntry.	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(1);    if(cpioEntry.    	non-compiled	[CE]  <identifier>  expected	119	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.  }  [CE]  <identifier>  expected  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.  }	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(1);    if(cpioEntry.    	non-compiled	[CE]  <identifier>  expected	119	None	replace
31	[BUG]  [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if  [CE]  '('  expected  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(1);    if(cpioEntry.    	non-compiled	[CE]  '('  expected	119	None	replace
32	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  false;  }  else  {  System.err.println( "Stream  closed: "  +  this.cpioEntry.getClass().getName());  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  false;  }  else  {  System.err.println( "Stream  closed: "  +  this.cpioEntry.getClass().getName());  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  false;  }  else  {  System.err.println( "Stream  closed: "  +  this.cpioEntry.getClass().getName());  }	  if(this.closed)    {    this.closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
33	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  false;  }  else  {  System.err.println( "Stream  closed: "  +  this.cpioEntry.getValue());  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  false;  }  else  {  System.err.println( "Stream  closed: "  +  this.cpioEntry.getValue());  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  false;  }  else  {  System.err.println( "Stream  closed: "  +  this.cpioEntry.getValue());  }	  if(this.closed)    {    this.closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
34	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  false;  }  else  {  System.err.println( "Stream  closed: "  +  this.cpioEntry.getName());  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  false;  }  else  {  System.err.println( "Stream  closed: "  +  this.cpioEntry.getName());  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  false;  }  else  {  System.err.println( "Stream  closed: "  +  this.cpioEntry.getName());  }	  if(this.closed)    {    this.closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
35	[BUG]  [BUGGY]  if(this.cloned)  {  throw  new  IOException( "Stream  closed ");  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  throw  new  IOException( "Stream  closed ");  }	  if(this.clone)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
36	[BUG]  [BUGGY]  out.write(this.clone)  {  throw  new  IOException( "Stream  closed ");  }  [CE]  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.clone)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.clone)  {  throw  new  IOException( "Stream  closed ");  }	  if(this.clone)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  	157	None	replace
37	[BUG]  [BUGGY]  if(this.cloned)  {  throw  new  IOException( "Stream  closed. ");  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  throw  new  IOException( "Stream  closed. ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  throw  new  IOException( "Stream  closed. ");  }	  if(this.clone)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
38	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this.clone);  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(this.clone);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextClassLoader(this.clone);	  if(this.clone)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
39	[BUG]  [BUGGY]  if(this.clone)  {  throw  new  IOException( "Stream  closed. ");  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.clone)  {  throw  new  IOException( "Stream  closed. ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.clone)  {  throw  new  IOException( "Stream  closed. ");  }	  if(this.clone)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
40	[BUG]  [BUGGY]  while(!this.closed)  {  throw  new  IOException( "Stream  closed. ");  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(!this.closed)  {  throw  new  IOException( "Stream  closed. ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(!this.closed)  {  throw  new  IOException( "Stream  closed. ");  }	  while(!this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
41	[BUG]  [BUGGY]  while(!this.cloned)  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(!this.cloned)  {  throw  new  IOException( " ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(!this.cloned)  {  throw  new  IOException( " ");  }	  while(!this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
42	[BUG]  [BUGGY]  while(!this.open)  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(!this.open)  {  throw  new  IOException( " ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(!this.open)  {  throw  new  IOException( " ");  }	  while(!this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
43	[BUG]  [BUGGY]  while(!this.finished)  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(!this.finished)  {  throw  new  IOException( " ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(!this.finished)  {  throw  new  IOException( " ");  }	  while(!this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
44	[BUG]  [BUGGY]  while(this.closed)  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.closed)  {  throw  new  IOException( " ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.closed)  {  throw  new  IOException( " ");  }	  while(!this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.isOpen())    {    out    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  out  [CE]  not  a  statement  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  out  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  out	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.isOpen())    {    out    	non-compiled	[CE]  not  a  statement	50	None	replace
47	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone()  [CE]  ';'  expected  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone()  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone()	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)cpioEntry.clone();    out.close();    }    	non-compiled	[CE]  ';'  expected	10	None	replace
48	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.  [CE]  <identifier>  expected  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)cpioEntry.clone();    out.close();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
49	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone  [CE]  ';'  expected  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)cpioEntry.clone();    out.close();    }    	non-compiled	[CE]  ';'  expected	10	None	replace
50	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.close()  [CE]  ';'  expected  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.close()  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.close()	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)cpioEntry.clone();    out.close();    }    	non-compiled	[CE]  ';'  expected	10	None	replace
51	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.close  [CE]  not  a  statement  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.close  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.close	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)cpioEntry.clone();    out.close();    }    	non-compiled	[CE]  not  a  statement	10	None	replace
52	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone()  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone()  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone()	  if(this.closed)    {    for(int    i    =    0;    i    <    this.clone;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  ';'  expected	149	None	replace
53	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone  [CE]  ';'  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone	  if(this.closed)    {    for(int    i    =    0;    i    <    this.clone;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  ';'  expected	149	None	replace
54	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)super.clone();  out.close();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)super.clone();  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)super.clone();  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.clone;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
55	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close()  [CE]  ';'  expected  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close()  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close()	  if(this.closed)    {    for(int    i    =    0;    i    <    this.clone;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  ';'  expected	149	None	replace
56	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.  [CE]  <identifier>  expected  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.	  if(this.closed)    {    for(int    i    =    0;    i    <    this.clone;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  <identifier>  expected	149	None	replace
57	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStreamWriter();  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStreamWriter();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStreamWriter();	  OutputStream    out    =    new    OutputStreamWriter();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
58	[BUG]  [BUGGY]  OutputStream  out  =  new  PrintStreamWriter();  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  PrintStreamWriter();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  PrintStreamWriter();	  OutputStream    out    =    new    OutputStreamWriter();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
59	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStreamWriter();  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStreamWriter();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStreamWriter();	  OutputStream    out    =    new    OutputStreamWriter();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
60	[BUG]  [BUGGY]  OutputStream  out  =  new  CpioOutputStreamWriter();  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  CpioOutputStreamWriter();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  CpioOutputStreamWriter();	  OutputStream    out    =    new    OutputStreamWriter();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
61	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedInputStreamWriter();  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedInputStreamWriter();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedInputStreamWriter();	  OutputStream    out    =    new    OutputStreamWriter();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
62	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStreamWriter(64);  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStreamWriter(64);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStreamWriter(64);	  OutputStream    out    =    new    OutputStreamWriter();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
63	[BUG]  [BUGGY]  OutputStream  out  =  new  MockOutputStreamWriter();  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  MockOutputStreamWriter();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  MockOutputStreamWriter();	  OutputStream    out    =    new    OutputStreamWriter();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
64	[BUG]  [BUGGY]  OutputStream  out  =  this.cpioEntry.getOutputStream();  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  this.cpioEntry.getOutputStream();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  this.cpioEntry.getOutputStream();	  OutputStream    out    =    cpioEntry.getOutputStream();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
65	[BUG]  [BUGGY]  OutputStream  out  =  crc.getOutputStream();  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  crc.getOutputStream();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  crc.getOutputStream();	  OutputStream    out    =    cpioEntry.getOutputStream();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
66	[BUG]  [BUGGY]  OutputStream  out  =  this.crc.getOutputStream();  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  this.crc.getOutputStream();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  this.crc.getOutputStream();	  OutputStream    out    =    cpioEntry.getOutputStream();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
67	[BUG]  [BUGGY]  OutputStream  out  =  cpioEntry.openStream();  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  cpioEntry.openStream();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  cpioEntry.openStream();	  OutputStream    out    =    cpioEntry.getOutputStream();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
68	[BUG]  [BUGGY]  out  =  this.cpioEntry.getOutputStream();  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out  =  this.cpioEntry.getOutputStream();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out  =  this.cpioEntry.getOutputStream();	  OutputStream    out    =    cpioEntry.getOutputStream();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed  [CE]  ')'  expected  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    	non-compiled	[CE]  ')'  expected	53	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.equals(  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.equals(  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.equals(	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.equals(cpioEntry    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals(c  [CE]  ')'  expected  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals(c  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals(c	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.equals(cpioEntry    	non-compiled	[CE]  ')'  expected	16	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.equals(cpioEntry  [CE]  ')'  expected  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.equals(cpioEntry  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.equals(cpioEntry	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.equals(cpioEntry    	non-compiled	[CE]  ')'  expected	16	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.equals(cpi  [CE]  ')'  expected  [FE]                                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.equals(cpi  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.equals(cpi	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.equals(cpioEntry    	non-compiled	[CE]  ')'  expected	16	None	replace
74	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new  IOException  [CE]  '('  or  '['  expected  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new  IOException  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new  IOException	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    throw    new    IOException    	non-compiled	[CE]  '('  or  '['  expected	101	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    throw    new    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
76	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  return  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  return  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  return	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    throw    new    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {  throw  new  [CE]  <identifier>  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {  throw  new  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {  throw  new	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.closed)    {    throw    new    	non-compiled	[CE]  <identifier>  expected	103	None	replace
78	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.closed)    {    throw    new    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
79	[BUG]  [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if  [CE]  '('  expected  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.closed)    {    throw    new    	non-compiled	[CE]  '('  expected	103	None	replace
80	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
81	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
82	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen  [CE]  ')'  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.isOpen())    {    	non-compiled	[CE]  ')'  expected	29	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen()  [CE]  ')'  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen()  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen()	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.isOpen())    {    	non-compiled	[CE]  ')'  expected	29	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
85	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  that.cloned;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  that.cloned;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  that.cloned;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
86	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
87	[BUG]  [BUGGY]  if(this.closed  ||  this.finished)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed  ||  this.finished)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed  ||  this.finished)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
89	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry  ==  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry  ==  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry  ==	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEnt    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry  ==  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry  ==  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry  ==	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEnt    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
91	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry!=  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry!=  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry!=	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEnt    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
92	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry!=  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry!=  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry!=	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEnt    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
93	[BUG]  [BUGGY]  EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }  else  {  out.write('r');  }  [CE]  ';'  expected  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }  else  {  out.write('r');  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }  else  {  out.write('r');  }	  if(this.closed)    {    out.write('n');    }    else    {    out.write('r');    }    	non-compiled	[CE]  ';'  expected	42	None	replace
94	[BUG]  [BUGGY]  EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }  else  if(!this.closed)  {  out.write('r');  }  [CE]  ';'  expected  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }  else  if(!this.closed)  {  out.write('r');  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }  else  if(!this.closed)  {  out.write('r');  }	  if(this.closed)    {    out.write('n');    }    else    {    out.write('r');    }    	non-compiled	[CE]  ';'  expected	42	None	replace
95	[BUG]  [BUGGY]  EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }  else  if(this.closed)  {  out.write('r');  }  [CE]  ';'  expected  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }  else  if(this.closed)  {  out.write('r');  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }  else  if(this.closed)  {  out.write('r');  }	  if(this.closed)    {    out.write('n');    }    else    {    out.write('r');    }    	non-compiled	[CE]  ';'  expected	42	None	replace
96	[BUG]  [BUGGY]  OutputStream  out  =  getCurrentOutputStream();  [CE]  illegal  start  of  expression  [FE]                                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  getCurrentOutputStream();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  getCurrentOutputStream();	  if(this.closed)    {    out.write('n');    }    else    {    out.write('r');    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
97	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.closed.clone();  if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =(OutputStream)this.closed.clone();  if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =(OutputStream)this.closed.clone();  if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
98	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  i++)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
99	[BUG]  [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEnt  [CE]  ')'  expected  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEnt  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEnt	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  ')'  expected	14	None	replace
100	[BUG]  [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArch  [CE]  ')'  expected  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArch  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArch	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  ')'  expected	14	None	replace
101	[BUG]  [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
102	[BUG]  [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  }	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
103	[BUG]  [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)  [CE]  ';'  expected  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  ';'  expected	14	None	replace
104	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if  [CE]  '('  expected  [FE]                                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  '('  expected	14	None	replace
105	[BUG]  [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry  [CE]  ')'  expected  [FE]                                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  ')'  expected	14	None	replace
106	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
107	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
108	[BUG]  [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
109	[BUG]  [BUGGY]  if(this.cloned  >  0)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned  >  0)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned  >  0)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
110	[BUG]  [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
111	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  that.cloned;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  that.cloned;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  that.cloned;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
112	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.open;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
113	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.flush();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.flush();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.flush();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.open;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
114	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.close();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  that.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.open;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
115	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
116	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  --i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  --i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  --i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
117	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i,  output);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i,  output);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i,  output);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
119	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i  +  1);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i  +  1);  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
120	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.data.length;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.data.length;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.data.length;  ++i)  {  ensureOpen(i);  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
121	[BUG]  [BUGGY]  out.write(this.entryFormat.getValue());  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.entryFormat.getValue());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.entryFormat.getValue());	  out.write(entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
122	[BUG]  [BUGGY]  out.write(this.crc.getValue());  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.crc.getValue());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.crc.getValue());	  out.write(entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
123	[BUG]  [BUGGY]  out.write(this.cpioEntry.getValue());  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.cpioEntry.getValue());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.cpioEntry.getValue());	  out.write(entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
124	[BUG]  [BUGGY]  out.write(this.cpio.getValue());  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.cpio.getValue());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.cpio.getValue());	  out.write(entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
125	[BUG]  [BUGGY]  out.write(this.getValue());  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.getValue());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.getValue());	  out.write(entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
126	[BUG]  [BUGGY]  out.write(this.format.getValue());  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.format.getValue());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.format.getValue());	  out.write(entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
127	[BUG]  [BUGGY]  out.write(this.file.getValue());  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.file.getValue());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.file.getValue());	  out.write(entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
128	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
129	[BUG]  [BUGGY]  Thread.currentThread().internal();  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().internal();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().internal();	  Thread.currentThread().throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
130	[BUG]  [BUGGY]  Thread.currentThread().startInternal();  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().startInternal();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().startInternal();	  Thread.currentThread().throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
131	[BUG]  [BUGGY]  Thread.currentThread().reset();  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().reset();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().reset();	  Thread.currentThread().throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
132	[BUG]  [BUGGY]  Thread.currentThread().join();  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().join();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().join();	  Thread.currentThread().throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
133	[BUG]  [BUGGY]  Thread.currentThread().intermediate();  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().intermediate();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().intermediate();	  Thread.currentThread().throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
134	[BUG]  [BUGGY]  out.write(cpioEntry.get  [CE]  ')'  expected  [FE]            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpioEntry.get  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.get	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.get    	non-compiled	[CE]  ')'  expected	35	None	replace
135	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.clone();  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.clone();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =(OutputStream)cpioEntry.clone();	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.get    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
136	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(crc.getAbsolutePath());  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(crc.getAbsolutePath());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(crc.getAbsolutePath());	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.get    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
137	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(cpioEntry.getName());  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(cpioEntry.getName());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(cpioEntry.getName());	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.get    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
138	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(cpioEntry.getPath());  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(cpioEntry.getPath());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(cpioEntry.getPath());	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.get    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
139	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.getValue();  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.getValue();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =(OutputStream)cpioEntry.getValue();	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.get    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
140	[BUG]  [BUGGY]  if(this.open!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.open!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.open!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
141	[BUG]  [BUGGY]  if(!this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(!this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(!this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
142	[BUG]  [BUGGY]  if(this.open!=  null)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.open!=  null)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.open!=  null)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
143	[BUG]  [BUGGY]  if(this.open!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.open!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.open!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
144	[BUG]  [BUGGY]  if(this.open!=  null)  {  if(!this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.open!=  null)  {  if(!this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.open!=  null)  {  if(!this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
145	[BUG]  [BUGGY]  out.flush();  [CE]  illegal  start  of  expression  [FE]            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.flush();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.flush();	  out.close();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
146	[BUG]  [BUGGY]  out.write(this.crc);  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.crc);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.crc);	  out.close();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
147	[BUG]  [BUGGY]  out.write(this.read());  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.read());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.read());	  out.close();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
148	[BUG]  [BUGGY]  out.write(cpioEntry.getVal  [CE]  ')'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpioEntry.getVal  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.getVal	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getVal    	non-compiled	[CE]  ')'  expected	38	None	replace
149	[BUG]  [BUGGY]  out.write(cpioEntry.getVal);  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpioEntry.getVal);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.getVal);	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getVal    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
150	[BUG]  [BUGGY]  out.write(cpioEntry.getVal());  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpioEntry.getVal());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.getVal());	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getVal    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
151	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  out.flush();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  out.flush();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  out.flush();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
152	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  this.closed  =  true;  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  this.closed  =  true;  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  this.closed  =  true;  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
153	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  outputStream.close();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  outputStream.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  outputStream.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
154	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  throw  new  IOException( " ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  throw  new  IOException( " ");  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
155	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  start.close();  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  start.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  start.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
156	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this.finished);  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(this.finished);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextClassLoader(this.finished);	  if(this.finished)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
157	[BUG]  [BUGGY]  if(this.finished)  {  throw  new  IOException( "Stream  closed. ");  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.finished)  {  throw  new  IOException( "Stream  closed. ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  throw  new  IOException( "Stream  closed. ");  }	  if(this.finished)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
158	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
159	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
160	[BUG]  [BUGGY]  int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	123	None	replace
161	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  this.closed;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  1;  i  <  this.closed;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  1;  i  <  this.closed;  ++i)  {  ensureOpen();  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
162	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cpioEntry.length;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.cpioEntry.length;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.cpioEntry.length;  ++i)  {  ensureOpen();  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
163	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.writeEnd;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.writeEnd;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.writeEnd;  ++i)  {  ensureOpen();  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
164	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i,  out);  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
165	[BUG]  [BUGGY]  int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	129	None	replace
166	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i,  out);  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
167	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cpioEntry.length;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.cpioEntry.length;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.cpioEntry.length;  ++i)  {  ensureOpen(i,  out);  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
168	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i  +  1,  out);  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i  +  1,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i  +  1,  out);  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
169	[BUG]  [BUGGY]  while(!this.cloned)  {  throw  new  IOException( "Stream  closed ");  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(!this.cloned)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(!this.cloned)  {  throw  new  IOException( "Stream  closed ");  }	  while(!this.closed)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
170	[BUG]  [BUGGY]  while(!this.finished)  {  throw  new  IOException( "Stream  closed ");  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(!this.finished)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(!this.finished)  {  throw  new  IOException( "Stream  closed ");  }	  while(!this.closed)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
171	[BUG]  [BUGGY]  while(!this.open)  {  throw  new  IOException( "Stream  closed ");  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(!this.open)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(!this.open)  {  throw  new  IOException( "Stream  closed ");  }	  while(!this.closed)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
172	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
173	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
174	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if  }  [CE]  '('  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  '('  expected	118	None	replace
175	[BUG]  [BUGGY]  if(this.names!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEnt  [CE]  ')'  expected  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.names!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEnt  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.names!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEnt	  if(this.closed)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  ')'  expected	118	None	replace
176	[BUG]  [BUGGY]  if(this.names!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArch  [CE]  ')'  expected  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.names!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArch  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.names!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArch	  if(this.closed)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  ')'  expected	118	None	replace
177	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if  }  [CE]  '('  expected  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  '('  expected	118	None	replace
178	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
179	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this.getCurrentThreadContext());  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(this.getCurrentThreadContext());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextClassLoader(this.getCurrentThreadContext());	  Thread.currentThread().setContextClassLoader(getCurrentThreadContext());    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
180	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getCurrentThreadContext(),  this.closed);  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(getCurrentThreadContext(),  this.closed);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextClassLoader(getCurrentThreadContext(),  this.closed);	  Thread.currentThread().setContextClassLoader(getCurrentThreadContext());    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
181	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getCurrentThreadContext(),  this.cpioEntry);  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(getCurrentThreadContext(),  this.cpioEntry);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextClassLoader(getCurrentThreadContext(),  this.cpioEntry);	  Thread.currentThread().setContextClassLoader(getCurrentThreadContext());    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
182	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getCurrentThreadContext(),  this);  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(getCurrentThreadContext(),  this);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextClassLoader(getCurrentThreadContext(),  this);	  Thread.currentThread().setContextClassLoader(getCurrentThreadContext());    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
183	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getCurrentThreadContext(),  true);  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(getCurrentThreadContext(),  true);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextClassLoader(getCurrentThreadContext(),  true);	  Thread.currentThread().setContextClassLoader(getCurrentThreadContext());    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
184	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getCurrentThreadContext(),  getChronology());  [CE]  illegal  start  of  expression  [FE]                                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(getCurrentThreadContext(),  getChronology());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextClassLoader(getCurrentThreadContext(),  getChronology());	  Thread.currentThread().setContextClassLoader(getCurrentThreadContext());    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
185	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals  [CE]  ')'  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals    	non-compiled	[CE]  ')'  expected	122	None	replace
186	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed.get(i);  if(cpioEntry.equals  [CE]  ')'  expected  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed.get(i);  if(cpioEntry.equals  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed.get(i);  if(cpioEntry.equals	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals    	non-compiled	[CE]  ')'  expected	122	None	replace
187	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.equals  [CE]  ')'  expected  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.equals  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.equals	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals    	non-compiled	[CE]  ')'  expected	122	None	replace
188	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equal  [CE]  ')'  expected  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equal  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equal	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals    	non-compiled	[CE]  ')'  expected	122	None	replace
189	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.close  [CE]  ')'  expected  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.close  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.close	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.close    	non-compiled	[CE]  ')'  expected	106	None	replace
190	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.close  }  [CE]  ')'  expected  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.close  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.close  }	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.close    	non-compiled	[CE]  ')'  expected	106	None	replace
191	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.close  }  [CE]  ')'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.close  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.close  }	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.close    	non-compiled	[CE]  ')'  expected	106	None	replace
192	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.close  [CE]  ')'  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.close  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.close	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.close    	non-compiled	[CE]  ')'  expected	106	None	replace
193	[BUG]  [BUGGY]  while(this.open)  {  throw  new  IOException( "Stream  closed ");  }  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.open)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.open)  {  throw  new  IOException( "Stream  closed ");  }	  while(this.closed)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
194	[BUG]  [BUGGY]  while(this.write)  {  throw  new  IOException( "Stream  closed ");  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.write)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.write)  {  throw  new  IOException( "Stream  closed ");  }	  while(this.closed)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
195	[BUG]  [BUGGY]  while(this.written)  {  throw  new  IOException( "Stream  closed ");  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.written)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.written)  {  throw  new  IOException( "Stream  closed ");  }	  while(this.closed)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
196	[BUG]  [BUGGY]  while(this.finished)  {  throw  new  IOException( "Stream  closed ");  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.finished)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.finished)  {  throw  new  IOException( "Stream  closed ");  }	  while(this.closed)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
197	[BUG]  [BUGGY]  out.write(this.crc.getKey());  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.crc.getKey());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.crc.getKey());	  out.write(CpioArchiveEntry.getKey());    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
198	[BUG]  [BUGGY]  out.write(cpio.getKey());  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpio.getKey());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpio.getKey());	  out.write(CpioArchiveEntry.getKey());    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
199	[BUG]  [BUGGY]  out.write(this.entryFormat.getKey());  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.entryFormat.getKey());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.entryFormat.getKey());	  out.write(CpioArchiveEntry.getKey());    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
200	[BUG]  [BUGGY]  out.write(this.crec.getKey());  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.crec.getKey());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.crec.getKey());	  out.write(CpioArchiveEntry.getKey());    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
201	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  return  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  return  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  return	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    return    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
202	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  continue  [CE]  ';'  expected  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  continue  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed)  {  continue	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    return    	non-compiled	[CE]  ';'  expected	56	None	replace
203	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i,  out);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
204	[BUG]  [BUGGY]  ensureOpen(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }  [CE]  '.class'  expected  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  ensureOpen(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	ensureOpen(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  '.class'  expected	128	None	replace
205	[BUG]  [BUGGY]  ensureOpen(int  i  =  0;  i  <  this.closed;  ++i)  {  out.write(this.cpioEntry.getValue());  [CE]  '.class'  expected  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  ensureOpen(int  i  =  0;  i  <  this.closed;  ++i)  {  out.write(this.cpioEntry.getValue());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	ensureOpen(int  i  =  0;  i  <  this.closed;  ++i)  {  out.write(this.cpioEntry.getValue());	  if(this.finished)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  '.class'  expected	128	None	replace
206	[BUG]  [BUGGY]  out.write(cpio);  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpio);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpio);	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpio    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
207	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(cpio.getAbsolutePath());  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(cpio.getAbsolutePath());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(cpio.getAbsolutePath());	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpio    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
208	[BUG]  [BUGGY]  OutputStream  out  =  cpio.getOutputStream();  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  cpio.getOutputStream();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  cpio.getOutputStream();	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpio    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
209	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
210	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.finished;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.finished;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  this.finished;  i++)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
211	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.cloned.clone();  if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =(OutputStream)this.cloned.clone();  if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =(OutputStream)this.cloned.clone();  if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
212	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
213	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.cloned.clone();  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =(OutputStream)this.cloned.clone();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =(OutputStream)this.cloned.clone();	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
214	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.cloned.clone();  if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =(OutputStream)this.cloned.clone();  if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =(OutputStream)this.cloned.clone();  if(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
215	[BUG]  [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.closed)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
216	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.close  [CE]  ')'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.close  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.close	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.close    	non-compiled	[CE]  ')'  expected	150	None	replace
217	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.close  }  [CE]  ')'  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.close  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.close  }	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.close    	non-compiled	[CE]  ')'  expected	150	None	replace
218	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.close  }  [CE]  ')'  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.close  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.close  }	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.close    	non-compiled	[CE]  ')'  expected	150	None	replace
219	[BUG]  [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.close    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
220	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.close  [CE]  ')'  expected  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.close  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.close	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.close    	non-compiled	[CE]  ')'  expected	150	None	replace
221	[BUG]  [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	&&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
222	[BUG]  [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clon  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clon  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	&&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clon	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
223	[BUG]  [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	&&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
224	[BUG]  [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEnt  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEnt  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	&&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEnt	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
225	[BUG]  [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	&&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
226	[BUG]  [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clo  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clo  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	&&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clo	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
227	[BUG]  [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArch  [CE]  illegal  start  of  expression  [FE]                                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArch  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	&&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArch	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
228	[BUG]  [BUGGY]  because(this.closed)  {  for(int  i  =  0;  i  <  it.next;  ++i)  {  out.close();  }  [CE]  ';'  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  because(this.closed)  {  for(int  i  =  0;  i  <  it.next;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	because(this.closed)  {  for(int  i  =  0;  i  <  it.next;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    ++i)    {    out.close();    }    	non-compiled	[CE]  ';'  expected	6	None	replace
229	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.next;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.next;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.next;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
230	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  its.next;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  its.next;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  its.next;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
231	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.next;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.next;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  that.next;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
232	[BUG]  [BUGGY]  while(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.finished)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }	  while(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
233	[BUG]  [BUGGY]  while(!this.finished)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(!this.finished)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(!this.finished)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }	  while(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
234	[BUG]  [BUGGY]  while(!this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(!this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(!this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }	  while(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
235	[BUG]  [BUGGY]  while(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }	  while(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
236	[BUG]  [BUGGY]  while(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }	  while(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
237	[BUG]  [BUGGY]  while(this.finished)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.finished)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.finished)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }	  while(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
238	[BUG]  [BUGGY]  out.defaultWrite( "n ");  [CE]  illegal  start  of  expression  [FE]                                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.defaultWrite( "n ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.defaultWrite( "n ");	  out.write('n');    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
239	[BUG]  [BUGGY]  out.write('n',  this.cpioEntry.length);  [CE]  illegal  start  of  expression  [FE]                                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write('n',  this.cpioEntry.length);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write('n',  this.cpioEntry.length);	  out.write('n');    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
240	[BUG]  [BUGGY]  out.write(this.enabled);  [CE]  illegal  start  of  expression  [FE]                                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.enabled);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.enabled);	  out.write('n');    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
241	[BUG]  [BUGGY]  out.write(cpioEntry.getKey()  [CE]  ')'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpioEntry.getKey()  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.getKey()	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getKey()    	non-compiled	[CE]  ')'  expected	59	None	replace
242	[BUG]  [BUGGY]  out.write(cpioEntry.getValue()  [CE]  ')'  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpioEntry.getValue()  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.getValue()	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getKey()    	non-compiled	[CE]  ')'  expected	59	None	replace
243	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals(  [CE]  '.class'  expected  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  For(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals(  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	For(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals(	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.equals(    	non-compiled	[CE]  '.class'  expected	15	None	replace
244	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.equals(  [CE]  '.class'  expected  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  For(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.equals(  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	For(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.equals(	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.equals(    	non-compiled	[CE]  '.class'  expected	15	None	replace
245	[BUG]  [BUGGY]  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals(  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals(  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.equals(	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.equals(    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
246	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
247	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.  [CE]  <identifier>  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.	  if(this.closed)    {    for(int    i    =    0;    i    <    this.clone();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
248	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone()  [CE]  ';'  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone()  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone()	  if(this.closed)    {    for(int    i    =    0;    i    <    this.clone();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  ';'  expected	7	None	replace
249	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close()  [CE]  ';'  expected  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close()  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close()	  if(this.closed)    {    for(int    i    =    0;    i    <    this.clone();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  ';'  expected	7	None	replace
250	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone  [CE]  ';'  expected  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone	  if(this.closed)    {    for(int    i    =    0;    i    <    this.clone();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  ';'  expected	7	None	replace
251	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)super.clone();  out.close();  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)super.clone();  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)super.clone();  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.clone();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
252	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new  IOException(  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new  IOException(  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new  IOException(	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.closed)    {    throw    new    IOException(   "    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
253	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new  IOException  [CE]  '('  or  '['  expected  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new  IOException  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new  IOException	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.closed)    {    throw    new    IOException(   "    	non-compiled	[CE]  '('  or  '['  expected	23	None	replace
254	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {  throw  new  IOException( "  [CE]  unclosed  string  literal  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {  throw  new  IOException( "  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {  throw  new  IOException( "	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.closed)    {    throw    new    IOException(   "    	non-compiled	[CE]  unclosed  string  literal	23	None	replace
255	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {  throw  new  [CE]  <identifier>  expected  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {  throw  new  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {  throw  new	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.closed)    {    throw    new    IOException(   "    	non-compiled	[CE]  <identifier>  expected	23	None	replace
256	[BUG]  [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEnt  [CE]  ')'  expected  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEnt  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEnt	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  ')'  expected	22	None	replace
257	[BUG]  [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArch  [CE]  ')'  expected  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArch  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArch	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  ')'  expected	22	None	replace
258	[BUG]  [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
259	[BUG]  [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  }	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
260	[BUG]  [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)  [CE]  ';'  expected  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  ';'  expected	22	None	replace
261	[BUG]  [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry  [CE]  ')'  expected  [FE]                                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  ')'  expected	22	None	replace
262	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if  [CE]  '('  expected  [FE]                                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  '('  expected	22	None	replace
263	[BUG]  [BUGGY]  while(this.closed)  {  throw  new  IOException( "Stream  closed ");  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.closed)  {  throw  new  IOException( "Stream  closed ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.closed)  {  throw  new  IOException( "Stream  closed ");	  if(this.open)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
264	[BUG]  [BUGGY]  out.defaultWrite( "null ");  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.defaultWrite( "null ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.defaultWrite( "null ");	  out.write(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
265	[BUG]  [BUGGY]  out.write( ".s.IFJDCS ".getBytes());  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( ".s.IFJDCS ".getBytes());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( ".s.IFJDCS ".getBytes());	  out.write(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
266	[BUG]  [BUGGY]  out.write( ".s.IFJDCS ".toString());  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( ".s.IFJDCS ".toString());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( ".s.IFJDCS ".toString());	  out.write(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
267	[BUG]  [BUGGY]  out.write( "n ".getBytes());  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( "n ".getBytes());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "n ".getBytes());	  out.write(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
268	[BUG]  [BUGGY]  out.write( ".s.IFJDCS ");  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( ".s.IFJDCS ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( ".s.IFJDCS ");	  out.write(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
269	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.getValue();  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.getValue();  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.getValue();  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
270	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.iterator.next();  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.iterator.next();  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.iterator.next();  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
271	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.remove();  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.remove();  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.remove();  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
272	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  its.next();  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  its.next();  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  its.next();  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
273	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.next();  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.next();  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.next();  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
274	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
275	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
276	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.cloned.iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.cloned.iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  names  =  this.cloned.iterator();	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	62	None	replace
277	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  it  =  this.cloned.iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  it  =  this.cloned.iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  it  =  this.cloned.iterator();	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	62	None	replace
278	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.cloned.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.cloned.keySet().iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  names  =  this.cloned.keySet().iterator();	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	62	None	replace
279	[BUG]  [BUGGY]  out.write(CpioArchiveEntry.class,  crc);  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(CpioArchiveEntry.class,  crc);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(CpioArchiveEntry.class,  crc);	  out.write(CpioArchiveEntry.class);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
280	[BUG]  [BUGGY]  out.write(this.crc,  CpioArchiveEntry.class);  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.crc,  CpioArchiveEntry.class);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.crc,  CpioArchiveEntry.class);	  out.write(CpioArchiveEntry.class);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
281	[BUG]  [BUGGY]  out.write(cpioEntry.class);  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpioEntry.class);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.class);	  out.write(CpioArchiveEntry.class);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
282	[BUG]  [BUGGY]  out.write(CpioArchiveEntry.DEFAULT);  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(CpioArchiveEntry.DEFAULT);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(CpioArchiveEntry.DEFAULT);	  out.write(CpioArchiveEntry.class);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
283	[BUG]  [BUGGY]  out.write(CpioArchiveEntry.DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(CpioArchiveEntry.DEFAULT_SYNTHETIC);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(CpioArchiveEntry.DEFAULT_SYNTHETIC);	  out.write(CpioArchiveEntry.class);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
284	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  throw  new  [CE]  <identifier>  expected  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  throw  new  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  throw  new	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.isOpen())    {    throw    new    	non-compiled	[CE]  <identifier>  expected	34	None	replace
285	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.finished;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.finished;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.finished;  i++)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
286	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.finished;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.finished;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  that.finished;  i++)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
287	[BUG]  [BUGGY]  if(!this.closed)  {  out.close();  }  else  {  this.closed  =  true;  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(!this.closed)  {  out.close();  }  else  {  this.closed  =  true;  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(!this.closed)  {  out.close();  }  else  {  this.closed  =  true;  }	  if(this.closed)    {    out.close();    }    else    {    this.closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
288	[BUG]  [BUGGY]  if(this.written)  {  out.close();  }  else  {  this.closed  =  true;  }  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.written)  {  out.close();  }  else  {  this.closed  =  true;  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.written)  {  out.close();  }  else  {  this.closed  =  true;  }	  if(this.closed)    {    out.close();    }    else    {    this.closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
289	[BUG]  [BUGGY]  if(this.closed)  {  out.close();  }  else  {  this.closed  =  false;  }  [CE]  illegal  start  of  expression  [FE]                                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  out.close();  }  else  {  this.closed  =  false;  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  out.close();  }  else  {  this.closed  =  false;  }	  if(this.closed)    {    out.close();    }    else    {    this.closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
290	[BUG]  [BUGGY]  if(this.written)  {  out.close();  }  else  {  this.closed  =  false;  }  [CE]  illegal  start  of  expression  [FE]                                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.written)  {  out.close();  }  else  {  this.closed  =  false;  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.written)  {  out.close();  }  else  {  this.closed  =  false;  }	  if(this.closed)    {    out.close();    }    else    {    this.closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
291	[BUG]  [BUGGY]  out.defaultWrite(this.entryFormat);  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.defaultWrite(this.entryFormat);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.defaultWrite(this.entryFormat);	  out.write(this.entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
292	[BUG]  [BUGGY]  out.write(this.format);  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.format);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.format);	  out.write(this.entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
293	[BUG]  [BUGGY]  out.write(this.cpioEntry);  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.cpioEntry);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.cpioEntry);	  out.write(this.entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
294	[BUG]  [BUGGY]  out.write(this.entryFormat,  cpioEntry.getValue());  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.entryFormat,  cpioEntry.getValue());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.entryFormat,  cpioEntry.getValue());	  out.write(this.entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
295	[BUG]  [BUGGY]  out.write(this.entryFormat,  this.cpioEntry);  [CE]  illegal  start  of  expression  [FE]                                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.entryFormat,  this.cpioEntry);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.entryFormat,  this.cpioEntry);	  out.write(this.entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
296	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.close();  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
297	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)super.clone();  out.close();  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)super.clone();  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)super.clone();  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
298	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone  [CE]  ';'  expected  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  ';'  expected	11	None	replace
299	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone()  [CE]  ';'  expected  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone()  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone()	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  ';'  expected	11	None	replace
300	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.flush();  }  [CE]  illegal  start  of  expression  [FE]                                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.flush();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.flush();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
301	[BUG]  [BUGGY]  out.write(this.cpio);  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.cpio);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.cpio);	  out.write(this.closed);    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
302	[BUG]  [BUGGY]  out.write(this.cpioEntry.getKey());  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.cpioEntry.getKey());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.cpioEntry.getKey());	  out.write(this.closed);    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
303	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry  ==  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry  ==  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry  ==	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEnt    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
304	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry  ==  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry  ==  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry  ==	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEnt    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
305	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry!=  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry!=  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry!=	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEnt    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
306	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry!=  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry!=  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry!=	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEnt    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
307	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().close();  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().close();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().close();	  Thread.currentThread().getContextClassLoader().reset();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
308	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().start();  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().start();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().start();	  Thread.currentThread().getContextClassLoader().reset();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
309	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().set(this.closed);  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().set(this.closed);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().set(this.closed);	  Thread.currentThread().getContextClassLoader().reset();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
310	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().set(this);  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().set(this);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().set(this);	  Thread.currentThread().getContextClassLoader().reset();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
311	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().set(this.crc);  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().set(this.crc);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().set(this.crc);	  Thread.currentThread().getContextClassLoader().reset();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
312	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.next;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.next;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.next;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
313	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  its.next;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  its.next;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  its.next;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
314	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.getValue();  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.getValue();  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.getValue();  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
315	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.next;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.next;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  that.next;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
316	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.remove;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.remove;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.remove;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
317	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  it  =  this.closedList.iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  it  =  this.closedList.iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  it  =  this.closedList.iterator();	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.close();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	121	None	replace
318	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  it  =  names.iterator().next();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  it  =  names.iterator().next();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  it  =  names.iterator().next();	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.close();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	121	None	replace
319	[BUG]  [BUGGY]  Thread.currentThread().interrupt(this.closed);  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().interrupt(this.closed);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().interrupt(this.closed);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
320	[BUG]  [BUGGY]  Thread.sleep().interrupt();  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.sleep().interrupt();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.sleep().interrupt();	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
321	[BUG]  [BUGGY]  Thread.currentThread().interrupt(this.cpioEntry);  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().interrupt(this.cpioEntry);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().interrupt(this.cpioEntry);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
322	[BUG]  [BUGGY]  Thread.currentThread().interrupt(this.crc);  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().interrupt(this.crc);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().interrupt(this.crc);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
323	[BUG]  [BUGGY]  Thread.sleep(1000);  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.sleep(1000);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.sleep(1000);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
324	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.open;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.open;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  that.open;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
325	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.cloned;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.cloned;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  that.cloned;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
326	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  this.closed  =  true;  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  this.closed  =  true;  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  this.closed  =  true;  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
327	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  outputStream.close();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  outputStream.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  outputStream.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
328	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  out.flush();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  out.flush();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  out.flush();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
329	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  throw  new  IOException( " ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  throw  new  IOException( " ");  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
330	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  break;  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  break;  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
331	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed  }  [CE]  ')'  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed  }	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed    	non-compiled	[CE]  ')'  expected	151	None	replace
332	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed!=  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed!=  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed!=	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
333	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed  ==  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed  ==  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed  ==	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
334	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed!=  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed!=  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed!=	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
335	[BUG]  [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
336	[BUG]  [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
337	[BUG]  [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }  }  else  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }  }  else  {  throw  new  IOException( " ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }  }  else  {  throw  new  IOException( " ");  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
338	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream();  if(this.closed!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  getOutputStream();  if(this.closed!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  getOutputStream();  if(this.closed!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }	  OutputStream    out    =    getOutputStream();    if(out!=    null)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
339	[BUG]  [BUGGY]  if(this.closed)  {  OutputStream  out  =  getOutputStream();  if(out!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  OutputStream  out  =  getOutputStream();  if(out!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  OutputStream  out  =  getOutputStream();  if(out!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }	  OutputStream    out    =    getOutputStream();    if(out!=    null)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
340	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream();  if(out  ==  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  getOutputStream();  if(out  ==  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  getOutputStream();  if(out  ==  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }	  OutputStream    out    =    getOutputStream();    if(out!=    null)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
341	[BUG]  [BUGGY]  if(this.closed)  {  OutputStream  out  =  getOutputStream();  if(out!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  OutputStream  out  =  getOutputStream();  if(out!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  OutputStream  out  =  getOutputStream();  if(out!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  }	  OutputStream    out    =    getOutputStream();    if(out!=    null)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
342	[BUG]  [BUGGY]  final  OutputStream  out  =  getOutputStream();  if(out!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  final  OutputStream  out  =  getOutputStream();  if(out!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	final  OutputStream  out  =  getOutputStream();  if(out!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }	  OutputStream    out    =    getOutputStream();    if(out!=    null)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
343	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT,  crc);  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT,  crc);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT,  crc);	  OutputStream    out    =    new    FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT);    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
344	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(cpioEntry.DEFAULT_OUTPUT);  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(cpioEntry.DEFAULT_OUTPUT);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(cpioEntry.DEFAULT_OUTPUT);	  OutputStream    out    =    new    FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT);    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
345	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.crc,  CpioArchiveEntry.DEFAULT_OUTPUT);  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.crc,  CpioArchiveEntry.DEFAULT_OUTPUT);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.crc,  CpioArchiveEntry.DEFAULT_OUTPUT);	  OutputStream    out    =    new    FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT);    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
346	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.closed);  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.closed);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.closed);	  OutputStream    out    =    new    FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT);    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
347	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(cpioEntry.DEFAULT_OUTPUT,  crc);  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(cpioEntry.DEFAULT_OUTPUT,  crc);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(cpioEntry.DEFAULT_OUTPUT,  crc);	  OutputStream    out    =    new    FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT);    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
348	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT,  this.crc);  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT,  this.crc);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT,  this.crc);	  OutputStream    out    =    new    FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT);    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
349	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT,  this.closed);  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT,  this.closed);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT,  this.closed);	  OutputStream    out    =    new    FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT);    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
350	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.cpioEntry.iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.cpioEntry.iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  names  =  this.cpioEntry.iterator();	  Iterator    <    CpioArchiveEntry>    names    =    this.closed.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	160	None	replace
351	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  cpioEntry.iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  cpioEntry.iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  names  =  cpioEntry.iterator();	  Iterator    <    CpioArchiveEntry>    names    =    this.closed.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	160	None	replace
352	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.closed.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.closed.entrySet().iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  names  =  this.closed.entrySet().iterator();	  Iterator    <    CpioArchiveEntry>    names    =    this.closed.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	160	None	replace
353	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.enabled.iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.enabled.iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  names  =  this.enabled.iterator();	  Iterator    <    CpioArchiveEntry>    names    =    this.closed.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	160	None	replace
354	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.closed.values().iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.closed.values().iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  names  =  this.closed.values().iterator();	  Iterator    <    CpioArchiveEntry>    names    =    this.closed.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	160	None	replace
355	[BUG]  [BUGGY]  out.write(cpioEntry);  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpioEntry);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry);	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEnt    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
356	[BUG]  [BUGGY]  OutputStream  out  =  this.getOutputStream();  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  this.getOutputStream();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  this.getOutputStream();	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
357	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream().getOutputStream();  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  getOutputStream().getOutputStream();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  getOutputStream().getOutputStream();	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
358	[BUG]  [BUGGY]  OutputStream  out  =  getInputStream();  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  getInputStream();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  getInputStream();	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
359	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(),  this.cpioEntry);  [CE]  <identifier>  expected  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  getOutputStream(),  this.cpioEntry);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  getOutputStream(),  this.cpioEntry);	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
360	[BUG]  [BUGGY]  OutputStream  out  =  this.outputStream;  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  this.outputStream;  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  this.outputStream;	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
361	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(this.out);  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  getOutputStream(this.out);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  getOutputStream(this.out);	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
362	[BUG]  [BUGGY]  if(this.readOnly)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.readOnly)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.readOnly)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.readOnly;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
363	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.readOnly;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
364	[BUG]  [BUGGY]  if(this.readOnly)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.readOnly)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.readOnly)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.readOnly;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
365	[BUG]  [BUGGY]  if(this.readOnly)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.readOnly)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.readOnly)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.readOnly;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
366	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.readOnly.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.readOnly.keySet().iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  names  =  this.readOnly.keySet().iterator();	  if(this.finished)    {    for(int    i    =    0;    i    <    this.readOnly;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	147	None	replace
367	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.readOnly.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.readOnly.entrySet().iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  names  =  this.readOnly.entrySet().iterator();	  if(this.finished)    {    for(int    i    =    0;    i    <    this.readOnly;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	147	None	replace
368	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.is  [CE]  ')'  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.is  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.is	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.is    	non-compiled	[CE]  ')'  expected	138	None	replace
369	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed.get(i);  if(cpioEntry.is  [CE]  ')'  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed.get(i);  if(cpioEntry.is  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed.get(i);  if(cpioEntry.is	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.is    	non-compiled	[CE]  ')'  expected	138	None	replace
370	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.is  [CE]  ')'  expected  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.is  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.is	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.is    	non-compiled	[CE]  ')'  expected	138	None	replace
371	[BUG]  [BUGGY]  if(!this.closed)  {  out.close();  }  else  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(!this.closed)  {  out.close();  }  else  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(!this.closed)  {  out.close();  }  else  {  out.close();  }	  if(this.closed)    {    out.close();    }    else    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
372	[BUG]  [BUGGY]  if(!this.closed)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(!this.closed)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(!this.closed)  {  out.close();  }	  if(this.closed)    {    out.close();    }    else    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
373	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.closed);  [CE]  ';'  expected  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =(OutputStream)this.closed);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =(OutputStream)this.closed);	  if(this.closed)    {    out.close();    }    else    {    out.close();    }    	non-compiled	[CE]  ';'  expected	139	None	replace
374	[BUG]  [BUGGY]  if(this.readOnly)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.readOnly)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.readOnly)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.readOnly;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
375	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.readOnly;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
376	[BUG]  [BUGGY]  if(this.readOnly)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.readOnly)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.readOnly)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.readOnly;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
377	[BUG]  [BUGGY]  if(this.readOnly)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.readOnly)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.readOnly)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.readOnly;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
378	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.entryFormat,  this.cpioEntry);  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.entryFormat,  this.cpioEntry);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.entryFormat,  this.cpioEntry);	  OutputStream    out    =    new    FileOutputStream(this.entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
379	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.entryFormat,  true);  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.entryFormat,  true);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.entryFormat,  true);	  OutputStream    out    =    new    FileOutputStream(this.entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
380	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.file);  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.file);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.file);	  OutputStream    out    =    new    FileOutputStream(this.entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
381	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.entryFormat,  this.zip);  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.entryFormat,  this.zip);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.entryFormat,  this.zip);	  OutputStream    out    =    new    FileOutputStream(this.entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
382	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.entryFormat,  null);  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.entryFormat,  null);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.entryFormat,  null);	  OutputStream    out    =    new    FileOutputStream(this.entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
383	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.entryFormat,  cpioEntry.length);  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.entryFormat,  cpioEntry.length);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.entryFormat,  cpioEntry.length);	  OutputStream    out    =    new    FileOutputStream(this.entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
384	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.enabled));  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.enabled));  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.enabled));	  OutputStream    out    =    new    BufferedOutputStream(new    FileOutputStream(   "UTF-8   "));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
385	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.zipFile));  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.zipFile));  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.zipFile));	  OutputStream    out    =    new    BufferedOutputStream(new    FileOutputStream(   "UTF-8   "));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
386	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.entryFormat));  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.entryFormat));  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.entryFormat));	  OutputStream    out    =    new    BufferedOutputStream(new    FileOutputStream(   "UTF-8   "));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
387	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.file));  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.file));  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.file));	  OutputStream    out    =    new    BufferedOutputStream(new    FileOutputStream(   "UTF-8   "));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
388	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.entryFormat "));  [CE]  unclosed  string  literal  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.entryFormat "));  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.entryFormat "));	  OutputStream    out    =    new    BufferedOutputStream(new    FileOutputStream(   "UTF-8   "));    	non-compiled	[CE]  unclosed  string  literal	71	None	replace
389	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.open;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.open;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.open;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
390	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  output.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  output.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  output.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
391	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
392	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
393	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
394	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.finish();  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.finish();  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  this.finish();  ++i)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
395	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
396	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
397	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
398	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
399	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  it  =  this.closed.iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  it  =  this.closed.iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  it  =  this.closed.iterator();	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	124	None	replace
400	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed  [CE]  ')'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    	non-compiled	[CE]  ')'  expected	18	None	replace
401	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.open;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.open;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.open;  ++i)  {  out.close();  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
402	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
403	[BUG]  [BUGGY]  int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    out.close();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	167	None	replace
404	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  out.close();  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
405	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.flush();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.flush();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.flush();  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
406	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(  [CE]  '.class'  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  For(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	For(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals(	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals(    	non-compiled	[CE]  '.class'  expected	12	None	replace
407	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed.get(i);  if(cpioEntry.equals(  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed.get(i);  if(cpioEntry.equals(  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed.get(i);  if(cpioEntry.equals(	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals(    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
408	[BUG]  [BUGGY]  out.write(cpioEntry.getBytes());  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpioEntry.getBytes());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.getBytes());	  out.write(cpioEntry.getKey());    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
409	[BUG]  [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this  [CE]  ';'  expected  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.cloned;    out.close();    }    	non-compiled	[CE]  ';'  expected	120	None	replace
410	[BUG]  [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clon  [CE]  ';'  expected  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clon  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clon	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.cloned;    out.close();    }    	non-compiled	[CE]  ';'  expected	120	None	replace
411	[BUG]  [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.cloned;    out.close();    }    	non-compiled	[CE]  ';'  expected	120	None	replace
412	[BUG]  [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.cloned;    out.close();    }    	non-compiled	[CE]  ';'  expected	120	None	replace
413	[BUG]  [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEnt  [CE]  ')'  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEnt  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEnt	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.cloned;    out.close();    }    	non-compiled	[CE]  ')'  expected	120	None	replace
414	[BUG]  [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clo  [CE]  ';'  expected  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clo  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clo	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.cloned;    out.close();    }    	non-compiled	[CE]  ';'  expected	120	None	replace
415	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {  return;  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {  return;  }	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.closed)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
416	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  return;  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  return;  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  return;	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.closed)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
417	[BUG]  [BUGGY]  int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  return;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  return;  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  return;  }	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.closed)    {    return;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	52	None	replace
418	[BUG]  [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }  }  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
419	[BUG]  [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
420	[BUG]  [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }  }  else  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }  }  else  {  throw  new  IOException( " ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }  }  else  {  throw  new  IOException( " ");  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
421	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(this.open);  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(this.open);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName(this.open);	  Thread.currentThread().getContextClassLoader().setCurrentName(this.closed);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
422	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(this.cpioEntry);  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(this.cpioEntry);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName(this.cpioEntry);	  Thread.currentThread().getContextClassLoader().setCurrentName(this.closed);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
423	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(this.crc);  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(this.crc);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName(this.crc);	  Thread.currentThread().getContextClassLoader().setCurrentName(this.closed);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
424	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(this.clone);  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(this.clone);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName(this.clone);	  Thread.currentThread().getContextClassLoader().setCurrentName(this.closed);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
425	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(this.cloned);  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(this.cloned);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName(this.cloned);	  Thread.currentThread().getContextClassLoader().setCurrentName(this.closed);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
426	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(this.file);  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(this.file);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName(this.file);	  Thread.currentThread().getContextClassLoader().setCurrentName(this.closed);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
427	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed.get(i);  if(cpioEntry.  [CE]  <identifier>  expected  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed.get(i);  if(cpioEntry.  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed.get(i);  if(cpioEntry.	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.    	non-compiled	[CE]  <identifier>  expected	51	None	replace
428	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.  [CE]  '.class'  expected  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  For(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	For(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.    	non-compiled	[CE]  '.class'  expected	51	None	replace
429	[BUG]  [BUGGY]  this.closed  =  true;  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  this.closed  =  true;  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	this.closed  =  true;  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
430	[BUG]  [BUGGY]  out.write(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i,  out);  }  [CE]  ';'  expected  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  ';'  expected	26	None	replace
431	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen())  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen())  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen())  {  out.close();  }	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.isOpen())    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
432	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  out.  [CE]  <identifier>  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  out.  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  out.	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.isOpen())    {    out.close();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
433	[BUG]  [BUGGY]  cpioEntry.close();  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  cpioEntry.close();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	cpioEntry.close();	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =    new    CpioArchiveEntry();    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
434	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this);  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this);	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =    new    CpioArchiveEntry();    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
435	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream( ".UTF-8 ");  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream( ".UTF-8 ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream( ".UTF-8 ");	  OutputStream    out    =    new    BufferedOutputStream(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
436	[BUG]  [BUGGY]  out  =  new  BufferedOutputStream( "UTF-8 ");  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out  =  new  BufferedOutputStream( "UTF-8 ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out  =  new  BufferedOutputStream( "UTF-8 ");	  OutputStream    out    =    new    BufferedOutputStream(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
437	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(this.entryFormat);  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(this.entryFormat);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream(this.entryFormat);	  OutputStream    out    =    new    BufferedOutputStream(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
438	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(this.enabled);  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(this.enabled);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream(this.enabled);	  OutputStream    out    =    new    BufferedOutputStream(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
439	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(this.info);  [CE]  illegal  start  of  expression  [FE]                                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(this.info);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream(this.info);	  OutputStream    out    =    new    BufferedOutputStream(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
440	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(this.out);  [CE]  illegal  start  of  expression  [FE]                                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(this.out);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream(this.out);	  OutputStream    out    =    new    BufferedOutputStream(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
441	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen  [CE]  ')'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.isOpen    	non-compiled	[CE]  ')'  expected	48	None	replace
442	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.open;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.open;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  that.open;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
443	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  output.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  output.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  output.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
444	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  --i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  --i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  --i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
445	[BUG]  [BUGGY]  out.write( "null ");  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( "null ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "null ");	  if(this.closed)    {    out.write(   "n   ");    }    else    {    out.write('n');    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
446	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.cpioEntry.length;  ++i)  {  out.write(cpioEntry.getValue());  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.cpioEntry.length;  ++i)  {  out.write(cpioEntry.getValue());  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.cpioEntry.length;  ++i)  {  out.write(cpioEntry.getValue());  }	  this.closed    =    true;    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
447	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.cpioEntry.length;  i++)  {  out.write(cpioEntry.getValue());  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.cpioEntry.length;  i++)  {  out.write(cpioEntry.getValue());  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.cpioEntry.length;  i++)  {  out.write(cpioEntry.getValue());  }	  this.closed    =    true;    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
448	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.cpioEntry.length;  ++i)  {  out.write(cpioEntry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.cpioEntry.length;  ++i)  {  out.write(cpioEntry.getKey());  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.cpioEntry.length;  ++i)  {  out.write(cpioEntry.getKey());  }	  this.closed    =    true;    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
449	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.cpioEntry.length;  i++)  {  out.write(cpioEntry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.cpioEntry.length;  i++)  {  out.write(cpioEntry.getKey());  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.cpioEntry.length;  i++)  {  out.write(cpioEntry.getKey());  }	  this.closed    =    true;    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
450	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.cpioEntry.length;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.cpioEntry.length;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.cpioEntry.length;  ++i)  {  out.close();  }	  this.closed    =    true;    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
451	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.cpioEntry.size();  ++i)  {  out.write(cpioEntry.getValue());  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.cpioEntry.size();  ++i)  {  out.write(cpioEntry.getValue());  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.cpioEntry.size();  ++i)  {  out.write(cpioEntry.getValue());  }	  this.closed    =    true;    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
452	[BUG]  [BUGGY]  out.write(cpioEntry.getValu());  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpioEntry.getValu());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.getValu());	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValu    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
453	[BUG]  [BUGGY]  out.write(cpioEntry.getValu  [CE]  ')'  expected  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpioEntry.getValu  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.getValu	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValu    	non-compiled	[CE]  ')'  expected	36	None	replace
454	[BUG]  [BUGGY]  out.write(cpioEntry.getValue  [CE]  ')'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpioEntry.getValue  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.getValue	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValu    	non-compiled	[CE]  ')'  expected	36	None	replace
455	[BUG]  [BUGGY]  out.write(cpioEntry.getValue);  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpioEntry.getValue);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.getValue);	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValu    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
456	[BUG]  [BUGGY]  out.write(this.file);  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.file);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.file);	  out.write(entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
457	[BUG]  [BUGGY]  if(this.open!=  null)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.open!=  null)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.open!=  null)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
458	[BUG]  [BUGGY]  if(this.open!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.open!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.open!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
459	[BUG]  [BUGGY]  if(this.open!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.open!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.open!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
460	[BUG]  [BUGGY]  OutputStream  out  =  this.cpioEntry.getInputStream();  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  this.cpioEntry.getInputStream();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  this.cpioEntry.getInputStream();	  OutputStream    out    =    cpioEntry.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
461	[BUG]  [BUGGY]  OutputStream  out  =  crc.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  crc.getInputStream();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  crc.getInputStream();	  OutputStream    out    =    cpioEntry.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
462	[BUG]  [BUGGY]  OutputStream  out  =  this.crc.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  this.crc.getInputStream();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  this.crc.getInputStream();	  OutputStream    out    =    cpioEntry.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
463	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)super.clone();  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =(OutputStream)super.clone();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =(OutputStream)super.clone();	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)super.clone();    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
464	[BUG]  [BUGGY]  if(!this.closed)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(!this.closed)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(!this.closed)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
465	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
466	[BUG]  [BUGGY]  if(!this.finished)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(!this.finished)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(!this.finished)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
467	[BUG]  [BUGGY]  if(!this.finished)  {  for(int  i  =  0;  i  <  that.finished;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(!this.finished)  {  for(int  i  =  0;  i  <  that.finished;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(!this.finished)  {  for(int  i  =  0;  i  <  that.finished;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
468	[BUG]  [BUGGY]  EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }  else  {  out.write('n');  }  [CE]  ';'  expected  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }  else  {  out.write('n');  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }  else  {  out.write('n');  }	  if(this.closed)    {    out.write('n');    }    else    {    out.write('n');    }    	non-compiled	[CE]  ';'  expected	40	None	replace
469	[BUG]  [BUGGY]  if(this.closed)  {  out.write('n');  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  out.write('n');  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  out.write('n');  }	  if(this.closed)    {    out.write('n');    }    else    {    out.write('n');    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
470	[BUG]  [BUGGY]  EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }  else  if(!this.closed)  {  out.write('n');  }  [CE]  ';'  expected  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }  else  if(!this.closed)  {  out.write('n');  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }  else  if(!this.closed)  {  out.write('n');  }	  if(this.closed)    {    out.write('n');    }    else    {    out.write('n');    }    	non-compiled	[CE]  ';'  expected	40	None	replace
471	[BUG]  [BUGGY]  EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }  else  if(this.closed)  {  out.write('n');  }  [CE]  ';'  expected  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }  else  if(this.closed)  {  out.write('n');  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }  else  if(this.closed)  {  out.write('n');  }	  if(this.closed)    {    out.write('n');    }    else    {    out.write('n');    }    	non-compiled	[CE]  ';'  expected	40	None	replace
472	[BUG]  [BUGGY]  EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }  [CE]  ';'  expected  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	EncoderUtil.writePath(out,  this.closed)  {  out.write('n');  }	  if(this.closed)    {    out.write('n');    }    else    {    out.write('n');    }    	non-compiled	[CE]  ';'  expected	40	None	replace
473	[BUG]  [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
474	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
475	[BUG]  [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
476	[BUG]  [BUGGY]  if(this.cloned)  {  if(!this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  if(!this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  if(!this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
477	[BUG]  [BUGGY]  out.write(CpioArchiveEntry.getValue(),  crc);  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(CpioArchiveEntry.getValue(),  crc);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(CpioArchiveEntry.getValue(),  crc);	  out.write(CpioArchiveEntry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
478	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.  [CE]  <identifier>  expected  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
479	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone  [CE]  ';'  expected  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  ';'  expected	96	None	replace
480	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone()  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone()  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone()	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  ';'  expected	96	None	replace
481	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close()  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close()  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close()	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  ';'  expected	96	None	replace
482	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)super.clone();  out.close();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)super.clone();  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)super.clone();  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
483	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.finished;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.finished;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  that.finished;  ++i)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
484	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.finished;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.finished;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.finished;  ++i)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
485	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.finish;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.finish;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.finish;  ++i)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
486	[BUG]  [BUGGY]  ensureOpen();  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  ensureOpen();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	ensureOpen();	  ensureOpen(i);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
487	[BUG]  [BUGGY]  ensureOpen(this.closed);  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  ensureOpen(this.closed);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	ensureOpen(this.closed);	  ensureOpen(i);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
488	[BUG]  [BUGGY]  ensureOpen(this.cpioEntry);  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  ensureOpen(this.cpioEntry);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	ensureOpen(this.cpioEntry);	  ensureOpen(i);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
489	[BUG]  [BUGGY]  ensureOpen(this.out);  [CE]  illegal  start  of  expression  [FE]                                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  ensureOpen(this.out);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	ensureOpen(this.out);	  ensureOpen(i);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
490	[BUG]  [BUGGY]  ensureOpen(this.open);  [CE]  illegal  start  of  expression  [FE]                                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  ensureOpen(this.open);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	ensureOpen(this.open);	  ensureOpen(i);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
491	[BUG]  [BUGGY]  ensureOpen(this.crc);  [CE]  illegal  start  of  expression  [FE]                                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  ensureOpen(this.crc);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	ensureOpen(this.crc);	  ensureOpen(i);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
492	[BUG]  [BUGGY]  ensureOpen(this.cpio);  [CE]  illegal  start  of  expression  [FE]                                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  ensureOpen(this.cpio);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	ensureOpen(this.cpio);	  ensureOpen(i);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
493	[BUG]  [BUGGY]  out.write(this.pioEntry.getValue());  [CE]  illegal  start  of  expression  [FE]            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.pioEntry.getValue());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.pioEntry.getValue());	  out.write(cpioEntry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
494	[BUG]  [BUGGY]  int  i  =  0;  ++i)  {  ensureOpen();  }  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  int  i  =  0;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	int  i  =  0;  ++i)  {  ensureOpen();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  ';'  expected	61	None	replace
495	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new  IOException(  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new  IOException(  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  throw  new  IOException(	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed)    {    throw    new    IOException(    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
496	[BUG]  [BUGGY]  out.write(cpioEntry.getName());  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpioEntry.getName());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.getName());	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpi    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
497	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(crc.getName());  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(crc.getName());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(crc.getName());	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpi    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
498	[BUG]  [BUGGY]  if(this.finished)  {  this.closed  =  false;  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.finished)  {  this.closed  =  false;  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  this.closed  =  false;  }	  if(this.finished)    {    this.closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
499	[BUG]  [BUGGY]  if(this.closed  ||  this.finished)  {  this.closed  =  true;  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed  ||  this.finished)  {  this.closed  =  true;  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed  ||  this.finished)  {  this.closed  =  true;  }	  if(this.finished)    {    this.closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
500	[BUG]  [BUGGY]  This.closed  =  true;  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  This.closed  =  true;  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	This.closed  =  true;	  if(this.finished)    {    this.closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
501	[BUG]  [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
502	[BUG]  [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
503	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  that.cloned;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  that.cloned;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  that.cloned;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
504	[BUG]  [BUGGY]  out.write( "ArchiveEntry.closed: ");  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( "ArchiveEntry.closed: ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "ArchiveEntry.closed: ");	  out.write(   "ArchiveEntry.closed   ");    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
505	[BUG]  [BUGGY]  out.write( "ArchiveEntry.closedn ");  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( "ArchiveEntry.closedn ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "ArchiveEntry.closedn ");	  out.write(   "ArchiveEntry.closed   ");    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
506	[BUG]  [BUGGY]  out.defaultWrite( "ArchiveEntry.closed ");  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.defaultWrite( "ArchiveEntry.closed ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.defaultWrite( "ArchiveEntry.closed ");	  out.write(   "ArchiveEntry.closed   ");    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
507	[BUG]  [BUGGY]  out.write( ",ArchiveEntry.closed ");  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( ",ArchiveEntry.closed ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( ",ArchiveEntry.closed ");	  out.write(   "ArchiveEntry.closed   ");    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
508	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  false;  }  else  {  out.write( "n ");  }  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  false;  }  else  {  out.write( "n ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  false;  }  else  {  out.write( "n ");  }	  if(this.closed)    {    this.closed    =    true;    }    else    {    out.write(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
509	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.closed)    {    throw    new    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
510	[BUG]  [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if  [CE]  '('  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.closed)    {    throw    new    	non-compiled	[CE]  '('  expected	159	None	replace
511	[BUG]  [BUGGY]  if(this.finished)  {  this.closed  =  false;  }  else  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.finished)  {  this.closed  =  false;  }  else  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  this.closed  =  false;  }  else  {  out.close();  }	  if(this.finished)    {    this.closed    =    true;    }    else    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
512	[BUG]  [BUGGY]  if(this.closed)  {  if(this.finished)  {  this.closed  =  true;  }  else  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  if(this.finished)  {  this.closed  =  true;  }  else  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  if(this.finished)  {  this.closed  =  true;  }  else  {  out.close();  }	  if(this.finished)    {    this.closed    =    true;    }    else    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
513	[BUG]  [BUGGY]  if(this.closed)  {  if(this.finished)  {  this.closed  =  true;  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  if(this.finished)  {  this.closed  =  true;  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  if(this.finished)  {  this.closed  =  true;  }	  if(this.finished)    {    this.closed    =    true;    }    else    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
514	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.equals(c  [CE]  ')'  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.equals(c  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.equals(c	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals(c    	non-compiled	[CE]  ')'  expected	158	None	replace
515	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  out);  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  out);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextClassLoader(this,  out);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
516	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  cpioEntry);  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  cpioEntry);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextClassLoader(this,  cpioEntry);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
517	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  this);  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  this);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextClassLoader(this,  this);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
518	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  open);  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  open);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextClassLoader(this,  open);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
519	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  true);  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  true);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextClassLoader(this,  true);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
520	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  closed);  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  closed);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextClassLoader(this,  closed);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
521	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpi!=  [CE]  illegal  start  of  expression  [FE]            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpi!=  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpi!=	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpi    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
522	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpiicy  [CE]  ')'  expected  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpiicy  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpiicy	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpi    	non-compiled	[CE]  ')'  expected	115	None	replace
523	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.iterator.next();  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.iterator.next();  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.iterator.next();  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
524	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.remove();  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.remove();  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.remove();  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
525	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.next();  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.next();  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.next();  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
526	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  its.next();  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  its.next();  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  its.next();  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
527	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.getValue();  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.getValue();  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.getValue();  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
528	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.get();  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.get();  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.get();  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
529	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.getKey();  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.getKey();  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.getKey();  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
530	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next();  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next();  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.next();  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
531	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
532	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.close;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.close;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.close;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
533	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  throw  new  IOException(  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  throw  new  IOException(  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  throw  new  IOException(	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.isOpen())    {    throw    new    IOException(   "    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
534	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  throw  new  IOException  [CE]  '('  or  '['  expected  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  throw  new  IOException  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.isOpen())  {  throw  new  IOException	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.isOpen())    {    throw    new    IOException(   "    	non-compiled	[CE]  '('  or  '['  expected	31	None	replace
535	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen())  {  throw  new  IOException( "  [CE]  unclosed  string  literal  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen())  {  throw  new  IOException( "  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen())  {  throw  new  IOException( "	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.isOpen())    {    throw    new    IOException(   "    	non-compiled	[CE]  unclosed  string  literal	31	None	replace
536	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i,  out);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
537	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  it  =  this.opens().iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  it  =  this.opens().iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  it  =  this.opens().iterator();	  if(this.finished)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	66	None	replace
538	[BUG]  [BUGGY]  if(this.closed)  {  throw  new  IOException( "Stream  closed ");  }  else  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  throw  new  IOException( "Stream  closed ");  }  else  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  throw  new  IOException( "Stream  closed ");  }  else  {  out.close();  }	  if(this.closed)    {    throw    new    IOException(   "   ");    }    else    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
539	[BUG]  [BUGGY]  if(this.closed)  {  throw  new  IOException( "Stream  closed. ");  }  else  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  throw  new  IOException( "Stream  closed. ");  }  else  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  throw  new  IOException( "Stream  closed. ");  }  else  {  out.close();  }	  if(this.closed)    {    throw    new    IOException(   "   ");    }    else    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
540	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.enabled);  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.enabled);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.enabled);	  OutputStream    out    =    new    FileOutputStream(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
541	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.info);  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.info);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.info);	  OutputStream    out    =    new    FileOutputStream(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
542	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.format);  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.format);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.format);	  OutputStream    out    =    new    FileOutputStream(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
543	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.out);  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.out);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.out);	  OutputStream    out    =    new    FileOutputStream(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
544	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.zipFile);  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.zipFile);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.zipFile);	  OutputStream    out    =    new    FileOutputStream(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
545	[BUG]  [BUGGY]  out.write(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i,  out);  }  [CE]  ';'  expected  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i,  out);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  ';'  expected	131	None	replace
546	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =  new  CpioArchiveEntry();  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =  new  CpioArchiveEntry();  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =  new  CpioArchiveEntry();  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.open;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
547	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  ++i)  {  ensureOpen(i,  out);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
548	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream( ".UTF-8 "));  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream( ".UTF-8 "));  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream( ".UTF-8 "));	  OutputStream    out    =    new    BufferedOutputStream(new    FileOutputStream(   "UTF-8   "));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
549	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream( "UTF-8 ")));  [CE]  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream( "UTF-8 ")));  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream( "UTF-8 ")));	  OutputStream    out    =    new    BufferedOutputStream(new    FileOutputStream(   "UTF-8   "));    	non-compiled	[CE]  	71	None	replace
550	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.getPath()));  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.getPath()));  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.getPath()));	  OutputStream    out    =    new    BufferedOutputStream(new    FileOutputStream(   "UTF-8   "));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
551	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream( "UTF-8 "),  this.enabled);  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream( "UTF-8 "),  this.enabled);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream( "UTF-8 "),  this.enabled);	  OutputStream    out    =    new    BufferedOutputStream(new    FileOutputStream(   "UTF-8   "));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
552	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  that.finished;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  that.finished;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  that.finished;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
553	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  that.getValue();  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  that.getValue();  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  that.getValue();  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
554	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.outPath);  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.outPath);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.outPath);	  OutputStream    out    =    new    FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT);    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
555	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT,  this.entryFormat);  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT,  this.entryFormat);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT,  this.entryFormat);	  OutputStream    out    =    new    FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT);    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
556	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT,  this.enabled);  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT,  this.enabled);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT,  this.enabled);	  OutputStream    out    =    new    FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT);    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
557	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT,  this.out);  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT,  this.out);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT,  this.out);	  OutputStream    out    =    new    FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT);    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
558	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.closed.keySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.closed.keySet().iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  names  =  this.closed.keySet().iterator();	  Iterator    <    CpioArchiveEntry>    names    =    this.closed.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	160	None	replace
559	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry  [CE]  ')'  expected  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.    	non-compiled	[CE]  ')'  expected	51	None	replace
560	[BUG]  [BUGGY]  out.write(CpioArchiveEntry.class.getName());  [CE]  illegal  start  of  expression  [FE]            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(CpioArchiveEntry.class.getName());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(CpioArchiveEntry.class.getName());	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.get    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
561	[BUG]  [BUGGY]  out.write(CpioArchiveEntry.class.getSimpleName());  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(CpioArchiveEntry.class.getSimpleName());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(CpioArchiveEntry.class.getSimpleName());	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.get    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
562	[BUG]  [BUGGY]  out.write(CpioArchiveEntry.get  [CE]  ')'  expected  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(CpioArchiveEntry.get  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(CpioArchiveEntry.get	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.get    	non-compiled	[CE]  ')'  expected	35	None	replace
563	[BUG]  [BUGGY]  out.write(cpioEntry.get);  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpioEntry.get);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.get);	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.get    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
564	[BUG]  [BUGGY]  OutputStream  out  =  cpioEntry.open();  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  cpioEntry.open();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  cpioEntry.open();	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.get    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
565	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().release();  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().release();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().release();	  Thread.currentThread().getContextClassLoader().reset();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
566	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().init(this);  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().init(this);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().init(this);	  Thread.currentThread().getContextClassLoader().reset();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
567	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed  ==  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed  ==  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed  ==	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
568	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  --i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  --i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  --i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
569	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length  +  1;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length  +  1;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.length  +  1;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
570	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  output.length;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  output.length;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  output.length;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
571	[BUG]  [BUGGY]  Thread.currentThread().setContext(this);  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContext(this);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContext(this);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
572	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader();  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader();	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
573	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(null);  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(null);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextClassLoader(null);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
574	[BUG]  [BUGGY]  Thread.currentThread().enable(this);  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().enable(this);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().enable(this);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
575	[BUG]  [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
576	[BUG]  [BUGGY]  if(this.cloned  ==  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned  ==  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned  ==  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
577	[BUG]  [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
578	[BUG]  [BUGGY]  if(this.cloned!=  false)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned!=  false)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned!=  false)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
579	[BUG]  [BUGGY]  if(this.cloned  ==  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned  ==  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned  ==  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
580	[BUG]  [BUGGY]  out.write(')'  [CE]  ')'  expected  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(')'  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(')'	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpi    	non-compiled	[CE]  ')'  expected	37	None	replace
581	[BUG]  [BUGGY]  out.write(')'  expected  [CE]  ')'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(')'  expected  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(')'  expected	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpi    	non-compiled	[CE]  ')'  expected	37	None	replace
582	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  cpioEntry.getNames();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  cpioEntry.getNames();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  names  =  cpioEntry.getNames();	  if(this.finished)    {    this.closed    =    true;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	105	None	replace
583	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  getNames().iterator().next();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  getNames().iterator().next();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  names  =  getNames().iterator().next();	  if(this.finished)    {    this.closed    =    true;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	105	None	replace
584	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  that.closed;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  that.closed;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  that.closed;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
585	[BUG]  [BUGGY]  Thread.currentThread().sleepInternal();  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().sleepInternal();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().sleepInternal();	  Thread.currentThread().throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
586	[BUG]  [BUGGY]  Thread.currentThread().setCurrentThreadContext(this);  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setCurrentThreadContext(this);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setCurrentThreadContext(this);	  Thread.currentThread().setContextClassLoader(getCurrentThreadContext());    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
587	[BUG]  [BUGGY]  Thread.currentThread().setContext(getCurrentThreadContext());  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContext(getCurrentThreadContext());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContext(getCurrentThreadContext());	  Thread.currentThread().setContextClassLoader(getCurrentThreadContext());    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
588	[BUG]  [BUGGY]  Thread.currentThread().setCurrentThreadContext(getCurrentThreadContext());  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setCurrentThreadContext(getCurrentThreadContext());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setCurrentThreadContext(getCurrentThreadContext());	  Thread.currentThread().setContextClassLoader(getCurrentThreadContext());    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
589	[BUG]  [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(Cpi  [CE]  ')'  expected  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(Cpi  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(Cpi	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  ')'  expected	22	None	replace
590	[BUG]  [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
591	[BUG]  [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEnt  [CE]  ';'  expected  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEnt  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEnt	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  ';'  expected	22	None	replace
592	[BUG]  [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpi  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpi  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	&&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpi	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
593	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.next();  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.next();  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.next();  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
594	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.get();  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.get();  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.get();  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
595	[BUG]  [BUGGY]  out.write(this.open);  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.open);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.open);	  out.write(CpioArchiveEntry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
596	[BUG]  [BUGGY]  out.write(this.readFully());  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.readFully());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.readFully());	  out.write(CpioArchiveEntry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
597	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  1;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  1;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed)  {	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.closed)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
598	[BUG]  [BUGGY]  out.write(this.encodeStream(this.entryFormat));  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.encodeStream(this.entryFormat));  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.encodeStream(this.entryFormat));	  out.write(this.entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
599	[BUG]  [BUGGY]  out.write(this.cpio,  this.entryFormat);  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.cpio,  this.entryFormat);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.cpio,  this.entryFormat);	  out.write(this.entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
600	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
601	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.readOnly;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
602	[BUG]  [BUGGY]  if(this.readOnly!=  null)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.readOnly!=  null)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.readOnly!=  null)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.readOnly;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
603	[BUG]  [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
604	[BUG]  [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i,  out);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
605	[BUG]  [BUGGY]  if(this.cloned!=  null  ||  this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned!=  null  ||  this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned!=  null  ||  this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
606	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i,  out);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
607	[BUG]  [BUGGY]  out.write( "noOpen ");  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( "noOpen ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "noOpen ");	  if(this.closed)    {    out.write(   "n   ");    }    else    {    out.write('n');    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
608	[BUG]  [BUGGY]  out.write( "no  open ");  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( "no  open ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "no  open ");	  if(this.closed)    {    out.write(   "n   ");    }    else    {    out.write('n');    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
609	[BUG]  [BUGGY]  out.write( "negative ");  [CE]  illegal  start  of  expression  [FE]                                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( "negative ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "negative ");	  if(this.closed)    {    out.write(   "n   ");    }    else    {    out.write('n');    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
610	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpi  [CE]  ')'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpi  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpi	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.close    	non-compiled	[CE]  ')'  expected	150	None	replace
611	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if  [CE]  '('  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if	  if(this.closed)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  '('  expected	118	None	replace
612	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);	  if(this.closed)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
613	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream( "UTF-8 ").getCanonicalFile();  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream( "UTF-8 ").getCanonicalFile();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream( "UTF-8 ").getCanonicalFile();	  OutputStream    out    =    new    FileOutputStream(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
614	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream( "UTF-8 ").getAbsolutePath();  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream( "UTF-8 ").getAbsolutePath();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream( "UTF-8 ").getAbsolutePath();	  OutputStream    out    =    new    FileOutputStream(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
615	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clo  closed;  ++i)  {  ensureOpen();  }  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clo  closed;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clo  closed;  ++i)  {  ensureOpen();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  ';'  expected	124	None	replace
616	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen())  {  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen())  {  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen())  {	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.isOpen())    {    throw    new    IOException(   "    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
617	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen())  {  throw  new  IOException  [CE]  '('  or  '['  expected  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen())  {  throw  new  IOException  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen())  {  throw  new  IOException	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.isOpen())    {    throw    new    IOException(   "    	non-compiled	[CE]  '('  or  '['  expected	31	None	replace
618	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen())  {  throw  new  [CE]  <identifier>  expected  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen())  {  throw  new  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen())  {  throw  new	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.isOpen())    {    throw    new    IOException(   "    	non-compiled	[CE]  <identifier>  expected	31	None	replace
619	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)this.cloned.clone();  if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =(OutputStream)this.cloned.clone();  if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =(OutputStream)this.cloned.clone();  if(this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
620	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.cloned;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.cloned;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.cloned;  ++i)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
621	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.cloned;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.cloned;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  that.cloned;  ++i)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
622	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpi  [CE]  ')'  expected  [FE]            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpi  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpi	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpi    	non-compiled	[CE]  ')'  expected	115	None	replace
623	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpi    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
624	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpi  }  [CE]  ')'  expected  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpi  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpi  }	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpi    	non-compiled	[CE]  ')'  expected	115	None	replace
625	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  output.length;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  output.length;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  output.length;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
626	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.size();  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.size();  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.size();  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
627	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
628	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
629	[BUG]  [BUGGY]  out.write(this.getKey());  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.getKey());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.getKey());	  out.write(CpioArchiveEntry.getKey());    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
630	[BUG]  [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(Cpi  [CE]  ')'  expected  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(Cpi  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(Cpi	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  ')'  expected	14	None	replace
631	[BUG]  [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
632	[BUG]  [BUGGY]  if(cpioEntry!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(cpioEntry!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(cpioEntry!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
633	[BUG]  [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEnt  [CE]  ';'  expected  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEnt  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEnt	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  ';'  expected	14	None	replace
634	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.open;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
635	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.flush();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.flush();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.flush();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.open;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
636	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.close();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.open;  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.open;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
637	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(this.closed,  out);  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(this.closed,  out);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName(this.closed,  out);	  Thread.currentThread().getContextClassLoader().setCurrentName(this.closed);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
638	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(this.null);  [CE]  <identifier>  expected  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(this.null);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName(this.null);	  Thread.currentThread().getContextClassLoader().setCurrentName(this.closed);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
639	[BUG]  [BUGGY]  while(this.finished)  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.finished)  {  throw  new  IOException( " ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.finished)  {  throw  new  IOException( " ");  }	  while(!this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
640	[BUG]  [BUGGY]  while(!this.closed)  {  throw  new  IOException( "Stream  closed: ");  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(!this.closed)  {  throw  new  IOException( "Stream  closed: ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(!this.closed)  {  throw  new  IOException( "Stream  closed: ");  }	  while(!this.closed)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
641	[BUG]  [BUGGY]  out.write(cpioEntry.getValu()  [CE]  ')'  expected  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpioEntry.getValu()  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.getValu()	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValu    	non-compiled	[CE]  ')'  expected	36	None	replace
642	[BUG]  [BUGGY]  out.write(CpioArchiveEntry.getValu  [CE]  ')'  expected  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(CpioArchiveEntry.getValu  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(CpioArchiveEntry.getValu	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValu    	non-compiled	[CE]  ')'  expected	36	None	replace
643	[BUG]  [BUGGY]  out.write(cpioEntry.getValu()  +  ')'  [CE]  ')'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpioEntry.getValu()  +  ')'  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.getValu()  +  ')'	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValu    	non-compiled	[CE]  ')'  expected	36	None	replace
644	[BUG]  [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
645	[BUG]  [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
646	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.cloned;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.cloned;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.cloned;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
647	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.entryFormat,  this.closed);  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.entryFormat,  this.closed);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.entryFormat,  this.closed);	  OutputStream    out    =    new    FileOutputStream(this.entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
648	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.zip);  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.zip);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.zip);	  OutputStream    out    =    new    FileOutputStream(this.entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
649	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.outputFormat);  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.outputFormat);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.outputFormat);	  OutputStream    out    =    new    FileOutputStream(this.entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
650	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream();  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream();	  if(this.closed)    {    out.write('n');    }    else    {    out.write('n');    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
651	[BUG]  [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.getData();  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =(OutputStream)cpioEntry.getData();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =(OutputStream)cpioEntry.getData();	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
652	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }	  this.closed    =    true;    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
653	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }	  this.closed    =    true;    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
654	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  System.err.println( "CpioArchiveOutputStream  closed: "  +  this.cpioEntry.getName());  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  System.err.println( "CpioArchiveOutputStream  closed: "  +  this.cpioEntry.getName());  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  true;  }  else  {  System.err.println( "CpioArchiveOutputStream  closed: "  +  this.cpioEntry.getName());  }	  this.closed    =    true;    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
655	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  System.err.println( "Cpio  closed: "  +  this.cpioEntry.getName());  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  System.err.println( "Cpio  closed: "  +  this.cpioEntry.getName());  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  true;  }  else  {  System.err.println( "Cpio  closed: "  +  this.cpioEntry.getName());  }	  this.closed    =    true;    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
656	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.write('n');  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.write('n');  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.write('n');  }	  this.closed    =    true;    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
657	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  System.err.println( "CpioArchiveOutputStream  closed: "  +  this.cpioEntry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  System.err.println( "CpioArchiveOutputStream  closed: "  +  this.cpioEntry.getKey());  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  true;  }  else  {  System.err.println( "CpioArchiveOutputStream  closed: "  +  this.cpioEntry.getKey());  }	  this.closed    =    true;    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
658	[BUG]  [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
659	[BUG]  [BUGGY]  if(this.cloned  ==  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned  ==  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned  ==  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
660	[BUG]  [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
661	[BUG]  [BUGGY]  if(this.cloned!=  null  ||  this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned!=  null  ||  this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned!=  null  ||  this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
662	[BUG]  [BUGGY]  if(this.finished)  {  out.close();  }  else  {  this.closed  =  true;  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.finished)  {  out.close();  }  else  {  this.closed  =  true;  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  out.close();  }  else  {  this.closed  =  true;  }	  if(this.closed)    {    out.close();    }    else    {    this.closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
663	[BUG]  [BUGGY]  if(!this.finished)  {  out.close();  }  else  {  this.closed  =  true;  }  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(!this.finished)  {  out.close();  }  else  {  this.closed  =  true;  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(!this.finished)  {  out.close();  }  else  {  this.closed  =  true;  }	  if(this.closed)    {    out.close();    }    else    {    this.closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
664	[BUG]  [BUGGY]  if(this.finished)  {  out.close();  }  else  {  this.closed  =  false;  }  [CE]  illegal  start  of  expression  [FE]                                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.finished)  {  out.close();  }  else  {  this.closed  =  false;  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  out.close();  }  else  {  this.closed  =  false;  }	  if(this.closed)    {    out.close();    }    else    {    this.closed    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
665	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.next();  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.next();  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.next();  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
666	[BUG]  [BUGGY]  out.write('n',  'n');  [CE]  illegal  start  of  expression  [FE]                                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write('n',  'n');  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write('n',  'n');	  out.write('n');    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
667	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.next();  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.next();  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.next();  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
668	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.next();  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.next();  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.next();  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
669	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  its.next();  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  its.next();  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  its.next();  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
670	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.getAnswer();  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.getAnswer();  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.getAnswer();  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
671	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,Object>  it  =  names.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  Map.Entry  <  String,Object>  it  =  names.entrySet().iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  Map.Entry  <  String,Object>  it  =  names.entrySet().iterator();	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    i++)    {    out.close();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	78	None	replace
672	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  K,  V  >=  it  =  names.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  Map.Entry  <  K,  V  >=  it  =  names.entrySet().iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  Map.Entry  <  K,  V  >=  it  =  names.entrySet().iterator();	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    i++)    {    out.close();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	78	None	replace
673	[BUG]  [BUGGY]  safeThan  <  =  this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  safeThan  <  =  this.closed)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	safeThan  <  =  this.closed)  {  throw  new  IOException( "Stream  closed ");  }	  if(this.finished)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	154	None	replace
674	[BUG]  [BUGGY]  Thread.currentThread().setContextClass(this.getClass().getName());  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContextClass(this.getClass().getName());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextClass(this.getClass().getName());	  if(this.finished)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  illegal  start  of  expression	154	None	replace
675	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpio  [CE]  ')'  expected  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpio  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpio	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpio    	non-compiled	[CE]  ')'  expected	117	None	replace
676	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpio  >=  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpio  >=  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpio  >=	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpio    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
677	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream( "UTF-8 ");  this.closed  =  true;  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream( "UTF-8 ");  this.closed  =  true;  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream( "UTF-8 ");  this.closed  =  true;	  if(this.closed)    {    this.closed    =    true;    }    else    {    out.write(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
678	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clon  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clon  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clon	  if(this.closed)    {    for(int    i    =    0;    i    <    this.clone();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  ';'  expected	7	None	replace
679	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone  [CE]  ';'  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone	  if(this.closed)    {    for(int    i    =    0;    i    <    this.clone();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  ';'  expected	7	None	replace
680	[BUG]  [BUGGY]  int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	144	None	replace
681	[BUG]  [BUGGY]  cpioEntry.ensureOpen();  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  cpioEntry.ensureOpen();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	cpioEntry.ensureOpen();	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =    new    CpioArchiveEntry();    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
682	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEnt  [CE]  ')'  expected  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEnt  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEnt	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEnt    	non-compiled	[CE]  ')'  expected	116	None	replace
683	[BUG]  [BUGGY]  out.write(CpioArchiveEntry.getValue  [CE]  ')'  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(CpioArchiveEntry.getValue  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(CpioArchiveEntry.getValue	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValue    	non-compiled	[CE]  ')'  expected	39	None	replace
684	[BUG]  [BUGGY]  out.write(cpioEntry.getValue)  [CE]  ';'  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpioEntry.getValue)  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.getValue)	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValue    	non-compiled	[CE]  ';'  expected	39	None	replace
685	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.next;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.next;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.next;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
686	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.getValues();  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.getValues();  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.getValues();  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
687	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  ++i)  {  ensureOpen(i, "out ");  }  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  ++i)  {  ensureOpen(i, "out ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  ++i)  {  ensureOpen(i, "out ");  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
688	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  that.finished;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  that.finished;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  that.finished;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
689	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  that.getValue();  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  that.getValue();  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  that.getValue();  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
690	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  that.getSize();  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  that.getSize();  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  that.getSize();  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
691	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
692	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i, "out ");  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i, "out ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i, "out ");  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
693	[BUG]  [BUGGY]  out.write(CpioArchiveEntry.getVal  [CE]  ')'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(CpioArchiveEntry.getVal  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(CpioArchiveEntry.getVal	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getVal    	non-compiled	[CE]  ')'  expected	38	None	replace
694	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(cpioEntry.getVal());  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(cpioEntry.getVal());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(cpioEntry.getVal());	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getVal    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
695	[BUG]  [BUGGY]  OutputStream  out  =  this.closed?  cpioEntry.getOutputStream()  :  null;  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  this.closed?  cpioEntry.getOutputStream()  :  null;  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  this.closed?  cpioEntry.getOutputStream()  :  null;	  OutputStream    out    =    cpioEntry.getOutputStream();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
696	[BUG]  [BUGGY]  OutputStream  out  =  cpioEntry.getOutputStream(this.closed);  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  cpioEntry.getOutputStream(this.closed);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  cpioEntry.getOutputStream(this.closed);	  OutputStream    out    =    cpioEntry.getOutputStream();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
697	[BUG]  [BUGGY]  if(this.closed  ||  this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed  ||  this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed  ||  this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
698	[BUG]  [BUGGY]  OutputStream  out  =(this.closed)?  getOutputStream()  :  null;  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =(this.closed)?  getOutputStream()  :  null;  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =(this.closed)?  getOutputStream()  :  null;	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
699	[BUG]  [BUGGY]  OutputStream  out  =(this.closed)?  getOutputStream()  :  this.closed;  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =(this.closed)?  getOutputStream()  :  this.closed;  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =(this.closed)?  getOutputStream()  :  this.closed;	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
700	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(this.closed);  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  getOutputStream(this.closed);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  getOutputStream(this.closed);	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
701	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.readOnly;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
702	[BUG]  [BUGGY]  if(this.readOnly!=  null)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.readOnly!=  null)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.readOnly!=  null)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.readOnly;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
703	[BUG]  [BUGGY]  if(this.readOnly!=  null)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.readOnly!=  null)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.readOnly!=  null)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.readOnly;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
704	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
705	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if  [CE]  '('  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEnt    	non-compiled	[CE]  '('  expected	152	None	replace
706	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpio  [CE]  ')'  expected  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpio  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpio	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEnt    	non-compiled	[CE]  ')'  expected	152	None	replace
707	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEnt    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
708	[BUG]  [BUGGY]  OutputStream  out  =  this.closed?  cpioEntry.getInputStream()  :  null;  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  this.closed?  cpioEntry.getInputStream()  :  null;  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  this.closed?  cpioEntry.getInputStream()  :  null;	  OutputStream    out    =    cpioEntry.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
709	[BUG]  [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
710	[BUG]  [BUGGY]  if(this.cloned!=  null  ||  this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned!=  null  ||  this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned!=  null  ||  this.finished)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	146	None	replace
711	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clo  closed;  i++)  {  out.close();  }  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clo  closed;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clo  closed;  i++)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    i++)    {    out.close();    }    	non-compiled	[CE]  ';'  expected	133	None	replace
712	[BUG]  [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if  [CE]  '('  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.closed)    {    throw    new    	non-compiled	[CE]  '('  expected	159	None	replace
713	[BUG]  [BUGGY]  if(this.closed)  {  throw  new  IOException( "Stream  closed.n ");  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  throw  new  IOException( "Stream  closed.n ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  throw  new  IOException( "Stream  closed.n ");  }	  if(this.closed)    {    throw    new    IOException(   "Stream    closed.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
714	[BUG]  [BUGGY]  out.write(CpioArchiveEntry.getKey()  [CE]  ')'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(CpioArchiveEntry.getKey()  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(CpioArchiveEntry.getKey()	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getKey()    	non-compiled	[CE]  ')'  expected	59	None	replace
715	[BUG]  [BUGGY]  out.write(CpioArchiveEntry.getValue()  [CE]  ')'  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(CpioArchiveEntry.getValue()  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(CpioArchiveEntry.getValue()	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getKey()    	non-compiled	[CE]  ')'  expected	59	None	replace
716	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream( ",UTF-8 ");  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream( ",UTF-8 ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream( ",UTF-8 ");	  OutputStream    out    =    new    BufferedOutputStream(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
717	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream( "UTF-16 ");  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream( "UTF-16 ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream( "UTF-16 ");	  OutputStream    out    =    new    BufferedOutputStream(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
718	[BUG]  [BUGGY]  while(this.clone)  {  throw  new  IOException( "Stream  closed ");  }  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.clone)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.clone)  {  throw  new  IOException( "Stream  closed ");  }	  while(this.closed)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
719	[BUG]  [BUGGY]  while(this.closed)  {  throw  new  IOException( "Stream  closed. ");  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.closed)  {  throw  new  IOException( "Stream  closed. ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.closed)  {  throw  new  IOException( "Stream  closed. ");  }	  while(this.closed)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
720	[BUG]  [BUGGY]  if(this.closed  ||  this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed  ||  this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed  ||  this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
721	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.open;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.open;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.open;  ++i)  {  ensureOpen();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
722	[BUG]  [BUGGY]  Thread.currentThread().interrupt(this);  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().interrupt(this);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().interrupt(this);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
723	[BUG]  [BUGGY]  Thread.currentThread().interrupt(this.clone);  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().interrupt(this.clone);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().interrupt(this.clone);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
724	[BUG]  [BUGGY]  Thread.currentThread().interrupt(this,  closed);  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().interrupt(this,  closed);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().interrupt(this,  closed);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
725	[BUG]  [BUGGY]  OutputStream  out  =  new  CpioArchiveOutputStream();  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  CpioArchiveOutputStream();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  CpioArchiveOutputStream();	  OutputStream    out    =    new    OutputStreamWriter();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
726	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  OutputStreamWriter());  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  OutputStreamWriter());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream(new  OutputStreamWriter());	  OutputStream    out    =    new    OutputStreamWriter();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
727	[BUG]  [BUGGY]  OutputStream  out  =  new  CpioArchiveOutputStreamWriter();  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  CpioArchiveOutputStreamWriter();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  CpioArchiveOutputStreamWriter();	  OutputStream    out    =    new    OutputStreamWriter();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
728	[BUG]  [BUGGY]  ensureOpen(this.null);  [CE]  <identifier>  expected  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  ensureOpen(this.null);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	ensureOpen(this.null);	  ensureOpen(i);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
729	[BUG]  [BUGGY]  ensureOpen(out);  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  ensureOpen(out);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	ensureOpen(out);	  ensureOpen(i);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
730	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  out;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  out;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  out;  ++i)  {  ensureOpen(i,  out);  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
731	[BUG]  [BUGGY]  if(this.closed)  {  this.finished  =  true;  }  else  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.finished  =  true;  }  else  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.finished  =  true;  }  else  {  out.close();  }	  if(this.finished)    {    this.closed    =    true;    }    else    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
732	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clo  closed;  ++i)  {  out.close();  }  [CE]  ';'  expected  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clo  closed;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clo  closed;  ++i)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    ++i)    {    out.close();    }    	non-compiled	[CE]  ';'  expected	136	None	replace
733	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clocked;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clocked;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clocked;  ++i)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
734	[BUG]  [BUGGY]  if(this.finished)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.finished)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  out.close();  }	  if(this.closed)    {    out.close();    }    else    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
735	[BUG]  [BUGGY]  if(this.finished)  {  out.close();  }  else  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.finished)  {  out.close();  }  else  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  out.close();  }  else  {  out.close();  }	  if(this.closed)    {    out.close();    }    else    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
736	[BUG]  [BUGGY]  while(this.finished)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.finished)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.finished)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }	  while(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
737	[BUG]  [BUGGY]  while(this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.finished)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }	  while(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
738	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.  [CE]  <identifier>  expected  [FE]            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  1;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  1;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.    	non-compiled	[CE]  <identifier>  expected	79	None	replace
739	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  that.finished;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  that.finished;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  that.finished;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
740	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  that.getValue();  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  that.getValue();  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  that.getValue();  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
741	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  that.getSize();  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  that.getSize();  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  that.getSize();  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
742	[BUG]  [BUGGY]  OutputStream  out  =  super.getOutputStream();  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  super.getOutputStream();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  super.getOutputStream();	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)super.clone();    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
743	[BUG]  [BUGGY]  Thread.currentThread().setCurrentName(this.closed,  out);  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setCurrentName(this.closed,  out);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setCurrentName(this.closed,  out);	  Thread.currentThread().setCurrentName(this.closed);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
744	[BUG]  [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
745	[BUG]  [BUGGY]  if(this.cloned!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned!=  null)  {  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
746	[BUG]  [BUGGY]  if(this.cloned!=  false)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned!=  false)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned!=  false)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
747	[BUG]  [BUGGY]  if(this.cloned  ==  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned  ==  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned  ==  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
748	[BUG]  [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
749	[BUG]  [BUGGY]  if(this.cloned  ==  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned  ==  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned  ==  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
750	[BUG]  [BUGGY]  while(!cloned)  {  throw  new  IOException( "Stream  closed ");  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(!cloned)  {  throw  new  IOException( "Stream  closed ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(!cloned)  {  throw  new  IOException( "Stream  closed ");  }	  while(!this.closed)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
751	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(this);  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  OutputStreamWriter(this);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  OutputStreamWriter(this);	  if(this.closed)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
752	[BUG]  [BUGGY]  out.write( "ArchiveEntry.closed ",  this.closed);  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( "ArchiveEntry.closed ",  this.closed);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "ArchiveEntry.closed ",  this.closed);	  out.write(   "ArchiveEntry.closed   ");    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
753	[BUG]  [BUGGY]  out.write( "ArchiveEntry.closed:n ");  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( "ArchiveEntry.closed:n ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "ArchiveEntry.closed:n ");	  out.write(   "ArchiveEntry.closed   ");    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
754	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if  [CE]  '('  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(1);    if(cpioEntry.    	non-compiled	[CE]  '('  expected	119	None	replace
755	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEnt  [CE]  ')'  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEnt  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEnt	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(1);    if(cpioEntry.    	non-compiled	[CE]  ')'  expected	119	None	replace
756	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry  [CE]  ')'  expected  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(1);    if(cpioEntry.    	non-compiled	[CE]  ')'  expected	119	None	replace
757	[BUG]  [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
758	[BUG]  [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
759	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed  ==  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed  ==  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.closed  ==	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
760	[BUG]  [BUGGY]  out.write( "   ");  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( "   ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "   ");	  out.write(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
761	[BUG]  [BUGGY]  out.write( "  -n ");  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( "  -n ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "  -n ");	  out.write(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
762	[BUG]  [BUGGY]  out.write( "] ");  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( "] ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "] ");	  out.write(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
763	[BUG]  [BUGGY]  out.write( "Open ");  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( "Open ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "Open ");	  out.write(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
764	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =  this.closed;  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =  this.closed;  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =  this.closed;  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
765	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {  throw  new  IOException  [CE]  '('  or  '['  expected  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {  throw  new  IOException  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.closed)  {  throw  new  IOException	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.closed)    {    throw    new    IOException(   "    	non-compiled	[CE]  '('  or  '['  expected	23	None	replace
766	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clo  closed;  ++i)  {  ensureOpen(i);  }  [CE]  ';'  expected  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clo  closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clo  closed;  ++i)  {  ensureOpen(i);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  ';'  expected	145	None	replace
767	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen()  [CE]  ')'  expected  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen()  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen()	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.isOpen()    	non-compiled	[CE]  ')'  expected	32	None	replace
768	[BUG]  [BUGGY]  out.write(cpio  }  [CE]  ')'  expected  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpio  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpio  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpio    	non-compiled	[CE]  ')'  expected	58	None	replace
769	[BUG]  [BUGGY]  out.write(cpio  [CE]  ')'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpio  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpio	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpio    	non-compiled	[CE]  ')'  expected	58	None	replace
770	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  out;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  out;  ++i)  {  ensureOpen(i,  out);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
771	[BUG]  [BUGGY]  OutputStream  out  =  cpioEntry.getCurrentSegment();  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  cpioEntry.getCurrentSegment();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  cpioEntry.getCurrentSegment();	  if(this.closed)    {    out.write('n');    }    else    {    out.write('r');    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
772	[BUG]  [BUGGY]  out.write(cpio  }  ')'  [CE]  ')'  expected  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpio  }  ')'  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpio  }  ')'	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpio    	non-compiled	[CE]  ')'  expected	58	None	replace
773	[BUG]  [BUGGY]  out.write(cpio  +  ')'  [CE]  ')'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpio  +  ')'  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpio  +  ')'	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpio    	non-compiled	[CE]  ')'  expected	58	None	replace
774	[BUG]  [BUGGY]  out.write(cpio  +  ')'  expected  [CE]  ')'  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpio  +  ')'  expected  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpio  +  ')'  expected	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpio    	non-compiled	[CE]  ')'  expected	58	None	replace
775	[BUG]  [BUGGY]  Thread.currentThread().setCurrentPath(this.closed);  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setCurrentPath(this.closed);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setCurrentPath(this.closed);	  Thread.currentThread().setCurrentName(this.closed);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
776	[BUG]  [BUGGY]  OutputStream  out  =  new  CpioArchiveEntry();  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  CpioArchiveEntry();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  CpioArchiveEntry();	  OutputStream    out    =    new    OutputStreamWriter();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
777	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStreamWriter(System.out);  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStreamWriter(System.out);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStreamWriter(System.out);	  OutputStream    out    =    new    OutputStreamWriter();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
778	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedReader();  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedReader();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedReader();	  OutputStream    out    =    new    OutputStreamWriter();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
779	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedReader(new  OutputStreamWriter());  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedReader(new  OutputStreamWriter());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedReader(new  OutputStreamWriter());	  OutputStream    out    =    new    OutputStreamWriter();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
780	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  out.iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  out.iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  names  =  out.iterator();	  Iterator    <    CpioArchiveEntry>    names    =    this.closed.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	160	None	replace
781	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  cpioEntry.names.iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  cpioEntry.names.iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  names  =  cpioEntry.names.iterator();	  Iterator    <    CpioArchiveEntry>    names    =    this.closed.iterator();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	160	None	replace
782	[BUG]  [BUGGY]  OutputStream  out  =  new  PrintStream( "UTF-8 ");  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  PrintStream( "UTF-8 ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  PrintStream( "UTF-8 ");	  if(this.closed)    {    out.write('n');    }    else    {    out.write('r');    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
783	[BUG]  [BUGGY]  OutputStream  out  =  getOutputStream(),  this.closed);  [CE]  <identifier>  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  getOutputStream(),  this.closed);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  getOutputStream(),  this.closed);	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
784	[BUG]  [BUGGY]  OutputStream  out  =  createOutputStream();  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  createOutputStream();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  createOutputStream();	  OutputStream    out    =    getOutputStream();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
785	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.next;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.next;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.next;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
786	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  i++)  {  CpioArchiveEntry  cpioEntry  =  new  CpioArchiveEntry();  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  i++)  {  CpioArchiveEntry  cpioEntry  =  new  CpioArchiveEntry();  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  i++)  {  CpioArchiveEntry  cpioEntry  =  new  CpioArchiveEntry();  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
787	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  i++)  {  CpioArchiveEntry  cpioEntry  =  this.closed;  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  i++)  {  CpioArchiveEntry  cpioEntry  =  this.closed;  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.next;  i++)  {  CpioArchiveEntry  cpioEntry  =  this.closed;  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
788	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed  }  [CE]  ')'  expected  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed  }	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed    	non-compiled	[CE]  ')'  expected	55	None	replace
789	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if  [CE]  '('  expected  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.equals(cpioEntry    	non-compiled	[CE]  '('  expected	16	None	replace
790	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpi  [CE]  ')'  expected  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpi  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpi	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.equals(cpioEntry    	non-compiled	[CE]  ')'  expected	16	None	replace
791	[BUG]  [BUGGY]  while(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.closed)  {  for(int  i  =  0;  i  <  that.closed;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
792	[BUG]  [BUGGY]  if(this.clone)  {  for(int  i  =  0;  i  <  that.clone;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.clone)  {  for(int  i  =  0;  i  <  that.clone;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.clone)  {  for(int  i  =  0;  i  <  that.clone;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
793	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  if(this.closed)  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().interrupt();  if(this.closed)  {  throw  new  IOException( " ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().interrupt();  if(this.closed)  {  throw  new  IOException( " ");  }	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
794	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  if(this.closed)  {  this.closed  =  true;  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().interrupt();  if(this.closed)  {  this.closed  =  true;  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().interrupt();  if(this.closed)  {  this.closed  =  true;  }	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
795	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  if(this.closed)  {  System.err.println( "Cpio  closed: "  +  this.closed);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().interrupt();  if(this.closed)  {  System.err.println( "Cpio  closed: "  +  this.closed);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().interrupt();  if(this.closed)  {  System.err.println( "Cpio  closed: "  +  this.closed);  }	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
796	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  this.closed  =  true;  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().interrupt();  this.closed  =  true;  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().interrupt();  this.closed  =  true;	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
797	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close  [CE]  not  a  statement  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clone();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone();  out.close	  if(this.closed)    {    for(int    i    =    0;    i    <    this.clone();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  not  a  statement	7	None	replace
798	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  K,  V  >=  out  =  names.entrySet().iterator().next();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  Map.Entry  <  K,  V  >=  out  =  names.entrySet().iterator().next();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  Map.Entry  <  K,  V  >=  out  =  names.entrySet().iterator().next();	  if(this.finished)    {    this.closed    =    true;    }    else    {    out.close();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	104	None	replace
799	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  K,  V  >=  out  =  this.closed.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  Map.Entry  <  K,  V  >=  out  =  this.closed.entrySet().iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  Map.Entry  <  K,  V  >=  out  =  this.closed.entrySet().iterator();	  if(this.finished)    {    this.closed    =    true;    }    else    {    out.close();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	104	None	replace
800	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  entries  =  this.closed.iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  entries  =  this.closed.iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  entries  =  this.closed.iterator();	  if(this.finished)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	61	None	replace
801	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(this.close);  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(this.close);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName(this.close);	  Thread.currentThread().getContextClassLoader().setCurrentName(this.closed);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
802	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  1;  i  <  out.length;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  1;  i  <  out.length;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  1;  i  <  out.length;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
803	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0,  out.length;  i  <  out.length;  i++)  {  out.close();  }  [CE]  ';'  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0,  out.length;  i  <  out.length;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0,  out.length;  i  <  out.length;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    i++)    {    out.close();    }    	non-compiled	[CE]  ';'  expected	76	None	replace
804	[BUG]  [BUGGY]  if(this.closed)  {  throw  new  IOException( "Stream  closed:   "  +  this.closed);  }  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  throw  new  IOException( "Stream  closed:   "  +  this.closed);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  throw  new  IOException( "Stream  closed:   "  +  this.closed);  }	  if(this.closed)    {    throw    new    IOException(   "   ");    }    else    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
805	[BUG]  [BUGGY]  out.write(this.written);  [CE]  illegal  start  of  expression  [FE]            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.written);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.written);	  out.close();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
806	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  K,  V  >=  it.next  =  names.entrySet().iterator().next();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  Map.Entry  <  K,  V  >=  it.next  =  names.entrySet().iterator().next();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  Map.Entry  <  K,  V  >=  it.next  =  names.entrySet().iterator().next();	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    ++i)    {    out.close();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	6	None	replace
807	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  K,  V  >=  it.next  =  names.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  Map.Entry  <  K,  V  >=  it.next  =  names.entrySet().iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  Map.Entry  <  K,  V  >=  it.next  =  names.entrySet().iterator();	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    ++i)    {    out.close();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	6	None	replace
808	[BUG]  [BUGGY]  while(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
809	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.compressed;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.compressed;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.compressed;  ++i)  {  ensureOpen();  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
810	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  [CE]  ';'  expected  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc	  if(this.finished)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  ';'  expected	154	None	replace
811	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcAsIO();  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcAsIO();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcAsIO();	  if(this.finished)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  ';'  expected	154	None	replace
812	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc	  if(this.finished)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  ';'  expected	154	None	replace
813	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcsLogged();  [CE]  ';'  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcsLogged();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcsLogged();	  if(this.finished)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  ';'  expected	154	None	replace
814	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcsOngoingArchive();  [CE]  ';'  expected  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcsOngoingArchive();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcsOngoingArchive();	  if(this.finished)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  ';'  expected	154	None	replace
815	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcs( "Stream  closed  =  new  IOException( ");  [CE]  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcs( "Stream  closed  =  new  IOException( ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcs( "Stream  closed  =  new  IOException( ");	  if(this.finished)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  	154	None	replace
816	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcs  [CE]  ';'  expected  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcs  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcs	  if(this.finished)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  ';'  expected	154	None	replace
817	[BUG]  [BUGGY]  OutputStream  out  =  this.closed.getOutputStream();  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  this.closed.getOutputStream();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  this.closed.getOutputStream();	  OutputStream    out    =    cpioEntry.getOutputStream();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
818	[BUG]  [BUGGY]  OutputStream  out  =  cpioEntry.openArchiveOutputStream();  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  cpioEntry.openArchiveOutputStream();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  cpioEntry.openArchiveOutputStream();	  OutputStream    out    =    cpioEntry.getOutputStream();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
819	[BUG]  [BUGGY]  out.write(this.entryFormat,  this.closed);  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.entryFormat,  this.closed);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.entryFormat,  this.closed);	  out.write(this.entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
820	[BUG]  [BUGGY]  out.write(this.entryFormat,  this.cloned);  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.entryFormat,  this.cloned);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.entryFormat,  this.cloned);	  out.write(this.entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
821	[BUG]  [BUGGY]  out.write(this.entryFormat,  cpioEntry);  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(this.entryFormat,  cpioEntry);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(this.entryFormat,  cpioEntry);	  out.write(this.entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
822	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.cloned;  out.  [CE]  <identifier>  expected  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.cloned;  out.  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.cloned;  out.	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.cloned;    out.close();    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
823	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.cloned  [CE]  ';'  expected  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.cloned  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.cloned	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.cloned;    out.close();    }    	non-compiled	[CE]  ';'  expected	120	None	replace
824	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.cloned;  out.close()  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.cloned;  out.close()  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.cloned;  out.close()	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.cloned;    out.close();    }    	non-compiled	[CE]  ';'  expected	120	None	replace
825	[BUG]  [BUGGY]  out.write(cpio.getValue());  [CE]  illegal  start  of  expression  [FE]            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpio.getValue());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpio.getValue());	  out.write(cpioEntry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
826	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.open);  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.open);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.open);	  OutputStream    out    =    new    FileOutputStream(CpioArchiveEntry.DEFAULT_OUTPUT);    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
827	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  entries  =  this.readOnly.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  entries  =  this.readOnly.entrySet().iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  entries  =  this.readOnly.entrySet().iterator();	  if(this.finished)    {    for(int    i    =    0;    i    <    this.readOnly;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	125	None	replace
828	[BUG]  [BUGGY]  if(this.clone)  {  for(int  i  =  0;  i  <  that.clone;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.clone)  {  for(int  i  =  0;  i  <  that.clone;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.clone)  {  for(int  i  =  0;  i  <  that.clone;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
829	[BUG]  [BUGGY]  while(this.clone)  {  throw  new  IOException( "Stream  closed. ");  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.clone)  {  throw  new  IOException( "Stream  closed. ");  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.clone)  {  throw  new  IOException( "Stream  closed. ");  }	  if(this.clone)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
830	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reportError( "Cpio  closed. ");  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().reportError( "Cpio  closed. ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().reportError( "Cpio  closed. ");	  if(this.clone)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
831	[BUG]  [BUGGY]  while(this.readOnly)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.readOnly)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.readOnly)  {  for(int  i  =  0;  i  <  this.readOnly;  ++i)  {  ensureOpen(i);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.readOnly;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
832	[BUG]  [BUGGY]  while(this.readOnly)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.readOnly)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.readOnly)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.readOnly;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
833	[BUG]  [BUGGY]  out.write(cpioEntry.toString());  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpioEntry.toString());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.toString());	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEnt    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
834	[BUG]  [BUGGY]  Thread.currentThread().intermediateThread();  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().intermediateThread();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().intermediateThread();	  Thread.currentThread().throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
835	[BUG]  [BUGGY]  Thread.currentThread().intermediateParent();  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().intermediateParent();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().intermediateParent();	  Thread.currentThread().throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
836	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.closed));  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.closed));  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.closed));	  OutputStream    out    =    new    BufferedOutputStream(new    FileOutputStream(   "UTF-8   "));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
837	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.appendCompletedFile));  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.appendCompletedFile));  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream(new  FileOutputStream(this.appendCompletedFile));	  OutputStream    out    =    new    BufferedOutputStream(new    FileOutputStream(   "UTF-8   "));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
838	[BUG]  [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpi  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpi  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	&&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cpi	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValu    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
839	[BUG]  [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cp  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cp  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	&&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(cp	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValu    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
840	[BUG]  [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(c  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(c  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	&&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(c	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValu    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
841	[BUG]  [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.close  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.close  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	&&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.close	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValu    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
842	[BUG]  [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	&&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValu    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
843	[BUG]  [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	&&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValu    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
844	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  1;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  1;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
845	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(this.closed);  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(this.closed);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream(this.closed);	  OutputStream    out    =    new    BufferedOutputStream(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
846	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(this.inputFormat);  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(this.inputFormat);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream(this.inputFormat);	  OutputStream    out    =    new    BufferedOutputStream(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
847	[BUG]  [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(this.out, "UTF-8 ");  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  BufferedOutputStream(this.out, "UTF-8 ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  BufferedOutputStream(this.out, "UTF-8 ");	  OutputStream    out    =    new    BufferedOutputStream(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
848	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  outputStream.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  outputStream.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  outputStream.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
849	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  break;  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  i++)  {  break;  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
850	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
851	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.clone();  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.clone();  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.clone();  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
852	[BUG]  [BUGGY]  out.write( "no  open  source ");  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( "no  open  source ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "no  open  source ");	  if(this.closed)    {    out.write(   "n   ");    }    else    {    out.write('n');    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
853	[BUG]  [BUGGY]  out.write( "no-data ");  [CE]  illegal  start  of  expression  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( "no-data ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "no-data ");	  if(this.closed)    {    out.write(   "n   ");    }    else    {    out.write('n');    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
854	[BUG]  [BUGGY]  cpioEntry.close();  out.write(cpioEntry.get  [CE]  ')'  expected  [FE]            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  cpioEntry.close();  out.write(cpioEntry.get  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	cpioEntry.close();  out.write(cpioEntry.get	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.get    	non-compiled	[CE]  ')'  expected	35	None	replace
855	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(cpioEntry.getAbsolutePath());  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(cpioEntry.getAbsolutePath());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(cpioEntry.getAbsolutePath());	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.get    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
856	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  K,  V  >=  this.closed  =  true;  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  Map.Entry  <  K,  V  >=  this.closed  =  true;  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  Map.Entry  <  K,  V  >=  this.closed  =  true;	  if(this.finished)    {    this.closed    =    true;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	105	None	replace
857	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.closed;  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.closed;  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  this.closed;	  if(this.finished)    {    this.closed    =    true;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	105	None	replace
858	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  K,  V  ==  this.closed  =  true;  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  Map.Entry  <  K,  V  ==  this.closed  =  true;  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  Map.Entry  <  K,  V  ==  this.closed  =  true;	  if(this.finished)    {    this.closed    =    true;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	105	None	replace
859	[BUG]  [BUGGY]  out.write( "no   ");  [CE]  illegal  start  of  expression  [FE]                                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( "no   ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "no   ");	  if(this.closed)    {    out.write(   "n   ");    }    else    {    out.write(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
860	[BUG]  [BUGGY]  ensureOpen(this.clone);  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  ensureOpen(this.clone);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	ensureOpen(this.clone);	  ensureOpen(i);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
861	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  1;  i  <  out.length;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  1;  i  <  out.length;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  1;  i  <  out.length;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
862	[BUG]  [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	&&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.closed;  out.write(	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpioEntry.getValue    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
863	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  writeOpen(cpioEntry.getKey(),  cpioEntry.getValue());  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  writeOpen(cpioEntry.getKey(),  cpioEntry.getValue());  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  writeOpen(cpioEntry.getKey(),  cpioEntry.getValue());  }	  this.closed    =    true;    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
864	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  writeOpen(cpioEntry.getKey(),  cpioEntry.getValue(),  cpio  [CE]  ')'  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  writeOpen(cpioEntry.getKey(),  cpioEntry.getValue(),  cpio  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  writeOpen(cpioEntry.getKey(),  cpioEntry.getValue(),  cpio	  this.closed    =    true;    	non-compiled	[CE]  ')'  expected	92	None	replace
865	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  writeOpen(cpioEntry.getImmediateParentPointer());  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  writeOpen(cpioEntry.getImmediateParentPointer());  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  writeOpen(cpioEntry.getImmediateParentPointer());  }	  this.closed    =    true;    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
866	[BUG]  [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  writeOpen(cpioEntry.getKey());  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  writeOpen(cpioEntry.getKey());  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  this.closed  =  true;  }  else  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  writeOpen(cpioEntry.getKey());  }	  this.closed    =    true;    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
867	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed  }  [CE]  ')'  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEntry.closed  }	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.closed    	non-compiled	[CE]  ')'  expected	151	None	replace
868	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next  +  1;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next  +  1;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.next  +  1;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
869	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEnt  [CE]  ')'  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEnt  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(0);  if(cpioEnt	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEnt    	non-compiled	[CE]  ')'  expected	152	None	replace
870	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.separator);  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.separator);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.separator);	  OutputStream    out    =    new    FileOutputStream(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
871	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcsAngle( "Stream  closed  =  new  IOException( "  [CE]  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcsAngle( "Stream  closed  =  new  IOException( "  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcsAngle( "Stream  closed  =  new  IOException( "	  if(this.open)    {    throw    new    IOException(   "Stream    closed   ");    }    	non-compiled	[CE]  	156	None	replace
872	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone()  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone()  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone()	  if(this.closed)    {    for(int    i    =    0;    i    <    this.clone;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  ';'  expected	149	None	replace
873	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.  [CE]  <identifier>  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.clone;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.	  if(this.closed)    {    for(int    i    =    0;    i    <    this.clone;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  <identifier>  expected	149	None	replace
874	[BUG]  [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.encoding);  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  OutputStream  out  =  new  FileOutputStream(this.encoding);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	OutputStream  out  =  new  FileOutputStream(this.encoding);	  OutputStream    out    =    new    FileOutputStream(this.entryFormat);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
875	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().process(cpioEntry);  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().process(cpioEntry);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().process(cpioEntry);	  Thread.currentThread().getContextClassLoader().reset();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
876	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().process(cpioEntry,  this.closed);  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().getContextClassLoader().process(cpioEntry,  this.closed);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().getContextClassLoader().process(cpioEntry,  this.closed);	  Thread.currentThread().getContextClassLoader().reset();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
877	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.get();  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.get();  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.get();  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
878	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.getAnswer();  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.getAnswer();  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.getAnswer();  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
879	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals  }  [CE]  ')'  expected  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry.equals  }	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.equals    	non-compiled	[CE]  ')'  expected	122	None	replace
880	[BUG]  [BUGGY]  out.write(CpioArchiveEntry.DEFAULT_OUTPUT);  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(CpioArchiveEntry.DEFAULT_OUTPUT);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(CpioArchiveEntry.DEFAULT_OUTPUT);	  out.write(CpioArchiveEntry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
881	[BUG]  [BUGGY]  InputStream  out  =  getOutputStream();  if(out!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  InputStream  out  =  getOutputStream();  if(out!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	InputStream  out  =  getOutputStream();  if(out!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i);  }	  OutputStream    out    =    getOutputStream();    if(out!=    null)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
882	[BUG]  [BUGGY]  &&  this.clone!=  null)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  &&  this.clone!=  null)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	&&  this.clone!=  null)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.clone	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
883	[BUG]  [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  &&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	&&  this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
884	[BUG]  [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchive  [CE]  ')'  expected  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchive  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchive	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  ')'  expected	14	None	replace
885	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  ensureOpen(i);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
886	[BUG]  [BUGGY]  out.write( "ArchiveEntry.close ",  this.closed);  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( "ArchiveEntry.close ",  this.closed);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "ArchiveEntry.close ",  this.closed);	  out.write(   "ArchiveEntry.closed   ");    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
887	[BUG]  [BUGGY]  out.append( "ArchiveEntry.closed ");  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.append( "ArchiveEntry.closed ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.append( "ArchiveEntry.closed ");	  out.write(   "ArchiveEntry.closed   ");    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
888	[BUG]  [BUGGY]  out.write( "ArchiveEntry.open ");  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( "ArchiveEntry.open ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "ArchiveEntry.open ");	  out.write(   "ArchiveEntry.closed   ");    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
889	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  K,  V  ==  it.next  =  names.entrySet().iterator().next();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  Map.Entry  <  K,  V  ==  it.next  =  names.entrySet().iterator().next();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  Map.Entry  <  K,  V  ==  it.next  =  names.entrySet().iterator().next();	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	28	None	replace
890	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next  +  1;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.next  +  1;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.next  +  1;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
891	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.getAnswer();  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.getAnswer();  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.getAnswer();  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
892	[BUG]  [BUGGY]  cpioEntry.enable(this);  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  cpioEntry.enable(this);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	cpioEntry.enable(this);	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =    new    CpioArchiveEntry();    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
893	[BUG]  [BUGGY]  cpioEntry.setOpen(true);  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  cpioEntry.setOpen(true);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	cpioEntry.setOpen(true);	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =    new    CpioArchiveEntry();    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
894	[BUG]  [BUGGY]  out.write(CpioArchiveEntry.class,  this.closed);  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(CpioArchiveEntry.class,  this.closed);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(CpioArchiveEntry.class,  this.closed);	  out.write(CpioArchiveEntry.class);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
895	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =  new  CpioArchiveEntry(cpio);  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =  new  CpioArchiveEntry(cpio);  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =  new  CpioArchiveEntry(cpio);  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.open;    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
896	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  1;  i  <  that.closed;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  1;  i  <  that.closed;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  1;  i  <  that.closed;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
897	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  iterables.size();  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  iterables.size();  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  iterables.size();  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
898	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  K,  V  >=  this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  Map.Entry  <  K,  V  >=  this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  Map.Entry  <  K,  V  >=  this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	124	None	replace
899	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry  [CE]  ')'  expected  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  if(cpioEntry	  for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if(cpioEntry.close    	non-compiled	[CE]  ')'  expected	150	None	replace
900	[BUG]  [BUGGY]  out.write( "> ");  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( "> ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "> ");	  out.write(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
901	[BUG]  [BUGGY]  out.write( "  => ");  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( "  => ");  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( "  => ");	  out.write(   "n   ");    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
902	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  --i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  --i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  --i)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
903	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  break;  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  break;  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
904	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out  [CE]  not  a  statement  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)cpioEntry.clone();    out.close();    }    	non-compiled	[CE]  not  a  statement	10	None	replace
905	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  out.length;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
906	[BUG]  [BUGGY]  This.closed  =  false;  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  This.closed  =  false;  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	This.closed  =  false;	  if(this.closed)    {    this.closed    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
907	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.closed;  i++)  {  out.close();  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
908	[BUG]  [BUGGY]  while(this.clone)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.clone)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.clone)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }	  while(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
909	[BUG]  [BUGGY]  while(this.clone)  {  for(int  i  =  0;  i  <  this.clone;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.clone)  {  for(int  i  =  0;  i  <  this.clone;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.clone)  {  for(int  i  =  0;  i  <  this.clone;  ++i)  {  ensureOpen(i);  }	  while(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
910	[BUG]  [BUGGY]  while(this.cloned)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  while(this.cloned)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	while(this.cloned)  {  for(int  i  =  0;  i  <  this.cloned;  ++i)  {  ensureOpen(i);  }	  while(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
911	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.  [CE]  <identifier>  expected  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.open;  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)cpioEntry.clone();  out.	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.clone();    out.close();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
912	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.out.length;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.out.length;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.out.length;  ++i)  {  ensureOpen(i,  out);  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
913	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.compressed;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.compressed;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.compressed;  ++i)  {  ensureOpen(i,  out);  }	  for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
914	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  --i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  --i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  --i)  {  ensureOpen(i,  out);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
915	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i  +  1,  out);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i  +  1,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen(i  +  1,  out);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.closed;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
916	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  1;  i  <  out.length;  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  1;  i  <  out.length;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  1;  i  <  out.length;  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    out.length;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
917	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.remove();  ++i)  {  ensureOpen(i,  out);  }  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.remove();  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.remove();  ++i)  {  ensureOpen(i,  out);  }	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
918	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  it.next();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  it.next();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  names  =  it.next();	  if(this.closed)    {    for(int    i    =    0;    i    <    it.next();    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	166	None	replace
919	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(CpioArchiveEntry.class);  [CE]  illegal  start  of  expression  [FE]              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(CpioArchiveEntry.class);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextClassLoader(CpioArchiveEntry.class);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
920	[BUG]  [BUGGY]  Thread.currentThread().intermediateThread().setContextClassLoader(this);  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().intermediateThread().setContextClassLoader(this);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().intermediateThread().setContextClassLoader(this);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
921	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(cpioEntry);  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Thread.currentThread().setContextClassLoader(cpioEntry);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Thread.currentThread().setContextClassLoader(cpioEntry);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
922	[BUG]  [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.cloned.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  CpioArchiveEntry>  names  =  this.cloned.entrySet().iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  CpioArchiveEntry>  names  =  this.cloned.entrySet().iterator();	  if(this.finished)    {    for(int    i    =    0;    i    <    this.cloned;    ++i)    {    ensureOpen(i);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	146	None	replace
923	[BUG]  [BUGGY]  if(this.open!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                        EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.open!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.open!=  null)  {  for(int  i  =  0;  i  <  this.closed;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
924	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  1;  i  <  that.closed;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  1;  i  <  that.closed;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  1;  i  <  that.closed;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
925	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.close;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                    EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.close;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.close;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
926	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen())  {  out  [CE]  not  a  statement  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen())  {  out  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(1);  if(cpioEntry.isOpen())  {  out	  for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(0);    if(cpioEntry.isOpen())    {    out.close();    }    	non-compiled	[CE]  not  a  statement	47	None	replace
927	[BUG]  [BUGGY]  out.write(cpioEntry.getClass().getName());  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write(cpioEntry.getClass().getName());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write(cpioEntry.getClass().getName());	  if(this.closed)    {    for(int    i    =    0;    i    <    this.closed;    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.closed;    out.write(cpi    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
928	[BUG]  [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchive  [CE]  ')'  expected  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchive  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  if(this.names!=  null)  {  for(int  i  =  0;  i  <  this.names.size();  ++i)  {  CpioArchiveEntry  cpioEntry  =(CpioArchive	  if(this.names!=    null)    {    for(int    i    =    0;    i    <    this.names.size();    ++i)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  ')'  expected	22	None	replace
929	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  1;  i  <  this.open;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  1;  i  <  this.open;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  1;  i  <  this.open;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
930	[BUG]  [BUGGY]  if(this.open!=  null)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.open!=  null)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.open!=  null)  {  for(int  i  =  0;  i  <  this.open;  ++i)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.open;    ++i)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
931	[BUG]  [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  out.close();  }  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.cloned)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  out.close();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.cloned)  {  for(int  i  =  0;  i  <  out.length;  i++)  {  out.close();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    this.cloned;    i++)    {    out.close();    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
932	[BUG]  [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.finished)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.finished)  {  for(int  i  =  0;  i  <  this.names.size();  i++)  {  CpioArchiveEntry  cpioEntry  =(CpioArchiveEntry)this.names.get(i);	  if(this.closed)    {    for(int    i    =    0;    i    <    this.names.size();    i++)    {    CpioArchiveEntry    cpioEntry    =(CpioArchiveEntry)this.names.get(i);    if    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
933	[BUG]  [BUGGY]  out.write( ".s.IFJDCS ".charAt(i));  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( ".s.IFJDCS ".charAt(i));  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( ".s.IFJDCS ".charAt(i));	  if(this.closed)    {    out.write('n');    }    else    {    out.write('n');    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
934	[BUG]  [BUGGY]  out.write( ".s.IFJDCS ".charAt(i).getLength());  [CE]  illegal  start  of  expression  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( ".s.IFJDCS ".charAt(i).getLength());  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( ".s.IFJDCS ".charAt(i).getLength());	  if(this.closed)    {    out.write('n');    }    else    {    out.write('n');    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
935	[BUG]  [BUGGY]  out.write( ".s.IFJDCS ".charAt(i),  'n');  [CE]  illegal  start  of  expression  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  out.write( ".s.IFJDCS ".charAt(i),  'n');  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	out.write( ".s.IFJDCS ".charAt(i),  'n');	  if(this.closed)    {    out.write('n');    }    else    {    out.write('n');    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
936	[BUG]  [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.close;  ++i)  {  ensureOpen();  }  [CE]  illegal  start  of  expression  [FE]                          EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  if(this.closed)  {  for(int  i  =  0;  i  <  it.close;  ++i)  {  ensureOpen();  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	if(this.closed)  {  for(int  i  =  0;  i  <  it.close;  ++i)  {  ensureOpen();  }	  if(this.closed)    {    for(int    i    =    0;    i    <    that.closed;    ++i)    {    ensureOpen();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
937	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  K,  V  >=  this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i,  out);  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                            EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  Map.Entry  <  K,  V  >=  this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i,  out);  }  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  Map.Entry  <  K,  V  >=  this.closed)  {  for(int  i  =  0;  i  <  this.finished;  ++i)  {  ensureOpen(i,  out);  }	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	131	None	replace
938	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  this.closed.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                              EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  this.closed.entrySet().iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  Map.Entry  <  String,  Object>  entry  =  this.closed.entrySet().iterator();	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	131	None	replace
939	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.closed.entrySet().iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                                EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  it  =  this.closed.entrySet().iterator();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  Map.Entry  <  String,  Object>  it  =  this.closed.entrySet().iterator();	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	131	None	replace
940	[BUG]  [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  names.entrySet().iterator().next();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                                  EOFException      [CONTEXT]      private  void  ensureOpen()  throws  IOException  {  if  (this.closed)  {  throw  new  IOException(     "Stream  closed     ");  }      [BUGGY]  Iterator  <  Map.Entry  <  String,  Object>  entry  =  names.entrySet().iterator().next();  [BUGGY]        [CLASS]  CpioArchiveOutputStream  [METHOD]  ensureOpen  [RETURN_TYPE]  void  [VARIABLES]  boolean  closed  finished  HashMap  names  OutputStream  out  short  entryFormat  format  CpioArchiveEntry  cpioEntry  long  crc  written  	projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java	0.7071067811865475	111	111	1	replace	Iterator  <  Map.Entry  <  String,  Object>  entry  =  names.entrySet().iterator().next();	  if(this.finished)    {    for(int    i    =    0;    i    <    this.finished;    ++i)    {    ensureOpen(i,    out);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	131	None	replace
