projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=entryFormat;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap<Short,Short>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newStringBuffer();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newShort(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap<String,String>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write('n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.entryFormat.clone();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.names.get(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.names.get(0);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=getOutputStream();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=newFileOutputStream(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null||format.length()==0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null||format==null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||format!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null||this.entryFormat==null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat,format){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat,out){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.crc){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat,written){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.enabled){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.close();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write("n");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write('');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write(this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null||format.equals(this.entryFormat)){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null||this.entryFormat!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null||format.equals("")){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newOutputStreamWriter();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format+1;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newOutputStreamWriter(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||format.length()==0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null&&format.length()>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null&&format.length>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null&&this.entryFormat.length>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null&&format.equals(this.entryFormat)){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null&&format.equals("")){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format!=null?format:out.toString();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format!=null?format:newshort[]{format};
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format!=null?format:newShort(write);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||format.equals(this.entryFormat)){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||format.length()!=0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write('n');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.names.put("entry",newHashMap());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null||this.entryFormat.equals(format)){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null||this.entryFormat.equals(format)){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null||format.equals(this.entryFormat)){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null||format.equals(this.entryFormat)){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newOutputStreamWriter(out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newOutputStreamWriter(out,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newOutputStreamWriter(format,out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newOutputStreamWriter(format,written);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newOutputStreamWriter(cpioEntry.getValue());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newOutputStreamWriter(cpioEntry.getKey());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newOutputStreamWriter(cpioEntry);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null||format!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null&&this.entryFormat!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null||this.entryFormat!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null||this.entryFormat==null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null&&this.entryFormat!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newShort(format,written);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newShort(format,crc);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newShort(format,out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newShort(format+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newShort(format,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newShort(format,cpioEntry.length);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.names.get(format+1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.names.get(format,written);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.names.get(format,this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.names.get(format-1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.names.get(this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.names.get(index);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write('n',format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write('n',crc);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write('n','/');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.defaultWrite('n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write('n','_');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out,this.entryFormat){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.in){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry){synchronized(this.cpioEntry){this.cpioEntry=format;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry){synchronized(this.cpioEntry){this.cpioEntry=format;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry){this.cpioEntry=format;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry){synchronized(this.cpioEntry){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry){synchronized(this.cpioEntry){this.entryFormat=format;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry){synchronized(this.cpioEntry){this.cpioEntry=null;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry){synchronized(this.cpioEntry){this.cpioEntry=crc;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry){synchronized(this.cpioEntry){this.cpioEntry=newHashMap();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat,out,written){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat,out,this.write){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat,out,this.written){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat,this.write){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format==null?format:newshort[]{format};
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format==null?format:newshort[]{format,out};
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format!=null?format:newshort[]{format,out};
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format==null?format:newshort[]{format,written};
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(outputStream)this.names.get(0);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.names.get(1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.names.get(i);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.names.get(0,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.crc.clone();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.entryFormat.cloneTree();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.cpioEntry.clone();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(outputStream)this.entryFormat.clone();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.format.clone();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.entryFormat.cloneBytes();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format==null?format:out.toString();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format>=null?format:out.toString();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format!=null?format:short.toString();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format!=null?format:out.toString()+"n";
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null||this.entryFormat.length()!=0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null||format.length()!=0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null||this.entryFormat.length()>=0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null||this.entryFormat.length()!=0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=newFileOutputStream(this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=newFileOutputStream(this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=newFileOutputStream(format,this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=newFileOutputStream(format,written);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=newFileOutputStream(format,this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=newFileOutputStream(format,this.encoding);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=newFileOutputStream(format,closed);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null||this.entryFormat.length()==0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null||this.entryFormat.length()==0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null||format.length()==0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null||format.length()==0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newStringBuffer(32);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newStringBuffer(64);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newStringBuilder();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newStringBuffer(256);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newStringBuffer(16);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newStringBuffer(128);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null&&this.entryFormat.equals(format)){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null&&format.equals(this.entryFormat)){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null&&this.entryFormat.equals(format)){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null&&format.equals(this.entryFormat)){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null&&format.equals(this.entryFormat)||format.equals(this.entryFormat)){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null&&format.length()>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||this.format.equals(format)){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newOutputStreamWriter(write);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newEntryFormat();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newOutputStreamWriter(System.out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write(this.entryFormat,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write(this.entryFormat,written);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write(this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.defaultWrite(this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write(this.crc);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write(this.entryFormat,cpioEntry.length);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null||format!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null||this.entryFormat>=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null&&format!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||format==null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null&&this.entryFormat==null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out){if(this.out!=null){for(inti=0;i<this.names.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out){if(this.out!=null){for(inti=0;i<this.entryFormat.size();++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out){if(this.out!=null){for(inti=0;i<this.names.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out){if(this.out!=null){for(inti=0;i<this.out.length;i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out){if(this.out!=null){for(inti=0;i<this.out.length;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out){if(this.out!=null){for(inti=0;i<this.entryFormat.length;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out){if(this.out!=null){for(inti=0;i<this.entryFormat.size();i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out){if(this.out!=null){for(inti=0;i<this.entryFormat.length;i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null&&this.entryFormat.length()>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null&&this.entryFormat.length()>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null&&format.length()>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null||format.length()>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null&&format.length()>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write("null");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write("n".getBytes());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write("#n");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write("#");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write("n".getBytes(),format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.defaultWrite("'");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.defaultWrite("n");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write('',format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write(''+format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.defaultWrite('');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.flush();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write(cpioEntry.getValue());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write(cpioEntry.getKey());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write('n',crc);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write('n',format);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write("n");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write('0');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.defaultWrite("nullformat");break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null||format.equals("")){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null||format.equals("")){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null||this.entryFormat.equals("")){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null||this.entryFormat.equals("")){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||format.equals("")){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=getOutputStream(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=getOutputStream("UTF-8");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=getOutputStream(write);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=getOutputStream(this.entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=getInputStream();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=getOutputStream(),format;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat,this.cpioEntry){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat,written,this.cpioEntry){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat,written,out){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.crc,this.entryFormat){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.crc,out){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry.class){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntrySet){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null&&this.entryFormat.equals("")){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null&&format.equals("")){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null&&this.entryFormat.equals("")){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null&&format.equals("")){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null&&this.entryFormat.equals(".")){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null&&format.equals("")){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap<Short,Short>(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newLinkedHashMap<Short,Short>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap<short,Short>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap<Short,Short>(1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap<Short,Short>(0);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap<Short,Short>(2);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write(this.name);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.defaultWrite(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write(this.encodedFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format!=null?format:newShort(write,crc);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format==null?format:newShort(write,crc);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format==null?format:newShort(write);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format==null?format:newShort(written);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format!=null?format:newShort(written);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format!=null?format:newShort(crc);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format+2;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format+1L;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format+4;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format/1;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format-1;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null||this.entryFormat.length>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null&&this.entryFormat.length>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null&&this.entryFormat.length>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||this.entryFormat.length>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null&&format.length>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat,format,out){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat,this.format){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat,format,written){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat,format,this.write){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newLinkedHashMap();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap(numbers);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap<String,Object>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null||format==null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.format){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=FormatUtils.getEntryFormat(cpioEntry);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=FormatUtils.getEntryFormat(entryFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=FormatUtils.getEntryFormat(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=FormatUtilities.getEntryFormat(cpioEntry);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.names.put("entry".toString(),newHashMap());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.names.put("entry".getKey(),newHashMap());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.names.put("entry["+format+"]",newHashMap());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.names.put("entry"+format,newHashMap());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null&&format.length>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null&&this.entryFormat.length>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null&&format.length>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null||format.length>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||this.format.length()==0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap<String,String>(format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newLinkedHashMap<String,String>();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap<String,String>(0);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap<String,String>(1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap<String,String>(names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap<String,String>(in);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry.names){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry.clone()){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry.getCpioEntry()){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry.cloneTree()){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormats){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryEnabled){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.format==null||format.equals(this.entryFormat)){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.names.put("entry[",newHashMap());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.names.put("entry_type",newHashMap());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null||format.length==0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newOutputStreamOutputStream();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newOutputStreamWriter(out,written);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format==null?format:newshort[0]{format};
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format!=null?format:newshort[0]{format};
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format!=null?format:newShort(write,out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=FormatUtils.EMPTY_STRING;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=cpioEntry.getFormat();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat=format){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat,format+')'){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=getOutputStream(true);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=getOutputStream(out.length);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write('#');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write('');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write('n',write);break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=newFileOutputStream(this.encoding);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=newFileOutputStream(this.out);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null&&this.entryFormat!=null&&format.length()>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||format.length()>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null&&this.entryFormat!=null&&format.equals(this.entryFormat)){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null&&this.format.equals(format)){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntryNames){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntryHandler){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entry){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.names.get(format,this.type);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newOutputStreamWriter(cpioEntry.getMethod());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.names.get(0L);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.names.get(number);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.crc,written){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null&&this.entryFormat!=null&&format.length>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||format.length>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null&&format.length()==0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write("[null]");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write("<");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write("</");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.info.clone();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.out.clone();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out){if(this.out!=null){for(inti=0;i<this.length;++i){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out){synchronized(this.out){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out){if(this.out!=null){for(inti=0;i<this.length;i++){out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out){if(this.out!=null){for(inti=0;i<this.names.size();++i){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out){if(this.out!=null){this.out=format;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||this.format.length()!=0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap<String,String>(2);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry){synchronized(this.cpioEntry){this.cpioEntry=out;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry){this.cpioEntry=cpioEntry.getCpioEntry();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry){synchronized(this.cpioEntry){out.close();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry){synchronized(this.cpioEntry){out=newHashMap();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.info){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entrySet){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null||this.entryFormat.equals(".")){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntryLock){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryPath){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.defaultWrite("'');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format!=null||this.entryFormat>=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null&&format==null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null||format.length==0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write('n','n');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write('n','-');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newShort(format,closed);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newShort(format-1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newShort(format)+1;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format==null?format:newString(out.toString());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format!=null?format:newString(out.toString());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=out!=null?format:out.toString();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write(this.cpioEntry);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write(this.entryFormat,write);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap<Short,Short>(4);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newOutputStreamWriter(this.format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newOutputStreamWriter(CpioArchiveEntry.class,format);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null&&this.format.length>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null&&format.length>1){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null&&this.entryFormat.equals(format)){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format!=null?format:newshort[]{format,end};
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format!=null?format:newshort[]{format,closed};
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry){if(this.cpioEntry!=null){for(inti=0;i<this.cpioEntry.size();++i){this.cpioEntry.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry){if(this.cpioEntry!=null){for(inti=0;i<this.cpioEntry.size();++i){out.put(i,this.cpioEntry.getKey());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry){if(this.cpioEntry!=null){for(inti=0;i<this.cpioEntry.size();++i){this.cpioEntry.setFormat(format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry){if(this.cpioEntry!=null){for(inti=0;i<this.cpioEntry.size();++i){out.close();}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry){if(this.cpioEntry!=null){for(inti=0;i<this.cpioEntry.size();++i){out.put(i,this.cpioEntry.getValue());}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.append('');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.names.get(newStringReader("UTF-8"));
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write('#');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format+3;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||format.length()>=0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFields){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryHandler){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFileMap){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.names.get(0,this.names.size()-1);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(HashOutputStream)this.names.get(0);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat,format,this.cpioEntry){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat,format+1){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||format.equals(".")){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||this.entryFormat==null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||format.length==0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||formatRANGE==null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry.entrySet()){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.cpioEntry.this){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null||this.entryFormat!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||this.format==null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write(this.entryFormat,this.cpioEntry);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write(this.cpioEntry.getValue());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null&&this.entryFormat.length>1){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null&&this.entryFormat.size()>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.names.put("entryformat",newHashMap());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.names.put("entry-format",newHashMap());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.names.put("entry/",newHashMap());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=DEFAULT_ENTRY_FORMAT;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat,this.enabled){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131Synchronized(this.enabled){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write('/');break;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==format||format.equals(this.entryFormat)){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||this.entryFormat.equals(format)){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat,out,this.cpioEntry){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131Synchronized(this.entryFormat,format){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.entryFormat,out,this.cloneTree()){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null&&this.format.length()>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null&&this.entryFormat.length()>0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.encoding.clone();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=(OutputStream)this.crec.clone();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newStringBuffer(System.currentTimeMillis());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null||this.entryFormat!=null||format.length()==0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=newFileOutputStream(format.getBytes());
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=newFileOutputStream(this.outputFormat);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write("None");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write("[noentryformat]");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write("Negativeformat:");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write("Negativeheadertype");
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format!=null?format:newShort(write,written);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newShort(format&0xFFFF);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null&&format.equals("*")){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null&&format.equals("-")){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null&&format.equals("n")){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null&&format.equals("/")){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat!=null||format.length()!=0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(format==null||this.entryFormat.length!=0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.defaultWriteObject();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131out.write('/');
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=getOutputStream().getOutputStream();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131OutputStreamout=getOutputStream(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=format!=null?format:name.toString();
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out){this.entryFormat=format;
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out){if(this.out!=null){for(inti=0;i<this.names.size();++i){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out){synchronized(this.out){this.entryFormat=format;}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out){if(this.out!=null){for(inti=0;i<this.entryFormat.size();++i){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out){if(this.out!=null){for(inti=0;i<this.length;++i){this.out.put(i,format);}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131synchronized(this.out){if(this.out!=null){for(inti=0;i<this.names.size();++i){out.put(i,this.names.get(i));}
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap<Short,Short>(8);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap<Short,Short>(write);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==format||format!=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||format.length!=0){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131if(this.entryFormat==null||format>=null){
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap<String,String>(this.names);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap<String,String>(4);
projects/Compress1/src/main/java/org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.java131this.entryFormat=newHashMap<String,String>(out);
