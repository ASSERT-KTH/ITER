bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getAnonymousOption(separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  option.getAnonymousOption(separator);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getAnonymousOption(separator);	  final    Option    anonymous    =    option.getAnonymousOption();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
2	[BUG]  [BUGGY]  Option  anonymous  =  option.getAnonymousOption();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  option.getAnonymousOption();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  option.getAnonymousOption();	  final    Option    anonymous    =    option.getAnonymousOption();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
3	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getAnonymousOption(this);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  option.getAnonymousOption(this);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getAnonymousOption(this);	  final    Option    anonymous    =    option.getAnonymousOption();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
4	[BUG]  [BUGGY]  if(anonymous  ||  options.hasOption(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  ||  options.hasOption(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  ||  options.hasOption(separator))  {	  if(!anonymous    &&    options.hasOption(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
5	[BUG]  [BUGGY]  if(!anonymous  &&  options.hasOption(previous))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  options.hasOption(previous))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  options.hasOption(previous))  {	  if(!anonymous    &&    options.hasOption(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
6	[BUG]  [BUGGY]  if(!anonymous  &&  options.hasOption(comp))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  options.hasOption(comp))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  options.hasOption(comp))  {	  if(!anonymous    &&    options.hasOption(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
7	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(arg,  separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(arg,  separator);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(arg,  separator);	  final    Option    anonymous    =    optionMap.getOption(separator,    separator);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
8	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(prefix,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(prefix,  separator);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(prefix,  separator);	  final    Option    anonymous    =    optionMap.getOption(separator,    separator);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
9	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(comp,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(comp,  separator);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(comp,  separator);	  final    Option    anonymous    =    optionMap.getOption(separator,    separator);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
10	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(prefixes,  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(prefixes,  separator);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(prefixes,  separator);	  final    Option    anonymous    =    optionMap.getOption(separator,    separator);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
11	[BUG]  [BUGGY]  final  Option  anonymous  =  options.get(separator).getAnonymousOption();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  options.get(separator).getAnonymousOption();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.get(separator).getAnonymousOption();	  final    Option    anonymous    =    options.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
12	[BUG]  [BUGGY]  final  Option  anonymous  =  options.get(parser).getOption();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  options.get(parser).getOption();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.get(parser).getOption();	  final    Option    anonymous    =    options.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
13	[BUG]  [BUGGY]  final  Option  anonymous  =  options.get(0).getOption();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  options.get(0).getOption();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.get(0).getOption();	  final    Option    anonymous    =    options.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
14	[BUG]  [BUGGY]  if(separator  ||  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ||  buffer.length()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ||  buffer.length()  >  maximum)  {	  if(arguments    ||    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
15	[BUG]  [BUGGY]  if(array  ||  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(array  ||  buffer.length()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(array  ||  buffer.length()  >  maximum)  {	  if(arguments    ||    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
16	[BUG]  [BUGGY]  if(arguments  ||  buffer.length()  <  maximum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(arguments  ||  buffer.length()  <  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(arguments  ||  buffer.length()  <  maximum)  {	  if(arguments    ||    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
17	[BUG]  [BUGGY]  if(anonymous  ||  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  ||  buffer.length()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  ||  buffer.length()  >  maximum)  {	  if(arguments    ||    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
18	[BUG]  [BUGGY]  if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append( "] ");  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append( "] ");  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
19	[BUG]  [BUGGY]  if(separator  ==  null  ||  separator.length()  >  0)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null  ||  separator.length()  >  0)  {  buffer.append( "] ");  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null  ||  separator.length()  >  0)  {  buffer.append( "] ");  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
20	[BUG]  [BUGGY]  buffer.append( "[ ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append( "[ ");  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	buffer.append( "[ ");	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
21	[BUG]  [BUGGY]  buffer.append('['  +  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append('['  +  separator);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	buffer.append('['  +  separator);	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
22	[BUG]  [BUGGY]  if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append('[');  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append('[');  }	  if(separator!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
23	[BUG]  [BUGGY]  if(arguments  ||  buffer.length()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(arguments  ||  buffer.length()  >  minimum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(arguments  ||  buffer.length()  >  minimum)  {	  if(arguments    &&    buffer.length()    >    minimum)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
24	[BUG]  [BUGGY]  if(exceptional  &&  buffer.length()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(exceptional  &&  buffer.length()  >  minimum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(exceptional  &&  buffer.length()  >  minimum)  {	  if(arguments    &&    buffer.length()    >    minimum)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
25	[BUG]  [BUGGY]  if(!anonymous  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {	  if(!anonymous    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
26	[BUG]  [BUGGY]  if(!anonymous  &&  buffer.length()  >  minimum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  buffer.length()  >  minimum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  buffer.length()  >  minimum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {	  if(!anonymous    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
27	[BUG]  [BUGGY]  if(!anonymous  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {	  if(!anonymous    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.get(previous  +  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.get(previous  +  1);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.get(previous  +  1);	  Option    anonymous    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
29	[BUG]  [BUGGY]  Option  anonymous  =  options.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  options.get(separator  +  1);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  options.get(separator  +  1);	  Option    anonymous    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
30	[BUG]  [BUGGY]  final  Option  anonymous  =  options.get(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  options.get(separator,  buffer);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.get(separator,  buffer);	  final    Option    anonymous    =    optionMap.get(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
31	[BUG]  [BUGGY]  final  Option  anonymous  =  optionsMap.get(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionsMap.get(separator,  buffer);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionsMap.get(separator,  buffer);	  final    Option    anonymous    =    optionMap.get(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
32	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(comp,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(comp,  separator);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(comp,  separator);	  final    Option    anonymous    =    optionMap.get(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
33	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(separator,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(separator,  buffer.length);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(separator,  buffer.length);	  final    Option    anonymous    =    optionMap.get(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
34	[BUG]  [BUGGY]  final  Option  anonymous  =  options.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  options.get(separator  -  1);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.get(separator  -  1);	  final    Option    anonymous    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
35	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(prefix  -  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(prefix  -  1);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(prefix  -  1);	  final    Option    anonymous    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
36	[BUG]  [BUGGY]  if(separator  ==  null)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }	  if(separator!=    null)    {    buffer.append(   "]   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
37	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getOption(default);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  option.getOption(default);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getOption(default);	  final    Option    anonymous    =    option.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
38	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  option.getOption(arg,  description);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getOption(arg,  description);	  final    Option    anonymous    =    option.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
39	[BUG]  [BUGGY]  if(anonymous!=  null)  {  for(int  i  =  0;  i  <  anonymous.size();  i++)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous!=  null)  {  for(int  i  =  0;  i  <  anonymous.size();  i++)  {  buffer.append('[');  }  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous!=  null)  {  for(int  i  =  0;  i  <  anonymous.size();  i++)  {  buffer.append('[');  }	  if(separator!=    null)    {    for(int    i    =    0;    i    <    anonymous.size();    i++)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  anonymous.size();  i++)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  for(int  i  =  0;  i  <  anonymous.size();  i++)  {  buffer.append('[');  }  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	for(int  i  =  0;  i  <  anonymous.size();  i++)  {  buffer.append('[');  }	  if(separator!=    null)    {    for(int    i    =    0;    i    <    anonymous.size();    i++)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
41	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  anonymous.size();  i++)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  For(int  i  =  0;  i  <  anonymous.size();  i++)  {  buffer.append('[');  }  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	For(int  i  =  0;  i  <  anonymous.size();  i++)  {  buffer.append('[');  }	  if(separator!=    null)    {    for(int    i    =    0;    i    <    anonymous.size();    i++)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
42	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(partial).getAnonymousOption();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(partial).getAnonymousOption();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(partial).getAnonymousOption();	  final    Option    anonymous    =    optionMap.get(partial).getOption();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
43	[BUG]  [BUGGY]  final  Option  anonymous  =  options.get(partial).getOption();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  options.get(partial).getOption();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.get(partial).getOption();	  final    Option    anonymous    =    optionMap.get(partial).getOption();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
44	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(optional).getOption();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(optional).getOption();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(optional).getOption();	  final    Option    anonymous    =    optionMap.get(partial).getOption();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
45	[BUG]  [BUGGY]  if(anonymous  ||  options.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  ||  options.size()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  ||  options.size()  >  maximum)  {	  if(anonymous    &&    options.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
46	[BUG]  [BUGGY]  if(anonymous  &&  options.size()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  &&  options.size()  >  minimum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  options.size()  >  minimum)  {	  if(anonymous    &&    options.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
47	[BUG]  [BUGGY]  if(optional  &&  options.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(optional  &&  options.size()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(optional  &&  options.size()  >  maximum)  {	  if(anonymous    &&    options.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
48	[BUG]  [BUGGY]  if(!anonymous  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  buffer.length()  ==  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(!anonymous    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
49	[BUG]  [BUGGY]  if(!anonymous  &&  buffer.length()  >  minimum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  buffer.length()  >  minimum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  buffer.length()  >  minimum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(!anonymous    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
50	[BUG]  [BUGGY]  if(!anonymous  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  buffer.length()!=  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(!anonymous    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
51	[BUG]  [BUGGY]  if(anonymous  ||  anonymous)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  ||  anonymous)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  ||  anonymous)  {	  if(anonymous    &&    anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
52	[BUG]  [BUGGY]  if(anonymous  &&  anonymous  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  &&  anonymous  &&  buffer.length()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  anonymous  &&  buffer.length()  >  maximum)  {	  if(anonymous    &&    anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
53	[BUG]  [BUGGY]  if(anonymous!=  null)  {  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous!=  null)  {  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append(']');  }  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous!=  null)  {  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append(']');  }	  if(separator!=    null)    {    for(int    i    =    0;    i    <    anonymous.size();    ++i)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append(']');  }  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append(']');  }	  if(separator!=    null)    {    for(int    i    =    0;    i    <    anonymous.size();    ++i)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
55	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  For(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append(']');  }  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	For(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append(']');  }	  if(separator!=    null)    {    for(int    i    =    0;    i    <    anonymous.size();    ++i)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
56	[BUG]  [BUGGY]  if(separator!=  null  ||  separator.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  ||  separator.length()  ==  0)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  ||  separator.length()  ==  0)  {	  if(separator.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
57	[BUG]  [BUGGY]  if(separator  ==  null  ||  separator.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null  ||  separator.length()  ==  0)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null  ||  separator.length()  ==  0)  {	  if(separator.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
58	[BUG]  [BUGGY]  if(separator.length()  ==  0  ||  buffer.charAt(separator.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator.length()  ==  0  ||  buffer.charAt(separator.length()  -  1)!=  ']')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator.length()  ==  0  ||  buffer.charAt(separator.length()  -  1)!=  ']')  {	  if(separator.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
59	[BUG]  [BUGGY]  Option  anonymous  =  options.get(prefix);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  options.get(prefix);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  options.get(prefix);	  Option    anonymous    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
60	[BUG]  [BUGGY]  Option  anonymous  =  options.get(comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  options.get(comp);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  options.get(comp);	  Option    anonymous    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
61	[BUG]  [BUGGY]  if(!expanded)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!expanded)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!expanded)  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
62	[BUG]  [BUGGY]  if(expanded  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(expanded  &&  buffer.length()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(expanded  &&  buffer.length()  >  maximum)  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
63	[BUG]  [BUGGY]  if(separator.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator.isEmpty())  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator.isEmpty())  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
64	[BUG]  [BUGGY]  if(anonymous  ||  anonymous.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  ||  anonymous.size()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  ||  anonymous.size()  >  maximum)  {	  if(anonymous    &&    anonymous.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
65	[BUG]  [BUGGY]  if(anonymous  &&  anonymous.size()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  &&  anonymous.size()  >  minimum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  anonymous.size()  >  minimum)  {	  if(anonymous    &&    anonymous.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
66	[BUG]  [BUGGY]  if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append( "] ");  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append( "] ");  }	  if(separator!=    null)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
67	[BUG]  [BUGGY]  if(separator  ==  null  ||  separator.length()  ==  0)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null  ||  separator.length()  ==  0)  {  buffer.append( "] ");  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null  ||  separator.length()  ==  0)  {  buffer.append( "] ");  }	  if(separator!=    null)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
68	[BUG]  [BUGGY]  if(array  &&  buffer.length()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(array  &&  buffer.length()  ==  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(array  &&  buffer.length()  ==  maximum)  {	  if(arguments    &&    buffer.length()    ==    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
69	[BUG]  [BUGGY]  if(arguments  ||  buffer.length()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(arguments  ||  buffer.length()  ==  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(arguments  ||  buffer.length()  ==  maximum)  {	  if(arguments    &&    buffer.length()    ==    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
70	[BUG]  [BUGGY]  if(exceptional  &&  buffer.length()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(exceptional  &&  buffer.length()  ==  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(exceptional  &&  buffer.length()  ==  maximum)  {	  if(arguments    &&    buffer.length()    ==    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
71	[BUG]  [BUGGY]  if(maximum  &&  buffer.length()  ==  arguments)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(maximum  &&  buffer.length()  ==  arguments)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(maximum  &&  buffer.length()  ==  arguments)  {	  if(arguments    &&    buffer.length()    ==    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
72	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(previous  -  separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(previous  -  separator);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(previous  -  separator);	  final    Option    anonymous    =    optionMap.get(separator    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
73	[BUG]  [BUGGY]  final  Option  anonymous  =  options.get(separator  -  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  options.get(separator  -  separator);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.get(separator  -  separator);	  final    Option    anonymous    =    optionMap.get(separator    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
74	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(separator  -  separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(separator  -  separator,  buffer);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(separator  -  separator,  buffer);	  final    Option    anonymous    =    optionMap.get(separator    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
75	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(separator  -  previous);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(separator  -  previous);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(separator  -  previous);	  final    Option    anonymous    =    optionMap.get(separator    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
76	[BUG]  [BUGGY]  final  Option  anonymous  =  options.get(option);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  options.get(option);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.get(option);	  final    Option    anonymous    =    optionMap.get(option);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
77	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(arg);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(arg);	  final    Option    anonymous    =    optionMap.get(option);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
78	[BUG]  [BUGGY]  Option  anonymous  =  option.getOption(comp);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  option.getOption(comp);  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  option.getOption(comp);	  Option    anonymous    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
79	[BUG]  [BUGGY]  Option  anonymous  =  options.getOption(separator);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  options.getOption(separator);  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  options.getOption(separator);	  Option    anonymous    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
80	[BUG]  [BUGGY]  Option  anonymous  =  option.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  option.getOption(prefix);  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  option.getOption(prefix);	  Option    anonymous    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
81	[BUG]  [BUGGY]  Option  anonymous  =  option.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  option.getOption(separator,  buffer);  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  option.getOption(separator,  buffer);	  Option    anonymous    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
82	[BUG]  [BUGGY]  final  Option  anonymous  =  options.getOption(comp);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  options.getOption(comp);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.getOption(comp);	  final    Option    anonymous    =    option.getOption(comp);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
83	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getOption(comp,  buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  option.getOption(comp,  buffer);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getOption(comp,  buffer);	  final    Option    anonymous    =    option.getOption(comp);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
84	[BUG]  [BUGGY]  if(anonymous!=  null)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous!=  null)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous!=  null)  {	  if(separator!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
85	[BUG]  [BUGGY]  if(separator  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null)  {	  if(separator!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
86	[BUG]  [BUGGY]  if(anonymous  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  ==  null)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  ==  null)  {	  if(separator!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
87	[BUG]  [BUGGY]  if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append('[');  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append('[');  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
88	[BUG]  [BUGGY]  if(separator  ==  null  ||  separator.length()  >  0)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null  ||  separator.length()  >  0)  {  buffer.append('[');  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null  ||  separator.length()  >  0)  {  buffer.append('[');  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
89	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append(']');  }  else  {  buffer.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null)  {  buffer.append(']');  }  else  {  buffer.append( "n ");  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null)  {  buffer.append(']');  }  else  {  buffer.append( "n ");  }	  buffer.append(']');    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
90	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append(']');  }  else  {  buffer.append( ": ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null)  {  buffer.append(']');  }  else  {  buffer.append( ": ");  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null)  {  buffer.append(']');  }  else  {  buffer.append( ": ");  }	  buffer.append(']');    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
91	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getOption(this,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  option.getOption(this,  buffer);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getOption(this,  buffer);	  final    Option    anonymous    =    option.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
92	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getOption(this,  comp);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  option.getOption(this,  comp);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getOption(this,  comp);	  final    Option    anonymous    =    option.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
93	[BUG]  [BUGGY]  final  Option  anonymous  =  options.getOption(this,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  options.getOption(this,  separator);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.getOption(this,  separator);	  final    Option    anonymous    =    option.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
94	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getOption(this,  description);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  option.getOption(this,  description);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getOption(this,  description);	  final    Option    anonymous    =    option.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
95	[BUG]  [BUGGY]  if(!this.anonymous)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!this.anonymous)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!this.anonymous)  {	  if(this.anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
96	[BUG]  [BUGGY]  if(this.anonymous  ||  anonymous.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(this.anonymous  ||  anonymous.isEmpty())  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(this.anonymous  ||  anonymous.isEmpty())  {	  if(this.anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
97	[BUG]  [BUGGY]  if(this.anonymous  &&  anonymous.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(this.anonymous  &&  anonymous.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(this.anonymous  &&  anonymous.contains(separator))  {	  if(this.anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
98	[BUG]  [BUGGY]  if(anonymous  ||  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  ||  options.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  ||  options.contains(separator))  {	  if(!anonymous    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
99	[BUG]  [BUGGY]  if(separator!=  null  ||!anonymous  &&  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  ||!anonymous  &&  options.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  ||!anonymous  &&  options.contains(separator))  {	  if(!anonymous    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
100	[BUG]  [BUGGY]  if(separator!=  null  &&  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&  options.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&  options.contains(separator))  {	  if(!anonymous    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
101	[BUG]  [BUGGY]  if(optional  &&  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(optional  &&  options.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(optional  &&  options.contains(separator))  {	  if(!anonymous    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
102	[BUG]  [BUGGY]  if(!both  &&  options.hasOption(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!both  &&  options.hasOption(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!both  &&  options.hasOption(separator))  {	  if(both    &&    options.hasOption(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
103	[BUG]  [BUGGY]  if(optional  &&  options.hasOption(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(optional  &&  options.hasOption(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(optional  &&  options.hasOption(separator))  {	  if(both    &&    options.hasOption(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
104	[BUG]  [BUGGY]  if(separator.hasOption(both))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator.hasOption(both))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator.hasOption(both))  {	  if(both    &&    options.hasOption(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
105	[BUG]  [BUGGY]  if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append('[');  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append('[');  }  else  {  buffer.append(']');  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append('[');  }  else  {  buffer.append(']');  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append('[');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
106	[BUG]  [BUGGY]  if(separator  ==  null  &&  separator.length()  >  0)  {  buffer.append('[');  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null  &&  separator.length()  >  0)  {  buffer.append('[');  }  else  {  buffer.append(']');  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null  &&  separator.length()  >  0)  {  buffer.append('[');  }  else  {  buffer.append(']');  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append('[');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
107	[BUG]  [BUGGY]  if(separator  ==  null  ||  separator.length()  >  0)  {  buffer.append('[');  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null  ||  separator.length()  >  0)  {  buffer.append('[');  }  else  {  buffer.append(']');  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null  ||  separator.length()  >  0)  {  buffer.append('[');  }  else  {  buffer.append(']');  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append('[');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
108	[BUG]  [BUGGY]  if(exceptional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(exceptional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(exceptional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  ']')  {	  if(exceptional    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
109	[BUG]  [BUGGY]  if(exceptional  &&  buffer.length()  <  maximum)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(exceptional  &&  buffer.length()  <  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(exceptional  &&  buffer.length()  <  maximum)  {	  if(exceptional    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
110	[BUG]  [BUGGY]  buffer.append('  ');  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append('  ');  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	buffer.append('  ');	  buffer.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
111	[BUG]  [BUGGY]  if(anonymous  ||  anonymous.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  ||  anonymous.isEmpty())  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  ||  anonymous.isEmpty())  {	  if(anonymous    &&    anonymous.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
112	[BUG]  [BUGGY]  if(this.anonymous  &&  anonymous.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(this.anonymous  &&  anonymous.isEmpty())  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(this.anonymous  &&  anonymous.isEmpty())  {	  if(anonymous    &&    anonymous.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
113	[BUG]  [BUGGY]  if(annotation  ||  anonymous.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(annotation  ||  anonymous.isEmpty())  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(annotation  ||  anonymous.isEmpty())  {	  if(anonymous    &&    anonymous.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
114	[BUG]  [BUGGY]  if(!arguments  &&  buffer.length()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!arguments  &&  buffer.length()  >  minimum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!arguments  &&  buffer.length()  >  minimum)  {	  if(!arguments    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
115	[BUG]  [BUGGY]  if(!arguments  &&  buffer.length()  <  maximum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!arguments  &&  buffer.length()  <  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!arguments  &&  buffer.length()  <  maximum)  {	  if(!arguments    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
116	[BUG]  [BUGGY]  if(!arguments  &&  buffer.length()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!arguments  &&  buffer.length()  ==  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!arguments  &&  buffer.length()  ==  maximum)  {	  if(!arguments    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
117	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(arg,  description);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(arg,  description);	  final    Option    anonymous    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
118	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(arg,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(arg,  buffer);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(arg,  buffer);	  final    Option    anonymous    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
119	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.getOption(separator,  buffer);  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.getOption(separator,  buffer);	  Option    anonymous    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
120	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.getOption(prefix);  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.getOption(prefix);	  Option    anonymous    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
121	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.getOption(arg);  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.getOption(arg);	  Option    anonymous    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
122	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.getOption(comp);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.getOption(comp);  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.getOption(comp);	  Option    anonymous    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
123	[BUG]  [BUGGY]  Option  anonymous  =  optionsMap.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionsMap.get(separator  +  1);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionsMap.get(separator  +  1);	  Option    anonymous    =    optionsMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
124	[BUG]  [BUGGY]  Option  anonymous  =  optionsMap.get(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionsMap.get(separator,  buffer);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionsMap.get(separator,  buffer);	  Option    anonymous    =    optionsMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
125	[BUG]  [BUGGY]  final  Option  anonymous  =  options.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  options.getOption(arg);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.getOption(arg);	  final    Option    anonymous    =    options.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
126	[BUG]  [BUGGY]  final  Option  anonymous  =  options.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  options.getOption(separator,  buffer);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.getOption(separator,  buffer);	  final    Option    anonymous    =    options.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
127	[BUG]  [BUGGY]  if(anonymous  ||  separator.equals(anonymous))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  ||  separator.equals(anonymous))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  ||  separator.equals(anonymous))  {	  if(anonymous    &&    anonymous.equals(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
128	[BUG]  [BUGGY]  if(anonymous  ||  anonymous.equals(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  ||  anonymous.equals(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  ||  anonymous.equals(separator))  {	  if(anonymous    &&    anonymous.equals(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
129	[BUG]  [BUGGY]  if(separator  ||  anonymous.equals(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ||  anonymous.equals(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ||  anonymous.equals(separator))  {	  if(anonymous    &&    anonymous.equals(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
130	[BUG]  [BUGGY]  if(anonymous.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous.isEmpty())  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous.isEmpty())  {	  if(!anonymous    &&    anonymous.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
131	[BUG]  [BUGGY]  if(!anonymous  &&  anonymous.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  anonymous.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  anonymous.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {	  if(!anonymous    &&    anonymous.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
132	[BUG]  [BUGGY]  if(!anonymous  &&  anonymous.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  anonymous.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  anonymous.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(!anonymous    &&    anonymous.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
133	[BUG]  [BUGGY]  if(buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(buffer.length()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(buffer.length()  >  maximum)  {	  if(array    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
134	[BUG]  [BUGGY]  if(array  &&  buffer.length()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(array  &&  buffer.length()  >  minimum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(array  &&  buffer.length()  >  minimum)  {	  if(array    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
135	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(previous  +  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(previous  +  1);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(previous  +  1);	  final    Option    anonymous    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
136	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(prefix  +  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(prefix  +  1);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(prefix  +  1);	  final    Option    anonymous    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
137	[BUG]  [BUGGY]  if(!this.separator)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!this.separator)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!this.separator)  {	  if(this.separator)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
138	[BUG]  [BUGGY]  if(this.separator  ||  anonymous.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(this.separator  ||  anonymous.isEmpty())  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(this.separator  ||  anonymous.isEmpty())  {	  if(this.separator)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
139	[BUG]  [BUGGY]  if(this.separator  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(this.separator  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(this.separator  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(this.separator)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
140	[BUG]  [BUGGY]  parent.append(buffer,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(buffer,  separator);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	parent.append(buffer,  separator);	  parent.append(comp,    separator);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
141	[BUG]  [BUGGY]  parent.append(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(separator,  comp);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	parent.append(separator,  comp);	  parent.append(comp,    separator);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
142	[BUG]  [BUGGY]  parent.append(comp,  separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(comp,  separator,  buffer);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	parent.append(comp,  separator,  buffer);	  parent.append(comp,    separator);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
143	[BUG]  [BUGGY]  parent.append(comp,  separator,  previous);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(comp,  separator,  previous);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	parent.append(comp,  separator,  previous);	  parent.append(comp,    separator);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
144	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(parser).getAnonymousOption();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(parser).getAnonymousOption();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(parser).getAnonymousOption();	  final    Option    anonymous    =    optionMap.get(parser).getOption();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
145	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(parser).getArgumentOption();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(parser).getArgumentOption();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(parser).getArgumentOption();	  final    Option    anonymous    =    optionMap.get(parser).getOption();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
146	[BUG]  [BUGGY]  if(maximum  &&  buffer.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(maximum  &&  buffer.length()  >  0)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(maximum  &&  buffer.length()  >  0)  {	  if(maximum    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
147	[BUG]  [BUGGY]  if(previous  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(previous  &&  buffer.length()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(previous  &&  buffer.length()  >  maximum)  {	  if(maximum    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
148	[BUG]  [BUGGY]  if(maximum  ||  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(maximum  ||  buffer.length()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(maximum  ||  buffer.length()  >  maximum)  {	  if(maximum    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
149	[BUG]  [BUGGY]  if(primary  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(primary  &&  buffer.length()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(primary  &&  buffer.length()  >  maximum)  {	  if(maximum    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
150	[BUG]  [BUGGY]  if(separator  ||  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ||  options.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ||  options.contains(separator))  {	  if(anonymous    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
151	[BUG]  [BUGGY]  if(anonymous  &&  options.contains(separator)||  buffer.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  &&  options.contains(separator)||  buffer.length()  ==  0)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  options.contains(separator)||  buffer.length()  ==  0)  {	  if(anonymous    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
152	[BUG]  [BUGGY]  if(anonymous!=  null)  {  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous!=  null)  {  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append('[');  }  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous!=  null)  {  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append('[');  }	  if(separator!=    null)    {    for(int    i    =    0;    i    <    anonymous.size();    ++i)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
153	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append('[');  }  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append('[');  }	  if(separator!=    null)    {    for(int    i    =    0;    i    <    anonymous.size();    ++i)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
154	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  For(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append('[');  }  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	For(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append('[');  }	  if(separator!=    null)    {    for(int    i    =    0;    i    <    anonymous.size();    ++i)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
155	[BUG]  [BUGGY]  if(anonymous  &&  buffer.length()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  &&  buffer.length()  >  minimum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  buffer.length()  >  minimum)  {	  if(anonymous    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
156	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.get(previous  -  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.get(previous  -  separator);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.get(previous  -  separator);	  Option    anonymous    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
157	[BUG]  [BUGGY]  Option  anonymous  =  options.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  options.get(separator  -  1);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  options.get(separator  -  1);	  Option    anonymous    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
158	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(separator).getAnonymous();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(separator).getAnonymous();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(separator).getAnonymous();	  final    Option    anonymous    =    optionMap.get(separator).getAnonymousOption();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
159	[BUG]  [BUGGY]  if(separator!=  null  &&!arguments  &&  anonymous.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&!arguments  &&  anonymous.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&!arguments  &&  anonymous.contains(separator))  {	  if(!arguments    &&    anonymous.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
160	[BUG]  [BUGGY]  if(anonymous.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous.contains(separator))  {	  if(!arguments    &&    anonymous.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
161	[BUG]  [BUGGY]  if(separator!=  null  &&!arguments  &&  anonym.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&!arguments  &&  anonym.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&!arguments  &&  anonym.contains(separator))  {	  if(!arguments    &&    anonymous.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
162	[BUG]  [BUGGY]  if(separator  ==  null)  {  buffer.append( "[ ");  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null)  {  buffer.append( "[ ");  }  else  {  buffer.append(']');  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null)  {  buffer.append( "[ ");  }  else  {  buffer.append(']');  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
163	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null)  {  buffer.append( "[ ");  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null)  {  buffer.append( "[ ");  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
164	[BUG]  [BUGGY]  buffer.append( "[ ");  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append( "[ ");  }  else  {  buffer.append(']');  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	buffer.append( "[ ");  }  else  {  buffer.append(']');  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
165	[BUG]  [BUGGY]  if(separator!=  null  &&!anonymous  &&  anonymous.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&!anonymous  &&  anonymous.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&!anonymous  &&  anonymous.contains(separator))  {	  if(!anonymous    &&    anonymous.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
166	[BUG]  [BUGGY]  if(anonymous  ||  anonymous.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  ||  anonymous.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  ||  anonymous.contains(separator))  {	  if(!anonymous    &&    anonymous.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
167	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(this.prefix);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(this.prefix);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(this.prefix);	  final    Option    anonymous    =    optionMap.getOption(prefix);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
168	[BUG]  [BUGGY]  if(separator  ||  other)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ||  other)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ||  other)  {	  if(separator    ||    separator)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
169	[BUG]  [BUGGY]  if(separator  ||  previous)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ||  previous)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ||  previous)  {	  if(separator    ||    separator)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
170	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getOption(comp,  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  option.getOption(comp,  separator);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getOption(comp,  separator);	  final    Option    anonymous    =    option.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
171	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getOption(arg,  buffer);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  option.getOption(arg,  buffer);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getOption(arg,  buffer);	  final    Option    anonymous    =    option.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
172	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getOption(separator,  buffer,  arg);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  option.getOption(separator,  buffer,  arg);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getOption(separator,  buffer,  arg);	  final    Option    anonymous    =    option.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
173	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(separator,  buffer,  arg);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(separator,  buffer,  arg);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(separator,  buffer,  arg);	  final    Option    anonymous    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
174	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(separator,  buffer,  prefix);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(separator,  buffer,  prefix);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(separator,  buffer,  prefix);	  final    Option    anonymous    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
175	[BUG]  [BUGGY]  if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append(']');  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append(']');  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
176	[BUG]  [BUGGY]  if(separator  ==  null  ||  separator.length()  >  0)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null  ||  separator.length()  >  0)  {  buffer.append(']');  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null  ||  separator.length()  >  0)  {  buffer.append(']');  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
177	[BUG]  [BUGGY]  final  Iterator  <  Option>  anonymous  =  options.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Iterator  <  Option>  anonymous  =  options.keySet().iterator();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Iterator  <  Option>  anonymous  =  options.keySet().iterator();	  final    Iterator    <    Option>    anonymous    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
178	[BUG]  [BUGGY]  final  Iterator  <  Option>  anonymous  =  this.options.values().iterator();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Iterator  <  Option>  anonymous  =  this.options.values().iterator();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Iterator  <  Option>  anonymous  =  this.options.values().iterator();	  final    Iterator    <    Option>    anonymous    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
179	[BUG]  [BUGGY]  if(unique  ||  separator)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(unique  ||  separator)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(unique  ||  separator)  {	  if(separator    ||    unique)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
180	[BUG]  [BUGGY]  if(separator  ||  unique  ||  buffer.length()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ||  unique  ||  buffer.length()  ==  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ||  unique  ||  buffer.length()  ==  maximum)  {	  if(separator    ||    unique)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
181	[BUG]  [BUGGY]  if(!separator  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!separator  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!separator  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
182	[BUG]  [BUGGY]  if(!separator  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!separator  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!separator  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
183	[BUG]  [BUGGY]  if(!separator  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!='')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!separator  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!='')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!separator  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!='')  {	  if(!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
184	[BUG]  [BUGGY]  if(!anonymous  &&  separator.equals(anonymous))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  separator.equals(anonymous))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  separator.equals(anonymous))  {	  if(!anonymous    &&    anonymous.equals(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
185	[BUG]  [BUGGY]  if(separator.equals(anonymous))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator.equals(anonymous))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator.equals(anonymous))  {	  if(!anonymous    &&    anonymous.equals(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
186	[BUG]  [BUGGY]  if(separator!=  null  &&!anonymous  &&  anonymous.equals(separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&!anonymous  &&  anonymous.equals(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&!anonymous  &&  anonymous.equals(separator))  {	  if(!anonymous    &&    anonymous.equals(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
187	[BUG]  [BUGGY]  if(anonymous.equals(separator))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous.equals(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous.equals(separator))  {	  if(!anonymous    &&    anonymous.equals(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
188	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.get(separator).getAnonymousOption();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.get(separator).getAnonymousOption();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.get(separator).getAnonymousOption();	  Option    anonymous    =    optionMap.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
189	[BUG]  [BUGGY]  Option  anonymous  =  options.get(separator).getOption();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  options.get(separator).getOption();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  options.get(separator).getOption();	  Option    anonymous    =    optionMap.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
190	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.get(separator).getArgument();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.get(separator).getArgument();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.get(separator).getArgument();	  Option    anonymous    =    optionMap.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
191	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(this);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(this);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(this);	  final    Option    anonymous    =    optionMap.getOption();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
192	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getAnonymousOption();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getAnonymousOption();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getAnonymousOption();	  final    Option    anonymous    =    optionMap.getOption();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
193	[BUG]  [BUGGY]  Option  anonymous  =  options.get(previous);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  options.get(previous);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  options.get(previous);	  Option    anonymous    =    optionMap.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
194	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.get(optional);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.get(optional);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.get(optional);	  Option    anonymous    =    optionMap.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
195	[BUG]  [BUGGY]  if(!arguments  &&  options.contains(separator)||  arguments.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!arguments  &&  options.contains(separator)||  arguments.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!arguments  &&  options.contains(separator)||  arguments.contains(separator))  {	  if(!arguments    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
196	[BUG]  [BUGGY]  if(arguments  ||  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(arguments  ||  options.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(arguments  ||  options.contains(separator))  {	  if(!arguments    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
197	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getOption(this.prefix);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  option.getOption(this.prefix);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getOption(this.prefix);	  final    Option    anonymous    =    option.getOption(prefix);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
198	[BUG]  [BUGGY]  final  Option  anonymous  =  options.get(comp);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  options.get(comp);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.get(comp);	  final    Option    anonymous    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
199	[BUG]  [BUGGY]  final  Option  anonymous  =  options.get(prefix);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  options.get(prefix);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.get(prefix);	  final    Option    anonymous    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
200	[BUG]  [BUGGY]  Option  anonymous  =  option.getArgument();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  option.getArgument();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  option.getArgument();	  Option    anonymous    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
201	[BUG]  [BUGGY]  Option  anonymous  =  options.getOption();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  options.getOption();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  options.getOption();	  Option    anonymous    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
202	[BUG]  [BUGGY]  if(anonymous  ||  separator.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  ||  separator.isEmpty())  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  ||  separator.isEmpty())  {	  if(separator    ||    anonymous.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
203	[BUG]  [BUGGY]  if(annotation.isEmpty()  ||  separator.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(annotation.isEmpty()  ||  separator.isEmpty())  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(annotation.isEmpty()  ||  separator.isEmpty())  {	  if(separator    ||    anonymous.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
204	[BUG]  [BUGGY]  if(separator  ||  this.anonymous.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ||  this.anonymous.isEmpty())  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ||  this.anonymous.isEmpty())  {	  if(separator    ||    anonymous.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
205	[BUG]  [BUGGY]  if(separator  ||  anonymous.isEmpty()  ||  buffer.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ||  anonymous.isEmpty()  ||  buffer.length()  ==  0)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ||  anonymous.isEmpty()  ||  buffer.length()  ==  0)  {	  if(separator    ||    anonymous.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
206	[BUG]  [BUGGY]  final  Iterator  <  Option>  anonymous  =  this.options.iterator();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Iterator  <  Option>  anonymous  =  this.options.iterator();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Iterator  <  Option>  anonymous  =  this.options.iterator();	  final    Iterator    <    Option>    anonymous    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
207	[BUG]  [BUGGY]  final  Iterator  <  Option>  anonymous  =  newAnonymous.iterator();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Iterator  <  Option>  anonymous  =  newAnonymous.iterator();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Iterator  <  Option>  anonymous  =  newAnonymous.iterator();	  final    Iterator    <    Option>    anonymous    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
208	[BUG]  [BUGGY]  final  Iterator  <  Option>  anonymous  =  allOptions.iterator();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Iterator  <  Option>  anonymous  =  allOptions.iterator();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Iterator  <  Option>  anonymous  =  allOptions.iterator();	  final    Iterator    <    Option>    anonymous    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
209	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getAnonymousArgument();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  option.getAnonymousArgument();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getAnonymousArgument();	  final    Option    anonymous    =    option.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
210	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getAnonymousValue();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  option.getAnonymousValue();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getAnonymousValue();	  final    Option    anonymous    =    option.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
211	[BUG]  [BUGGY]  buffer.append( "[] ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append( "[] ");  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	buffer.append( "[] ");	  buffer.append(   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
212	[BUG]  [BUGGY]  if(anonymous  &&  anonymous  &&  buffer.length()  >  max)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  &&  anonymous  &&  buffer.length()  >  max)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  anonymous  &&  buffer.length()  >  max)  {	  if(anonymous    &&    anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
213	[BUG]  [BUGGY]  if(anonymous  &&  anonymous  &&  buffer.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  &&  anonymous  &&  buffer.length()  ==  1)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  anonymous  &&  buffer.length()  ==  1)  {	  if(anonymous    &&    anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
214	[BUG]  [BUGGY]  if(!anonymous  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)  ==  '-')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)  ==  '-')  {	  if(!anonymous    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
215	[BUG]  [BUGGY]  final  Iterator  <  Option>  anonymous  =  optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Iterator  <  Option>  anonymous  =  optionMap.values().iterator();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Iterator  <  Option>  anonymous  =  optionMap.values().iterator();	  final    Iterator    <    Option>    anonymous    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
216	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getOption(prefix,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  option.getOption(prefix,  buffer);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getOption(prefix,  buffer);	  final    Option    anonymous    =    option.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
217	[BUG]  [BUGGY]  if(this.separator!=  null)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(this.separator!=  null)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(this.separator!=  null)  {	  if(separator!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
218	[BUG]  [BUGGY]  buffer.append( ", ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append( ", ");  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	buffer.append( ", ");	  buffer.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
219	[BUG]  [BUGGY]  if(!separator  &&  anonymous.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!separator  &&  anonymous.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!separator  &&  anonymous.contains(separator))  {	  if(!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
220	[BUG]  [BUGGY]  if(!separator  &&  anonymous.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!separator  &&  anonymous.isEmpty())  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!separator  &&  anonymous.isEmpty())  {	  if(!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
221	[BUG]  [BUGGY]  if(!separator  &&  options.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!separator  &&  options.isEmpty())  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!separator  &&  options.isEmpty())  {	  if(!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
222	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.get(option);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.get(option);	  Option    anonymous    =    optionMap.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
223	[BUG]  [BUGGY]  if(separator  ==  null  &&  separator.length()  >  0)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null  &&  separator.length()  >  0)  {  buffer.append('[');  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null  &&  separator.length()  >  0)  {  buffer.append('[');  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
224	[BUG]  [BUGGY]  if(separator  &&  separator)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  &&  separator)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  &&  separator)  {	  if(separator    ||    separator)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
225	[BUG]  [BUGGY]  if(anonymous  ||  separator)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  ||  separator)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  ||  separator)  {	  if(separator    ||    separator)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
226	[BUG]  [BUGGY]  if(this.separator  ||  separator)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(this.separator  ||  separator)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(this.separator  ||  separator)  {	  if(separator    ||    separator)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
227	[BUG]  [BUGGY]  if(separator  ||  anonymous)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ||  anonymous)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ||  anonymous)  {	  if(separator    ||    separator)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
228	[BUG]  [BUGGY]  if(!anonymous  &&  options.contains(separator)||  anonymous.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  options.contains(separator)||  anonymous.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  options.contains(separator)||  anonymous.contains(separator))  {	  if(!anonymous    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
229	[BUG]  [BUGGY]  if(separator  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  &&  buffer.length()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  &&  buffer.length()  >  maximum)  {	  if(array    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
230	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(option).getOption();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(option).getOption();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(option).getOption();	  final    Option    anonymous    =    optionMap.get(partial).getOption();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
231	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.get(previous  -  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.get(previous  -  1);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.get(previous  -  1);	  Option    anonymous    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
232	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.get(partial  -  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.get(partial  -  1);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.get(partial  -  1);	  Option    anonymous    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
233	[BUG]  [BUGGY]  if(!both  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!both  &&  buffer.length()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!both  &&  buffer.length()  >  maximum)  {	  if(!both)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
234	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "[ ");  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "[ ");  }  else  {  buffer.append(']');  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "[ ");  }  else  {  buffer.append(']');  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append('[');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
235	[BUG]  [BUGGY]  if(anonymous  &&  options.size()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  &&  options.size()  ==  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  options.size()  ==  maximum)  {	  if(anonymous    &&    options.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
236	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append( "[] ");  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null)  {  buffer.append( "[] ");  }  else  {  buffer.append(']');  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null)  {  buffer.append( "[] ");  }  else  {  buffer.append(']');  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
237	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(this,  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(this,  separator);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(this,  separator);	  final    Option    anonymous    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
238	[BUG]  [BUGGY]  if(anonymous  &&  buffer.length()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  &&  buffer.length()  ==  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  buffer.length()  ==  maximum)  {	  if(anonymous    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
239	[BUG]  [BUGGY]  if(this.expanded)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(this.expanded)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(this.expanded)  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
240	[BUG]  [BUGGY]  if(separator!=  null  &&!anonymous  &&  anonym.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&!anonymous  &&  anonym.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&!anonymous  &&  anonym.contains(separator))  {	  if(!anonymous    &&    anonymous.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
241	[BUG]  [BUGGY]  if(!anonymous  &&  anonymous.contains(separator)||  buffer.charAt(buffer.length()  -  1)!='')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  anonymous.contains(separator)||  buffer.charAt(buffer.length()  -  1)!='')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  anonymous.contains(separator)||  buffer.charAt(buffer.length()  -  1)!='')  {	  if(!anonymous    &&    anonymous.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
242	[BUG]  [BUGGY]  if(anonymous  &&  options.hasOption(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  &&  options.hasOption(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  options.hasOption(separator))  {	  if(both    &&    options.hasOption(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
243	[BUG]  [BUGGY]  if(both  &&  options.hasOption(arg))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(both  &&  options.hasOption(arg))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(both  &&  options.hasOption(arg))  {	  if(both    &&    options.hasOption(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
244	[BUG]  [BUGGY]  if(both  &&  options.hasOption(separator)||  buffer.charAt(buffer.length()  -  1)!='')  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(both  &&  options.hasOption(separator)||  buffer.charAt(buffer.length()  -  1)!='')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(both  &&  options.hasOption(separator)||  buffer.charAt(buffer.length()  -  1)!='')  {	  if(both    &&    options.hasOption(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
245	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(option,  separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(option,  separator);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(option,  separator);	  final    Option    anonymous    =    optionMap.getOption(separator,    separator);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
246	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(separator,  buffer.length());  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(separator,  buffer.length());  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(separator,  buffer.length());	  final    Option    anonymous    =    optionMap.get(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
247	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getOption(this,  arg);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  option.getOption(this,  arg);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getOption(this,  arg);	  final    Option    anonymous    =    option.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
248	[BUG]  [BUGGY]  if(this.separator  &&  anonymous!=  null)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(this.separator  &&  anonymous!=  null)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(this.separator  &&  anonymous!=  null)  {	  if(this.separator)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
249	[BUG]  [BUGGY]  if(annotation.isEmpty()  ||  anonymous.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(annotation.isEmpty()  ||  anonymous.isEmpty())  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(annotation.isEmpty()  ||  anonymous.isEmpty())  {	  if(separator    ||    anonymous.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
250	[BUG]  [BUGGY]  if(!arguments  &&  buffer.length()!=  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!arguments  &&  buffer.length()!=  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!arguments  &&  buffer.length()!=  maximum)  {	  if(!arguments    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
251	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.getOption();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.getOption();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.getOption();	  Option    anonymous    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
252	[BUG]  [BUGGY]  if(separator!=  null)  {  for(int  i  =  0;  i  <  this.anonymous.size();  ++i)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null)  {  for(int  i  =  0;  i  <  this.anonymous.size();  ++i)  {  buffer.append('[');  }  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null)  {  for(int  i  =  0;  i  <  this.anonymous.size();  ++i)  {  buffer.append('[');  }	  if(separator!=    null)    {    for(int    i    =    0;    i    <    anonymous.size();    ++i)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
253	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(option);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(option);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(option);	  final    Option    anonymous    =    optionMap.getOption(comp);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
254	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(this.exclude);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(this.exclude);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(this.exclude);	  final    Option    anonymous    =    optionMap.getOption(comp);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
255	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(previous  -  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(previous  -  1);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(previous  -  1);	  final    Option    anonymous    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
256	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(partial  -  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(partial  -  1);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(partial  -  1);	  final    Option    anonymous    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
257	[BUG]  [BUGGY]  if(arguments  &&  buffer.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(arguments  &&  buffer.length()  ==  1)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(arguments  &&  buffer.length()  ==  1)  {	  if(arguments    &&    buffer.length()    ==    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
258	[BUG]  [BUGGY]  if(arguments  &&  buffer.length()  ==  minimum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(arguments  &&  buffer.length()  ==  minimum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(arguments  &&  buffer.length()  ==  minimum)  {	  if(arguments    &&    buffer.length()    ==    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
259	[BUG]  [BUGGY]  Option  anonymous  =  optionsMap.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionsMap.get(separator  -  1);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionsMap.get(separator  -  1);	  Option    anonymous    =    optionsMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
260	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.get(partial).getOption();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.get(partial).getOption();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.get(partial).getOption();	  Option    anonymous    =    optionMap.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
261	[BUG]  [BUGGY]  if(anonymous  &&  anonym.size()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  &&  anonym.size()  >  minimum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  anonym.size()  >  minimum)  {	  if(anonymous    &&    anonymous.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
262	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&  separator.length()  ==  0)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&  separator.length()  ==  0)  {	  if(separator.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
263	[BUG]  [BUGGY]  if(separator  ||  unique  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ||  unique  &&  buffer.length()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ||  unique  &&  buffer.length()  >  maximum)  {	  if(separator    ||    unique)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
264	[BUG]  [BUGGY]  parent.append(parent,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(parent,  separator);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	parent.append(parent,  separator);	  parent.append(comp,    separator);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
265	[BUG]  [BUGGY]  parent.append(comp,  name);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(comp,  name);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	parent.append(comp,  name);	  parent.append(comp,    separator);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
266	[BUG]  [BUGGY]  buffer.append(']'  +  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append(']'  +  separator);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	buffer.append(']'  +  separator);	  buffer.append(']');    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
267	[BUG]  [BUGGY]  final  Option  anonymous  =  options.get(parent).getOption();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  options.get(parent).getOption();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.get(parent).getOption();	  final    Option    anonymous    =    options.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
268	[BUG]  [BUGGY]  final  Option  anonymous  =  optionsMap.get(option);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionsMap.get(option);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionsMap.get(option);	  final    Option    anonymous    =    optionMap.get(option);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
269	[BUG]  [BUGGY]  final  Option  anonymous  =  options.get(arg);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  options.get(arg);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.get(arg);	  final    Option    anonymous    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
270	[BUG]  [BUGGY]  if(separator!=  null  &&!anonymous  &&  anonymous.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&!anonymous  &&  anonymous.isEmpty())  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&!anonymous  &&  anonymous.isEmpty())  {	  if(!anonymous    &&    anonymous.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
271	[BUG]  [BUGGY]  if(!anonymous  &&  anonymous.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  'n')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  anonymous.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  'n')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  anonymous.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  'n')  {	  if(!anonymous    &&    anonymous.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
272	[BUG]  [BUGGY]  if(arguments  &&  buffer.length()!=  minimum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(arguments  &&  buffer.length()!=  minimum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(arguments  &&  buffer.length()!=  minimum)  {	  if(arguments    &&    buffer.length()    >    minimum)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
273	[BUG]  [BUGGY]  if(anonymous  &&  separator.equals(anonymous))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  &&  separator.equals(anonymous))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  separator.equals(anonymous))  {	  if(anonymous    &&    anonymous.equals(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
274	[BUG]  [BUGGY]  if(separator  &&  anonymous.equals(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  &&  anonymous.equals(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  &&  anonymous.equals(separator))  {	  if(anonymous    &&    anonymous.equals(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
275	[BUG]  [BUGGY]  if(this.anonymous  &&  separator.equals(anonymous))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(this.anonymous  &&  separator.equals(anonymous))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(this.anonymous  &&  separator.equals(anonymous))  {	  if(anonymous    &&    anonymous.equals(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
276	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getOption(this);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  option.getOption(this);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getOption(this);	  final    Option    anonymous    =    option.getOption(comp);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
277	[BUG]  [BUGGY]  if(anonymous  &&  anonymous.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  'n')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  &&  anonymous.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  'n')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  anonymous.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  'n')  {	  if(anonymous    &&    anonymous.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
278	[BUG]  [BUGGY]  if(anonymous  ||  anonym.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  ||  anonym.isEmpty())  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  ||  anonym.isEmpty())  {	  if(anonymous    &&    anonymous.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
279	[BUG]  [BUGGY]  if(anonymous  &&  anonymous.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  &&  anonymous.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  anonymous.contains(separator))  {	  if(anonymous    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
280	[BUG]  [BUGGY]  if(anonymous  &&  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  &&  options.containsKey(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  options.containsKey(separator))  {	  if(anonymous    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
281	[BUG]  [BUGGY]  if(separator!=  null)  {  for(int  i  =  0;  i  <  this.anonymous.size();  ++i)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null)  {  for(int  i  =  0;  i  <  this.anonymous.size();  ++i)  {  buffer.append(']');  }  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null)  {  for(int  i  =  0;  i  <  this.anonymous.size();  ++i)  {  buffer.append(']');  }	  if(separator!=    null)    {    for(int    i    =    0;    i    <    anonymous.size();    ++i)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
282	[BUG]  [BUGGY]  if(separator!=  null  &&  options.hasOption(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&  options.hasOption(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&  options.hasOption(separator))  {	  if(!anonymous    &&    options.hasOption(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
283	[BUG]  [BUGGY]  if(!anonymous  &&  options.hasOption(separator)||  anonymous.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  options.hasOption(separator)||  anonymous.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  options.hasOption(separator)||  anonymous.contains(separator))  {	  if(!anonymous    &&    options.hasOption(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
284	[BUG]  [BUGGY]  if(!anonymous  &&  options.hasOption(separator)&&  anonymous.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  options.hasOption(separator)&&  anonymous.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  options.hasOption(separator)&&  anonymous.contains(separator))  {	  if(!anonymous    &&    options.hasOption(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
285	[BUG]  [BUGGY]  if(!anonymous  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)  ==  '/')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)  ==  '/')  {	  if(!anonymous    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
286	[BUG]  [BUGGY]  if(maximum  &&  buffer.length()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(maximum  &&  buffer.length()  ==  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(maximum  &&  buffer.length()  ==  maximum)  {	  if(maximum    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
287	[BUG]  [BUGGY]  if(maximum  &&  buffer.length()  >  1)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(maximum  &&  buffer.length()  >  1)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(maximum  &&  buffer.length()  >  1)  {	  if(maximum    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
288	[BUG]  [BUGGY]  if(maximum  &&  buffer.length()!=  maximum)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(maximum  &&  buffer.length()!=  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(maximum  &&  buffer.length()!=  maximum)  {	  if(maximum    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
289	[BUG]  [BUGGY]  final  Iterator  <  Option>  anonymous  =  optionMap.iterator();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Iterator  <  Option>  anonymous  =  optionMap.iterator();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Iterator  <  Option>  anonymous  =  optionMap.iterator();	  final    Iterator    <    Option>    anonymous    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
290	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.getOption(separator,  outer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.getOption(separator,  outer);  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.getOption(separator,  outer);	  Option    anonymous    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
291	[BUG]  [BUGGY]  if(separator!=  null  &&!anonymous  &&  anonym.equals(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&!anonymous  &&  anonym.equals(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&!anonymous  &&  anonym.equals(separator))  {	  if(!anonymous    &&    anonymous.equals(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
292	[BUG]  [BUGGY]  if(separator  ==  null  &&!anonymous  &&  anonymous.equals(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null  &&!anonymous  &&  anonymous.equals(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null  &&!anonymous  &&  anonymous.equals(separator))  {	  if(!anonymous    &&    anonymous.equals(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
293	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(prefix,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(prefix,  buffer);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(prefix,  buffer);	  final    Option    anonymous    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
294	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(this,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(this,  buffer);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(this,  buffer);	  final    Option    anonymous    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
295	[BUG]  [BUGGY]  if(separator!=  null)  {  for(int  i  =  0;  i  <  this.anonymous.size();  i++)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null)  {  for(int  i  =  0;  i  <  this.anonymous.size();  i++)  {  buffer.append('[');  }  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null)  {  for(int  i  =  0;  i  <  this.anonymous.size();  i++)  {  buffer.append('[');  }	  if(separator!=    null)    {    for(int    i    =    0;    i    <    anonymous.size();    i++)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
296	[BUG]  [BUGGY]  if(exceptional  &&  anonymous.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(exceptional  &&  anonymous.length()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(exceptional  &&  anonymous.length()  >  maximum)  {	  if(exceptional    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
297	[BUG]  [BUGGY]  if(arguments  &&  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(arguments  &&  options.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(arguments  &&  options.contains(separator))  {	  if(!arguments    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
298	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(partial  -  separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(partial  -  separator);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(partial  -  separator);	  final    Option    anonymous    =    optionMap.get(separator    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
299	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getOption(name);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  option.getOption(name);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getOption(name);	  final    Option    anonymous    =    option.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
300	[BUG]  [BUGGY]  if(separator!=  null  &&!anonymous  &&  separator.equals(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&!anonymous  &&  separator.equals(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&!anonymous  &&  separator.equals(separator))  {	  if(!anonymous    &&    anonymous.equals(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
301	[BUG]  [BUGGY]  if(separator  ==  null  ||!anonymous  &&  separator.equals(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null  ||!anonymous  &&  separator.equals(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null  ||!anonymous  &&  separator.equals(separator))  {	  if(!anonymous    &&    anonymous.equals(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
302	[BUG]  [BUGGY]  if(separator.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator.length()!=  0)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator.length()!=  0)  {	  if(separator.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
303	[BUG]  [BUGGY]  if(separator.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator.length()  >  0)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator.length()  >  0)  {	  if(separator.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
304	[BUG]  [BUGGY]  if(separator.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator.length()  ==  1)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator.length()  ==  1)  {	  if(separator.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
305	[BUG]  [BUGGY]  parent.append(separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(separator);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	parent.append(separator);	  if(separator!=    null)    {    buffer.append(   "]   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
306	[BUG]  [BUGGY]  if(anonymous  &&  anonymous.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  &&  anonymous.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  anonymous.isEmpty()  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(anonymous    &&    anonymous.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
307	[BUG]  [BUGGY]  if(separator  ==  null  &&  separator.length()  >  0)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null  &&  separator.length()  >  0)  {  buffer.append(']');  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null  &&  separator.length()  >  0)  {  buffer.append(']');  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
308	[BUG]  [BUGGY]  if(!separator  &&!outer)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!separator  &&!outer)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!separator  &&!outer)  {	  if(!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
309	[BUG]  [BUGGY]  if(!separator  &&  separator.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!separator  &&  separator.length()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!separator  &&  separator.length()  >  maximum)  {	  if(!separator)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
310	[BUG]  [BUGGY]  final  Option  anonymous  =  options.get(separator).getOptionMap();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  options.get(separator).getOptionMap();  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.get(separator).getOptionMap();	  final    Option    anonymous    =    options.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
311	[BUG]  [BUGGY]  if(!arguments  &&  arguments.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!arguments  &&  arguments.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!arguments  &&  arguments.contains(separator))  {	  if(!arguments    &&    anonymous.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
312	[BUG]  [BUGGY]  if(maximum  &&  buffer.length()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(maximum  &&  buffer.length()  >  minimum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(maximum  &&  buffer.length()  >  minimum)  {	  if(maximum    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
313	[BUG]  [BUGGY]  if(maximum  &&  anonymous.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(maximum  &&  anonymous.length()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(maximum  &&  anonymous.length()  >  maximum)  {	  if(maximum    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
314	[BUG]  [BUGGY]  if(separator  ==  null  ||  separator.length()  ==  0)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null  ||  separator.length()  ==  0)  {  buffer.append(']');  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null  ||  separator.length()  ==  0)  {  buffer.append(']');  }	  if(separator    ==    null)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
315	[BUG]  [BUGGY]  if(expanded  &&  anonymous.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(expanded  &&  anonymous.isEmpty())  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(expanded  &&  anonymous.isEmpty())  {	  if(expanded)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
316	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(separator,  buffer.toString());  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(separator,  buffer.toString());  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(separator,  buffer.toString());	  final    Option    anonymous    =    optionMap.get(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
317	[BUG]  [BUGGY]  if(anonymous  ||  separator.equals(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  ||  separator.equals(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  ||  separator.equals(separator))  {	  if(anonymous    &&    anonymous.equals(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
318	[BUG]  [BUGGY]  if(separator  ||  both)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ||  both)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ||  both)  {	  if(separator    ||    separator)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
319	[BUG]  [BUGGY]  if(!anonymous  &&  anonymous.isEmpty()  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  anonymous.isEmpty()  &&  buffer.length()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  anonymous.isEmpty()  &&  buffer.length()  >  maximum)  {	  if(!anonymous    &&    anonymous.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
320	[BUG]  [BUGGY]  Option  anonymous  =  option.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  option.getOption(separator,  comp);  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  option.getOption(separator,  comp);	  Option    anonymous    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
321	[BUG]  [BUGGY]  if(separator  ==  null  ||  separator.length()  ==  0)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null  ||  separator.length()  ==  0)  {  buffer.append('[');  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null  ||  separator.length()  ==  0)  {  buffer.append('[');  }	  if(separator    ==    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
322	[BUG]  [BUGGY]  final  Option  anonymous  =  options.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  options.getOption(separator,  comp);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.getOption(separator,  comp);	  final    Option    anonymous    =    options.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
323	[BUG]  [BUGGY]  parent  ==  null)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  parent  ==  null)  {  buffer.append( "] ");  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	parent  ==  null)  {  buffer.append( "] ");  }	  if(separator    ==    null)    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
324	[BUG]  [BUGGY]  if(this.separator  ||  anonymous.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(this.separator  ||  anonymous.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(this.separator  ||  anonymous.contains(separator))  {	  if(this.separator)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
325	[BUG]  [BUGGY]  if(anonymous  &&  anonymous.size()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  &&  anonymous.size()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  anonymous.size()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(anonymous    &&    anonymous.size()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
326	[BUG]  [BUGGY]  parent  ==  null)  {  buffer.append( "[ ");  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  parent  ==  null)  {  buffer.append( "[ ");  }  else  {  buffer.append(']');  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	parent  ==  null)  {  buffer.append( "[ ");  }  else  {  buffer.append(']');  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
327	[BUG]  [BUGGY]  parent  ==  null)  {  buffer.append( "[ ");  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  parent  ==  null)  {  buffer.append( "[ ");  }  else  {  buffer.append(separator);  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	parent  ==  null)  {  buffer.append( "[ ");  }  else  {  buffer.append(separator);  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
328	[BUG]  [BUGGY]  parent  ==  null)  {  buffer.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  parent  ==  null)  {  buffer.append( "[ ");  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	parent  ==  null)  {  buffer.append( "[ ");  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
329	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(separator,  buffer,  null);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(separator,  buffer,  null);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(separator,  buffer,  null);	  final    Option    anonymous    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
330	[BUG]  [BUGGY]  if(separator!=  null  &&  anonymous.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&  anonymous.isEmpty())  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&  anonymous.isEmpty())  {	  if(separator!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
331	[BUG]  [BUGGY]  if(separator!=  null  &&  anonymous.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&  anonymous.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&  anonymous.contains(separator))  {	  if(separator!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
332	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.get(separator  -  2);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.get(separator  -  2);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.get(separator  -  2);	  Option    anonymous    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
333	[BUG]  [BUGGY]  if(both  ||  options.hasOption(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(both  ||  options.hasOption(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(both  ||  options.hasOption(separator))  {	  if(both    &&    options.hasOption(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
334	[BUG]  [BUGGY]  if(both  &&  options.hasOption(separator)&&  separator.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(both  &&  options.hasOption(separator)&&  separator.length()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(both  &&  options.hasOption(separator)&&  separator.length()  >  maximum)  {	  if(both    &&    options.hasOption(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
335	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.getOption(option);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.getOption(option);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.getOption(option);	  Option    anonymous    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
336	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(separator,  description);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(separator,  description);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(separator,  description);	  final    Option    anonymous    =    optionMap.getOption(separator,    separator);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
337	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(separator,  comp,  both);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(separator,  comp,  both);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(separator,  comp,  both);	  final    Option    anonymous    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
338	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(optional);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(optional);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(optional);	  final    Option    anonymous    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
339	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(name);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(name);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(name);	  final    Option    anonymous    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
340	[BUG]  [BUGGY]  if(anonymous  &&  options.contains(separator)||  separator.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  &&  options.contains(separator)||  separator.equals( " "))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  options.contains(separator)||  separator.equals( " "))  {	  if(anonymous    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
341	[BUG]  [BUGGY]  if(exceptional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(exceptional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(exceptional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {	  if(exceptional    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
342	[BUG]  [BUGGY]  if(exceptional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(exceptional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(exceptional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(exceptional    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
343	[BUG]  [BUGGY]  if(exceptional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  'n')  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(exceptional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  'n')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(exceptional  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  'n')  {	  if(exceptional    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
344	[BUG]  [BUGGY]  if(separator!=  null  &&!anonymous  &&  options.hasOption(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&!anonymous  &&  options.hasOption(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&!anonymous  &&  options.hasOption(separator))  {	  if(!anonymous    &&    options.hasOption(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
345	[BUG]  [BUGGY]  if(!anonymous  &&  options.hasOption(separator)&&  separator.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  options.hasOption(separator)&&  separator.length()  >  maximum)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  options.hasOption(separator)&&  separator.length()  >  maximum)  {	  if(!anonymous    &&    options.hasOption(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
346	[BUG]  [BUGGY]  if(!anonymous  &&  options.hasOption(separator)&&  separator.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  options.hasOption(separator)&&  separator.startsWith( "- "))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  options.hasOption(separator)&&  separator.startsWith( "- "))  {	  if(!anonymous    &&    options.hasOption(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
347	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.getOption(separator,  comp);  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.getOption(separator,  comp);	  Option    anonymous    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
348	[BUG]  [BUGGY]  if(!anonymous  &&  options.containsKey(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!anonymous  &&  options.containsKey(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  options.containsKey(separator))  {	  if(!anonymous    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
349	[BUG]  [BUGGY]  if(separator  ==  null)  {  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null)  {  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append('[');  }  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null)  {  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append('[');  }	  if(separator!=    null)    {    for(int    i    =    0;    i    <    anonymous.size();    ++i)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
350	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(separator  -  2);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(separator  -  2);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(separator  -  2);	  final    Option    anonymous    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
351	[BUG]  [BUGGY]  final  Option  anonymous  =  optionsMap.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionsMap.get(separator  -  1);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionsMap.get(separator  -  1);	  final    Option    anonymous    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
352	[BUG]  [BUGGY]  Option  anonymous  =  options.get(separator,  comp);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  options.get(separator,  comp);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  options.get(separator,  comp);	  Option    anonymous    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
353	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "[ ");  }  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "[ ");  }	  if(separator!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
354	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(optional);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(optional);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(optional);	  final    Option    anonymous    =    optionMap.get(option);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
355	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(separator  /  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(separator  /  1);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(separator  /  1);	  final    Option    anonymous    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
356	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(separator  /  separator  +  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(separator  /  separator  +  1);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(separator  /  separator  +  1);	  final    Option    anonymous    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
357	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getOption(separator,  buffer,  null);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  option.getOption(separator,  buffer,  null);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getOption(separator,  buffer,  null);	  final    Option    anonymous    =    option.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
358	[BUG]  [BUGGY]  if(!inner)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(!inner)  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!inner)  {	  if(!both)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
359	[BUG]  [BUGGY]  if(anonymous  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(!anonymous    &&    buffer.length()    >    maximum    &&    buffer.charAt(buffer.length()    -    1)!=    '/')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
360	[BUG]  [BUGGY]  if(anonymous  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(anonymous  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {	  if(anonymous    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
361	[BUG]  [BUGGY]  if(separator  ==  null)  {  for(int  i  =  0;  i  <  anonymous.size();  i++)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null)  {  for(int  i  =  0;  i  <  anonymous.size();  i++)  {  buffer.append('[');  }  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null)  {  for(int  i  =  0;  i  <  anonymous.size();  i++)  {  buffer.append('[');  }	  if(separator!=    null)    {    for(int    i    =    0;    i    <    anonymous.size();    i++)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
362	[BUG]  [BUGGY]  if(this.anonymous  ||  anonymous.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(this.anonymous  ||  anonymous.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(this.anonymous  ||  anonymous.contains(separator))  {	  if(this.anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
363	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(separator,  arg);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.getOption(separator,  arg);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(separator,  arg);	  final    Option    anonymous    =    optionMap.getOption(separator,    outer);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
364	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.get(arg);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.get(arg);	  Option    anonymous    =    optionMap.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
365	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.get(exceptional);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.get(exceptional);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.get(exceptional);	  Option    anonymous    =    optionMap.get(previous);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
366	[BUG]  [BUGGY]  final  Option  anonymous  =  options.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  options.get(separator  +  1);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.get(separator  +  1);	  final    Option    anonymous    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
367	[BUG]  [BUGGY]  final  Option  anonymous  =  options.get(separator,  comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  options.get(separator,  comp);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.get(separator,  comp);	  final    Option    anonymous    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
368	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(separator).getAnonymousOption(comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(separator).getAnonymousOption(comp);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(separator).getAnonymousOption(comp);	  final    Option    anonymous    =    optionMap.get(separator).getAnonymousOption();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
369	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(separator  -  separator  +  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(separator  -  separator  +  1);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(separator  -  separator  +  1);	  final    Option    anonymous    =    optionMap.get(separator    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
370	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(separator  -  separator,  maximum);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  anonymous  =  optionMap.get(separator  -  separator,  maximum);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(separator  -  separator,  maximum);	  final    Option    anonymous    =    optionMap.get(separator    -    separator);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
371	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.get(separator  /  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.get(separator  /  1);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.get(separator  /  1);	  Option    anonymous    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
372	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.get(separator  /  separator  +  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  Option  anonymous  =  optionMap.get(separator  /  separator  +  1);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.get(separator  /  separator  +  1);	  Option    anonymous    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
373	[BUG]  [BUGGY]  buffer.append('[').append(separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append('[').append(separator);  [BUGGY]      if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	buffer.append('[').append(separator);	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
374	[BUG]  [BUGGY]  if(separator!=  null  &&!arguments  &&  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&!arguments  &&  options.contains(separator))  {  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&!arguments  &&  options.contains(separator))  {	  if(!arguments    &&    options.contains(separator))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
375	[BUG]  [BUGGY]  if(separator  ==  null)  {  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null)  {  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append(']');  }  [BUGGY]      for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null)  {  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append(']');  }	  if(separator!=    null)    {    for(int    i    =    0;    i    <    anonymous.size();    ++i)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
