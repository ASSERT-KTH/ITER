bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(expanded)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(expanded)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(expanded)  {	  if(both)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2	[BUG]  [BUGGY]  if(separator.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator.length()  ==  0)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator.length()  ==  0)  {	  if(both)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
3	[BUG]  [BUGGY]  if(separator  ==  null)  {  buffer.append(']');  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator  ==  null)  {  buffer.append(']');  }  else  {  buffer.append(']');  }  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null)  {  buffer.append(']');  }  else  {  buffer.append(']');  }	      if(separator!=    null)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
4	[BUG]  [BUGGY]  if(separator  ==  null)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator  ==  null)  {  buffer.append(']');  }  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null)  {  buffer.append(']');  }	      if(separator!=    null)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
5	[BUG]  [BUGGY]  if(separator!=  null)  {  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator!=  null)  {  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append('[');  }  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null)  {  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append('[');  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  if(separator!=  null)  {  for(int  i  =  0;  i  <  anonymous.size();  i++)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator!=  null)  {  for(int  i  =  0;  i  <  anonymous.size();  i++)  {  buffer.append('[');  }  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null)  {  for(int  i  =  0;  i  <  anonymous.size();  i++)  {  buffer.append('[');  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
7	[BUG]  [BUGGY]  if(separator!=  null)  {  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator!=  null)  {  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append(']');  }  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null)  {  for(int  i  =  0;  i  <  anonymous.size();  ++i)  {  buffer.append(']');  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  if(!anonymous  &&  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(!anonymous  &&  options.contains(separator))  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  options.contains(separator))  {	  if(!anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
9	[BUG]  [BUGGY]  if(!anonymous  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(!anonymous  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '/')  {	  if(!anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
10	[BUG]  [BUGGY]  if(!anonymous  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(!anonymous  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  buffer.length()  >  maximum  &&  buffer.charAt(buffer.length()  -  1)!=  '-')  {	  if(!anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
11	[BUG]  [BUGGY]  Option  anonymous  =  options.get(separator);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  Option  anonymous  =  options.get(separator);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  options.get(separator);	      Option    anonymous    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
12	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.get(previous);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  Option  anonymous  =  optionMap.get(previous);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.get(previous);	      Option    anonymous    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
13	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  Option  anonymous  =  optionMap.get(separator  +  1);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.get(separator  +  1);	      Option    anonymous    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
14	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(separator).getAnonymousOption();  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  optionMap.get(separator).getAnonymousOption();  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(separator).getAnonymousOption();	      final    Option    anonymous    =    optionMap.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
15	[BUG]  [BUGGY]  final  Option  anonymous  =  options.get(separator).getOption();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  options.get(separator).getOption();  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.get(separator).getOption();	      final    Option    anonymous    =    optionMap.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
16	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(parser).getOption();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  optionMap.get(parser).getOption();  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(parser).getOption();	      final    Option    anonymous    =    optionMap.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
17	[BUG]  [BUGGY]  if(!arguments  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(!arguments  &&  buffer.length()  >  maximum)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!arguments  &&  buffer.length()  >  maximum)  {	  if(!arguments)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
18	[BUG]  [BUGGY]  if(!arguments  &&  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(!arguments  &&  options.contains(separator))  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!arguments  &&  options.contains(separator))  {	  if(!arguments)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator!=  null)  {  buffer.append( "] ");  }  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null)  {  buffer.append( "] ");  }	      if(separator!=    null)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
20	[BUG]  [BUGGY]  if(separator  ==  null)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator  ==  null)  {  buffer.append( "] ");  }  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null)  {  buffer.append( "] ");  }	      if(separator!=    null)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
21	[BUG]  [BUGGY]  if(separator  ==  null)  {  buffer.append('[');  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator  ==  null)  {  buffer.append('[');  }  else  {  buffer.append(']');  }  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null)  {  buffer.append('[');  }  else  {  buffer.append(']');  }	      if(separator!=    null)    {    buffer.append('[');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
22	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator!=  null)  {  buffer.append('[');  }  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null)  {  buffer.append('[');  }	      if(separator!=    null)    {    buffer.append('[');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
23	[BUG]  [BUGGY]  if(separator  ==  null)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator  ==  null)  {  buffer.append('[');  }  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null)  {  buffer.append('[');  }	      if(separator!=    null)    {    buffer.append('[');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
24	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getOption(arg);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  option.getOption(arg);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getOption(arg);	      final    Option    anonymous    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
25	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getOption(comp);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  option.getOption(comp);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getOption(comp);	      final    Option    anonymous    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
26	[BUG]  [BUGGY]  final  Option  anonymous  =  options.getOption(separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  options.getOption(separator);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.getOption(separator);	      final    Option    anonymous    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
27	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  option.getOption(separator,  buffer);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getOption(separator,  buffer);	      final    Option    anonymous    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  final  Option  anonymous  =  options.get(separator);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  options.get(separator);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  options.get(separator);	      final    Option    anonymous    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
29	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  optionMap.get(separator,  buffer);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(separator,  buffer);	      final    Option    anonymous    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
30	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  optionMap.get(separator  +  1);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(separator  +  1);	      final    Option    anonymous    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
31	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getAnonymousOption();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  option.getAnonymousOption();  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getAnonymousOption();	      final    Option    anonymous    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
32	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getArgument();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  option.getArgument();  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getArgument();	      final    Option    anonymous    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
33	[BUG]  [BUGGY]  Option  anonymous  =  option.getOption();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  Option  anonymous  =  option.getOption();  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  option.getOption();	      final    Option    anonymous    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
34	[BUG]  [BUGGY]  if(arguments  ||  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(arguments  ||  buffer.length()  >  maximum)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(arguments  ||  buffer.length()  >  maximum)  {	  if(arguments    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
35	[BUG]  [BUGGY]  if(array  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(array  &&  buffer.length()  >  maximum)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(array  &&  buffer.length()  >  maximum)  {	  if(arguments    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
36	[BUG]  [BUGGY]  if(exceptional  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(exceptional  &&  buffer.length()  >  maximum)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(exceptional  &&  buffer.length()  >  maximum)  {	  if(arguments    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
37	[BUG]  [BUGGY]  if(maximum  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(maximum  &&  buffer.length()  >  maximum)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(maximum  &&  buffer.length()  >  maximum)  {	  if(arguments    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
38	[BUG]  [BUGGY]  if(!separator)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(!separator)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!separator)  {	  if(separator)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
39	[BUG]  [BUGGY]  if(separator  ||  unique)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator  ||  unique)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ||  unique)  {	  if(separator)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
40	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  optionMap.getOption(arg);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(arg);	      final    Option    anonymous    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
41	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  optionMap.getOption(separator,  buffer);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(separator,  buffer);	      final    Option    anonymous    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
42	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  optionMap.getOption(prefix);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(prefix);	      final    Option    anonymous    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
43	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  optionMap.getOption(comp);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(comp);	      final    Option    anonymous    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
44	[BUG]  [BUGGY]  if(separator  ==  null)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator  ==  null)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ==  null)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }	      if(separator!=    null)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
45	[BUG]  [BUGGY]  if(anonymous  &&  options.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(anonymous  &&  options.contains(separator))  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  options.contains(separator))  {	  if(anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
46	[BUG]  [BUGGY]  if(anonymous  &&  buffer.length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(anonymous  &&  buffer.length()  >  maximum)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  buffer.length()  >  maximum)  {	  if(anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
47	[BUG]  [BUGGY]  if(anonymous  &&  options.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(anonymous  &&  options.size()  >  maximum)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  options.size()  >  maximum)  {	  if(anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
48	[BUG]  [BUGGY]  if(separator  ||  anonymous.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator  ||  anonymous.isEmpty())  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ||  anonymous.isEmpty())  {	  if(separator)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
49	[BUG]  [BUGGY]  if(this.separator)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(this.separator)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(this.separator)  {	  if(separator)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
50	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(partial).getOption();  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  optionMap.get(partial).getOption();  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(partial).getOption();	      final    Option    anonymous    =    optionMap.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
51	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(separator,  outer);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  optionMap.getOption(separator,  outer);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(separator,  outer);	      final    Option    anonymous    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
52	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  optionMap.get(option);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(option);	      final    Option    anonymous    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
53	[BUG]  [BUGGY]  if(arguments  &&  buffer.length()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(arguments  &&  buffer.length()  >  minimum)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(arguments  &&  buffer.length()  >  minimum)  {	  if(arguments    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
54	[BUG]  [BUGGY]  if(arguments  &&  buffer.length()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(arguments  &&  buffer.length()  ==  maximum)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(arguments  &&  buffer.length()  ==  maximum)  {	  if(arguments    &&    buffer.length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
55	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append( "[ ");  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator!=  null)  {  buffer.append( "[ ");  }  else  {  buffer.append(']');  }  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null)  {  buffer.append( "[ ");  }  else  {  buffer.append(']');  }	      if(separator!=    null)    {    buffer.append('[');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
56	[BUG]  [BUGGY]  final  Iterator  <  Option>  anonymous  =  options.iterator();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Iterator  <  Option>  anonymous  =  options.iterator();  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Iterator  <  Option>  anonymous  =  options.iterator();	      if(separator!=    null)    {    buffer.append('[');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
57	[BUG]  [BUGGY]  if(anonymous  &&  anonymous)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(anonymous  &&  anonymous)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  anonymous)  {	  if(anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
58	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  optionMap.getOption();  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption();	      final    Option    anonymous    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
59	[BUG]  [BUGGY]  buffer.append( "] ");  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  buffer.append( "] ");  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	buffer.append( "] ");	      if(separator!=    null)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
60	[BUG]  [BUGGY]  final  Iterator  <  Option>  anonymous  =  options.values().iterator();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Iterator  <  Option>  anonymous  =  options.values().iterator();  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Iterator  <  Option>  anonymous  =  options.values().iterator();	      if(separator!=    null)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
61	[BUG]  [BUGGY]  buffer.append(separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  buffer.append(separator);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	buffer.append(separator);	      if(separator!=    null)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
62	[BUG]  [BUGGY]  if(!anonymous  &&  anonymous.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(!anonymous  &&  anonymous.isEmpty())  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  anonymous.isEmpty())  {	  if(!anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
63	[BUG]  [BUGGY]  if(!anonymous  &&  options.hasOption(separator))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(!anonymous  &&  options.hasOption(separator))  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  options.hasOption(separator))  {	  if(!anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
64	[BUG]  [BUGGY]  buffer.append(']');  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  buffer.append(']');  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	buffer.append(']');	      if(separator!=    null)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
65	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  option.getOption(prefix);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getOption(prefix);	      final    Option    anonymous    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
66	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator!=  null)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null)  {  buffer.append( "] ");  }  else  {  buffer.append(']');  }	      if(separator!=    null)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
67	[BUG]  [BUGGY]  if(!both)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(!both)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!both)  {	  if(both)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
68	[BUG]  [BUGGY]  if(both  &&  options.hasOption(separator))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(both  &&  options.hasOption(separator))  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(both  &&  options.hasOption(separator))  {	  if(both)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
69	[BUG]  [BUGGY]  if(!arguments  &&  anonymous.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(!arguments  &&  anonymous.contains(separator))  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!arguments  &&  anonymous.contains(separator))  {	  if(!arguments)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
70	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.get(separator).getOption();  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  Option  anonymous  =  optionMap.get(separator).getOption();  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.get(separator).getOption();	      final    Option    anonymous    =    optionMap.get(separator).getOption();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
71	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append('[');  }  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append('[');  }	      if(separator!=    null)    {    buffer.append('[');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
72	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append('[');  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append('[');  }  else  {  buffer.append(']');  }  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append('[');  }  else  {  buffer.append(']');  }	      if(separator!=    null)    {    buffer.append('[');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
73	[BUG]  [BUGGY]  if(anonymous  &&  anonymous.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(anonymous  &&  anonymous.isEmpty())  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  anonymous.isEmpty())  {	  if(anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
74	[BUG]  [BUGGY]  if(anonymous  &&  anonymous.equals(separator))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(anonymous  &&  anonymous.equals(separator))  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  anonymous.equals(separator))  {	  if(anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
75	[BUG]  [BUGGY]  if(anonymous  &&  anonymous.size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(anonymous  &&  anonymous.size()  >  maximum)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(anonymous  &&  anonymous.size()  >  maximum)  {	  if(anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
76	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.getOption(separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  Option  anonymous  =  optionMap.getOption(separator);  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.getOption(separator);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
77	[BUG]  [BUGGY]  Option  anonymous  =  option.getOption(separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  Option  anonymous  =  option.getOption(separator);  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  option.getOption(separator);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
78	[BUG]  [BUGGY]  buffer.append('[');  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  buffer.append('[');  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	buffer.append('[');	      if(separator!=    null)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
79	[BUG]  [BUGGY]  parent.append(comp,  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  parent.append(comp,  separator);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	parent.append(comp,  separator);	      if(separator!=    null)    {    buffer.append('[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
80	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append(']');  }  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append(']');  }	      if(separator!=    null)    {    buffer.append(']');    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
81	[BUG]  [BUGGY]  if(!outer)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(!outer)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!outer)  {	  if(!arguments)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
82	[BUG]  [BUGGY]  if(separator  ||  separator)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator  ||  separator)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator  ||  separator)  {	  if(separator)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
83	[BUG]  [BUGGY]  final  Option  anonymous  =  option.getOption(this,  separator);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  option.getOption(this,  separator);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  option.getOption(this,  separator);	      final    Option    anonymous    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
84	[BUG]  [BUGGY]  Option  anonymous  =  optionMap.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  Option  anonymous  =  optionMap.get(separator  -  1);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionMap.get(separator  -  1);	      Option    anonymous    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
85	[BUG]  [BUGGY]  Option  anonymous  =  optionsMap.get(separator);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  Option  anonymous  =  optionsMap.get(separator);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	Option  anonymous  =  optionsMap.get(separator);	      Option    anonymous    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
86	[BUG]  [BUGGY]  if(separator!=  null)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator!=  null)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null)  {	  if(both)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
87	[BUG]  [BUGGY]  if(this.anonymous)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(this.anonymous)  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(this.anonymous)  {	  if(both)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
88	[BUG]  [BUGGY]  if(!anonymous  &&  anonymous.contains(separator))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(!anonymous  &&  anonymous.contains(separator))  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  anonymous.contains(separator))  {	  if(!anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
89	[BUG]  [BUGGY]  if(!anonymous  &&  anonymous.equals(separator))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(!anonymous  &&  anonymous.equals(separator))  {  [BUGGY]    for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(!anonymous  &&  anonymous.equals(separator))  {	  if(!anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
90	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  optionMap.getOption(separator,  comp);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(separator,  comp);	      final    Option    anonymous    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
91	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.getOption(separator,  separator);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  optionMap.getOption(separator,  separator);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.getOption(separator,  separator);	      final    Option    anonymous    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
92	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  optionMap.get(separator  -  1);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(separator  -  1);	      final    Option    anonymous    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
93	[BUG]  [BUGGY]  final  Option  anonymous  =  optionMap.get(separator  -  separator);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  final  Option  anonymous  =  optionMap.get(separator  -  separator);  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	final  Option  anonymous  =  optionMap.get(separator  -  separator);	      final    Option    anonymous    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
94	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    }  if  (both)  {  buffer.append(')');  }  if  (optional  &&  outer)  {  buffer.append(']');  }    [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "] ");  }  [BUGGY]    if  (arguments)  {  for  (final  Iterator  i  =  anonymous.iterator();  i.hasNext();)  {  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	378	378	7	replace	if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "] ");  }	      if(separator!=    null)    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
