bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  parent.append(separator).append('[',  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(separator).append('[',  buffer);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.append(separator).append('[',  buffer);	  parent.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
2	[BUG]  [BUGGY]  parent.append(previous).append('[');  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(previous).append('[');  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.append(previous).append('[');	  parent.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
3	[BUG]  [BUGGY]  final  Option  option  =  i.getOption(separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  option  =  i.getOption(separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	final  Option  option  =  i.getOption(separator);	  final    Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
4	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  option  =  options.getOption(separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	final  Option  option  =  options.getOption(separator);	  final    Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
5	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  option  =  optionMap.getOption(separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	final  Option  option  =  optionMap.getOption(separator);	  final    Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
6	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(this,  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  option  =  option.getOption(this,  separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	final  Option  option  =  option.getOption(this,  separator);	  final    Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
7	[BUG]  [BUGGY]  if(i.hasNext())  {  buffer.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(i.hasNext())  {  buffer.append( "[ ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(i.hasNext())  {  buffer.append( "[ ");  }	  if(i.hasNext())    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  append(buffer,  i.next());  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  append(buffer,  i.next());  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	append(buffer,  i.next());	  if(i.hasNext())    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  buffer.append(separator).append('['  +  i.next());  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append(separator).append('['  +  i.next());  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append(separator).append('['  +  i.next());	  buffer.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
10	[BUG]  [BUGGY]  buffer.append('[').append(optional);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append('[').append(optional);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append('[').append(optional);	  buffer.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
11	[BUG]  [BUGGY]  buffer.append(separator).append( "[ ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append(separator).append( "[ ");  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append(separator).append( "[ ");	  buffer.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
12	[BUG]  [BUGGY]  Option  option  =  option.appendOption(buffer,  childSettings,  helpSettingsCopy);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(buffer,  childSettings,  helpSettingsCopy);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(buffer,  childSettings,  helpSettingsCopy);	  Option    option    =    option.appendOption(buffer,    helpSettingsCopy,    outer);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
13	[BUG]  [BUGGY]  option  =  option.appendOption(buffer,  helpSettingsCopy,  comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  option  =  option.appendOption(buffer,  helpSettingsCopy,  comp);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	option  =  option.appendOption(buffer,  helpSettingsCopy,  comp);	  Option    option    =    option.appendOption(buffer,    helpSettingsCopy,    outer);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
14	[BUG]  [BUGGY]  Option  option  =  option.appendOption(buffer,  childSettings,  outer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(buffer,  childSettings,  outer);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(buffer,  childSettings,  outer);	  Option    option    =    option.appendOption(buffer,    helpSettingsCopy,    outer);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
15	[BUG]  [BUGGY]  parent  ==  null)  {  buffer.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent  ==  null)  {  buffer.append( "[ ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent  ==  null)  {  buffer.append( "[ ");  }	  parent    ==    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
16	[BUG]  [BUGGY]  if(optional)  {  if(separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional)  {  if(separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(separator);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional)  {  if(separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(separator);  }	  if(separator!=    null)    {    if(separator.equals(   "       "))    {    buffer.append('[');    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
17	[BUG]  [BUGGY]  if(i.hasNext())  {  buffer.append( "[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(i.hasNext())  {  buffer.append( "[');  }  else  {  buffer.append(optional);  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(i.hasNext())  {  buffer.append( "[');  }  else  {  buffer.append(optional);  }	  if(i.hasNext())    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
18	[BUG]  [BUGGY]  Option  option  =  option.getOption(prefixes,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.getOption(prefixes,  buffer);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.getOption(prefixes,  buffer);	  Option    option    =    option.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
19	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefixes);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  options.getOption(prefixes);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  options.getOption(prefixes);	  Option    option    =    option.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
20	[BUG]  [BUGGY]  Option  option  =  i.getOption(prefixes);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  i.getOption(prefixes);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  i.getOption(prefixes);	  Option    option    =    option.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
21	[BUG]  [BUGGY]  Option  option  =  option.appendOption(buffer,  childSettings,  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(buffer,  childSettings,  separator);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(buffer,  childSettings,  separator);	  Option    option    =    option.appendOption(buffer,    helpSettingsCopy,    separator);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
22	[BUG]  [BUGGY]  Option  option  =  option.appendOption(buffer,  separator,  helpSettingsCopy);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(buffer,  separator,  helpSettingsCopy);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(buffer,  separator,  helpSettingsCopy);	  Option    option    =    option.appendOption(buffer,    helpSettingsCopy,    separator);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
23	[BUG]  [BUGGY]  Option  option  =  option.appendOption(buffer,  parent,  separator);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(buffer,  parent,  separator);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(buffer,  parent,  separator);	  Option    option    =    option.appendOption(buffer,    helpSettingsCopy,    separator);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
24	[BUG]  [BUGGY]  parent!=  null  &&  option.appendUsage(buffer,  helpSettingsCopy,  comp);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent!=  null  &&  option.appendUsage(buffer,  helpSettingsCopy,  comp);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent!=  null  &&  option.appendUsage(buffer,  helpSettingsCopy,  comp);	  parent!=    null    &&    option.appendUsage(buffer,    helpSettingsCopy,    separator);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
25	[BUG]  [BUGGY]  parent!=  null  &&  option.appendUsage(buffer,  separator,  childSettings);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent!=  null  &&  option.appendUsage(buffer,  separator,  childSettings);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent!=  null  &&  option.appendUsage(buffer,  separator,  childSettings);	  parent!=    null    &&    option.appendUsage(buffer,    helpSettingsCopy,    separator);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
26	[BUG]  [BUGGY]  if(i.hasNext())  {  buffer.append('n');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(i.hasNext())  {  buffer.append('n');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(i.hasNext())  {  buffer.append('n');  }	  if(i.hasNext())    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
27	[BUG]  [BUGGY]  return  buffer.toString()  +  separator;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  return  buffer.toString()  +  separator;  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	return  buffer.toString()  +  separator;	  return    buffer.toString();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
28	[BUG]  [BUGGY]  return  buffer.toString(),  separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  return  buffer.toString(),  separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	return  buffer.toString(),  separator);	  return    buffer.toString();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
29	[BUG]  [BUGGY]  return  buffer.toString(),  separator;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  return  buffer.toString(),  separator;  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	return  buffer.toString(),  separator;	  return    buffer.toString();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
30	[BUG]  [BUGGY]  Option  option  =  option.appendOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(separator,  buffer);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(separator,  buffer);	  Option    option    =    option.appendOption(buffer,    separator);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
31	[BUG]  [BUGGY]  Option  option  =  option.appendOption(buffer,  separator,  comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(buffer,  separator,  comp);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(buffer,  separator,  comp);	  Option    option    =    option.appendOption(buffer,    separator);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
32	[BUG]  [BUGGY]  Option  option  =  option.appendOption(prefixes,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(prefixes,  separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(prefixes,  separator);	  Option    option    =    option.appendOption(buffer,    separator);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
33	[BUG]  [BUGGY]  Option  option  =  option.appendOption(comp,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(comp,  separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(comp,  separator);	  Option    option    =    option.appendOption(buffer,    separator);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
34	[BUG]  [BUGGY]  buffer.append(separator).append(']');  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append(separator).append(']');  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append(separator).append(']');	  buffer.append(separator).append(   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
35	[BUG]  [BUGGY]  buffer.append(prefix).append( "] ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append(prefix).append( "] ");  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append(prefix).append( "] ");	  buffer.append(separator).append(   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
36	[BUG]  [BUGGY]  parent.append(optional,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(optional,  buffer);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.append(optional,  buffer);	  parent.append(optional,    separator);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
37	[BUG]  [BUGGY]  parent.append(separator,  option);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(separator,  option);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.append(separator,  option);	  parent.append(optional,    separator);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
38	[BUG]  [BUGGY]  parent.append(parent,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(parent,  separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.append(parent,  separator);	  parent.append(optional,    separator);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
39	[BUG]  [BUGGY]  parent.append(buffer,  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(buffer,  separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.append(buffer,  separator);	  parent.append(optional,    separator);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
40	[BUG]  [BUGGY]  if(i.hasNext())  {  i.remove();  }  else  {  buffer.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(i.hasNext())  {  i.remove();  }  else  {  buffer.append( ", ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(i.hasNext())  {  i.remove();  }  else  {  buffer.append( ", ");  }	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
41	[BUG]  [BUGGY]  if(i.hasNext())  {  i.remove();  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(i.hasNext())  {  i.remove();  }  else  {  buffer.append(separator);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(i.hasNext())  {  i.remove();  }  else  {  buffer.append(separator);  }	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
42	[BUG]  [BUGGY]  if(i.hasNext())  {  i.remove();  }  else  {  buffer.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(i.hasNext())  {  i.remove();  }  else  {  buffer.append( "n ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(i.hasNext())  {  i.remove();  }  else  {  buffer.append( "n ");  }	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
43	[BUG]  [BUGGY]  optional  ||  buffer.append( "[] ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  optional  ||  buffer.append( "[] ");  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	optional  ||  buffer.append( "[] ");	  optional    ||    buffer.append(   "[   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
44	[BUG]  [BUGGY]  option  ||  buffer.append( "] ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  option  ||  buffer.append( "] ");  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	option  ||  buffer.append( "] ");	  optional    ||    buffer.append(   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
45	[BUG]  [BUGGY]  if(optional)  {  if(i.hasNext())  {  buffer.append(option);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional)  {  if(i.hasNext())  {  buffer.append(option);  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional)  {  if(i.hasNext())  {  buffer.append(option);  }	  if(i.hasNext())    {    buffer.append(option);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
46	[BUG]  [BUGGY]  if(i.hasNext())  {  buffer.append(option);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(i.hasNext())  {  buffer.append(option);  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(i.hasNext())  {  buffer.append(option);  }	  if(i.hasNext())    {    buffer.append(option);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
47	[BUG]  [BUGGY]  if(i.hasNext())  {  buffer.append(option);  }  else  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(i.hasNext())  {  buffer.append(option);  }  else  {  buffer.append('[');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(i.hasNext())  {  buffer.append(option);  }  else  {  buffer.append('[');  }	  if(i.hasNext())    {    buffer.append(option);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
48	[BUG]  [BUGGY]  if(separator  ==  null)  {  buffer.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null)  {  buffer.append( "[ ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator  ==  null)  {  buffer.append( "[ ");  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
49	[BUG]  [BUGGY]  if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append( "[ ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append( "[ ");  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
50	[BUG]  [BUGGY]  Option  option  =  option.appendUsage(buffer,  separator,  comp);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendUsage(buffer,  separator,  comp);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendUsage(buffer,  separator,  comp);	  Option    option    =    option.appendUsage(buffer,    helpSettingsCopy,    comp);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
51	[BUG]  [BUGGY]  Option  option  =  option.appendUsage(buffer,  childSettings,  comp);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendUsage(buffer,  childSettings,  comp);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendUsage(buffer,  childSettings,  comp);	  Option    option    =    option.appendUsage(buffer,    helpSettingsCopy,    comp);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
52	[BUG]  [BUGGY]  Option  option  =  option.appendUsage(buffer,  comp,  helpSettings);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendUsage(buffer,  comp,  helpSettings);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendUsage(buffer,  comp,  helpSettings);	  Option    option    =    option.appendUsage(buffer,    helpSettingsCopy,    comp);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
53	[BUG]  [BUGGY]  buffer.append( "[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append( "[');  }  else  {  buffer.append( "] ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append( "[');  }  else  {  buffer.append( "] ");  }	  if(i.hasNext())    {    buffer.append(   "[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
54	[BUG]  [BUGGY]  if(i.hasNext())  {  buffer.append( "[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(i.hasNext())  {  buffer.append( "[');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(i.hasNext())  {  buffer.append( "[');  }	  if(i.hasNext())    {    buffer.append(   "[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
55	[BUG]  [BUGGY]  parent.append(i.next());  buffer.append( "[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(i.next());  buffer.append( "[');  }  else  {  buffer.append( "] ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.append(i.next());  buffer.append( "[');  }  else  {  buffer.append( "] ");  }	  if(i.hasNext())    {    buffer.append(   "[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
56	[BUG]  [BUGGY]  if(!outer)  {  parent.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(!outer)  {  parent.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(!outer)  {  parent.append('[');  }  else  {  buffer.append(optional);  }	  parent.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
57	[BUG]  [BUGGY]  if(outer)  {  parent.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(outer)  {  parent.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(outer)  {  parent.append('[');  }  else  {  buffer.append(optional);  }	  parent.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
58	[BUG]  [BUGGY]  if(!outer)  {  parent.append('[');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(!outer)  {  parent.append('[');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(!outer)  {  parent.append('[');  }	  parent.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
59	[BUG]  [BUGGY]  if(outer)  {  parent.append('[');  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(outer)  {  parent.append('[');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(outer)  {  parent.append('[');  }	  parent.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
60	[BUG]  [BUGGY]  if(separator  ==  null)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null)  {  buffer.append('[');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator  ==  null)  {  buffer.append('[');  }	  if(separator!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
61	[BUG]  [BUGGY]  if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append('[');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append('[');  }	  if(separator!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
62	[BUG]  [BUGGY]  if(i.hasNext())  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(i.hasNext())  {  buffer.append( "] ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(i.hasNext())  {  buffer.append( "] ");  }	  if(i.hasNext())    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
63	[BUG]  [BUGGY]  Option  option  =  option.appendUsage(buffer,  childSettings,  options);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendUsage(buffer,  childSettings,  options);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendUsage(buffer,  childSettings,  options);	  Option    option    =    option.appendUsage(buffer,    helpSettingsCopy,    options);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
64	[BUG]  [BUGGY]  option  =  option.appendUsage(buffer,  helpSettingsCopy,  comp);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  option  =  option.appendUsage(buffer,  helpSettingsCopy,  comp);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	option  =  option.appendUsage(buffer,  helpSettingsCopy,  comp);	  Option    option    =    option.appendUsage(buffer,    helpSettingsCopy,    options);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
65	[BUG]  [BUGGY]  Option  option  =  options.appendUsage(buffer,  helpSettingsCopy,  option);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  options.appendUsage(buffer,  helpSettingsCopy,  option);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  options.appendUsage(buffer,  helpSettingsCopy,  option);	  Option    option    =    option.appendUsage(buffer,    helpSettingsCopy,    options);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
66	[BUG]  [BUGGY]  if(!outer)  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(!outer)  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(!outer)  {  buffer.append('[');  }  else  {  buffer.append(optional);  }	  buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
67	[BUG]  [BUGGY]  if(!outer)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(!outer)  {  buffer.append('[');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(!outer)  {  buffer.append('[');  }	  buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
68	[BUG]  [BUGGY]  if(optional)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional)  {  buffer.append('[');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional)  {  buffer.append('[');  }	  buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
69	[BUG]  [BUGGY]  if(optional)  {  if(separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional)  {  if(separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional)  {  if(separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }	  if(separator!=    null)    {    if(separator.equals(   "       "))    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
70	[BUG]  [BUGGY]  if(separator  ==  null)  {  if(separator.equals( " "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null)  {  if(separator.equals( " "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator  ==  null)  {  if(separator.equals( " "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }	  if(separator!=    null)    {    if(separator.equals(   "       "))    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
71	[BUG]  [BUGGY]  Option  option  =  options.getOption();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  options.getOption();  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  options.getOption();	  Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
72	[BUG]  [BUGGY]  Option  option  =  i.getOption();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  i.getOption();  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  i.getOption();	  Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
73	[BUG]  [BUGGY]  Option  option  =  option.getOption(),  buffer);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.getOption(),  buffer);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.getOption(),  buffer);	  Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
74	[BUG]  [BUGGY]  Option  option  =  options.appendUsage(buffer,  HelpSettingsCopy,  option);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  options.appendUsage(buffer,  HelpSettingsCopy,  option);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  options.appendUsage(buffer,  HelpSettingsCopy,  option);	  Option    option    =    option.appendUsage(buffer,    HelpSettingsCopy,    options);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
75	[BUG]  [BUGGY]  option  =  option.appendUsage(buffer,  helpSettingsCopy,  options);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  option  =  option.appendUsage(buffer,  helpSettingsCopy,  options);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	option  =  option.appendUsage(buffer,  helpSettingsCopy,  options);	  Option    option    =    option.appendUsage(buffer,    HelpSettingsCopy,    options);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
76	[BUG]  [BUGGY]  if(!outer)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(!outer)  {  buffer.append(']');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(!outer)  {  buffer.append(']');  }	  buffer.append(']');    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
77	[BUG]  [BUGGY]  if(!outer)  {  buffer.append(']');  }  else  {  buffer.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(!outer)  {  buffer.append(']');  }  else  {  buffer.append( "n ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(!outer)  {  buffer.append(']');  }  else  {  buffer.append( "n ");  }	  buffer.append(']');    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
78	[BUG]  [BUGGY]  parent.append(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(separator,  buffer);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.append(separator,  buffer);	  parent.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
79	[BUG]  [BUGGY]  parent.append(this,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(this,  separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.append(this,  separator);	  parent.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
80	[BUG]  [BUGGY]  Option  option  =  option.appendUsage(buffer,  childSettings,  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendUsage(buffer,  childSettings,  separator);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendUsage(buffer,  childSettings,  separator);	  Option    option    =    option.appendUsage(buffer,    helpSettingsCopy,    separator);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
81	[BUG]  [BUGGY]  Option  option  =  option.appendUsage(buffer,  separator,  helpSettingsCopy);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendUsage(buffer,  separator,  helpSettingsCopy);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendUsage(buffer,  separator,  helpSettingsCopy);	  Option    option    =    option.appendUsage(buffer,    helpSettingsCopy,    separator);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
82	[BUG]  [BUGGY]  Option  option  =  option.appendOption(buffer,  childSettings,  options);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(buffer,  childSettings,  options);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(buffer,  childSettings,  options);	  Option    option    =    option.appendOption(buffer,    helpSettingsCopy,    options);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
83	[BUG]  [BUGGY]  Option  option  =  options.appendOption(buffer,  helpSettingsCopy,  option);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  options.appendOption(buffer,  helpSettingsCopy,  option);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  options.appendOption(buffer,  helpSettingsCopy,  option);	  Option    option    =    option.appendOption(buffer,    helpSettingsCopy,    options);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
84	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  options.getOption(prefix);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  options.getOption(prefix);	  Option    option    =    options.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
85	[BUG]  [BUGGY]  Option  option  =  options.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  options.getOption(separator,  buffer);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  options.getOption(separator,  buffer);	  Option    option    =    options.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
86	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  options.getOption(this,  separator);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  options.getOption(this,  separator);	  Option    option    =    options.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
87	[BUG]  [BUGGY]  Option  option  =  options.getOption(i);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  options.getOption(i);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  options.getOption(i);	  Option    option    =    options.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
88	[BUG]  [BUGGY]  parent.appendOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.appendOption(separator,  buffer);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.appendOption(separator,  buffer);	  parent.appendOption(optional,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
89	[BUG]  [BUGGY]  parent.appendOption(optional,  buffer,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.appendOption(optional,  buffer,  separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.appendOption(optional,  buffer,  separator);	  parent.appendOption(optional,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
90	[BUG]  [BUGGY]  parent.appendOption(this,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.appendOption(this,  buffer);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.appendOption(this,  buffer);	  parent.appendOption(optional,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
91	[BUG]  [BUGGY]  appendOption(buffer,  option);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  appendOption(buffer,  option);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	appendOption(buffer,  option);	  parent.appendOption(optional,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
92	[BUG]  [BUGGY]  Option  option  =  option.getOption(i.next(),  buffer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.getOption(i.next(),  buffer);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.getOption(i.next(),  buffer);	  Option    option    =    option.getOption(i.next());    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
93	[BUG]  [BUGGY]  Option  option  =  options.getOption(i.next());  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  options.getOption(i.next());  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  options.getOption(i.next());	  Option    option    =    option.getOption(i.next());    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
94	[BUG]  [BUGGY]  Option  option  =  option.getOption(i.next(),  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.getOption(i.next(),  separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.getOption(i.next(),  separator);	  Option    option    =    option.getOption(i.next());    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
95	[BUG]  [BUGGY]  ||  separator.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  ||  separator.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	||  separator.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }	  if(separator    ==    null    ||    separator.equals(optional))    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
96	[BUG]  [BUGGY]  parent  ==  null  &&  parent.length()  >  0)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent  ==  null  &&  parent.length()  >  0)  {  buffer.append('[');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent  ==  null  &&  parent.length()  >  0)  {  buffer.append('[');  }	  parent    ==    null    &&    parent!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
97	[BUG]  [BUGGY]  parent!=  null  &&  parent.length()  >  0)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent!=  null  &&  parent.length()  >  0)  {  buffer.append('[');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent!=  null  &&  parent.length()  >  0)  {  buffer.append('[');  }	  parent    ==    null    &&    parent!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
98	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&  separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator!=  null  &&  separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }	  if(separator!=    null    ||    separator.equals(   "       "))    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
99	[BUG]  [BUGGY]  ||  separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  ||  separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	||  separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }	  if(separator!=    null    ||    separator.equals(   "       "))    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
100	[BUG]  [BUGGY]  if(separator  ==  null  &&  separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null  &&  separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator  ==  null  &&  separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }	  if(separator!=    null    ||    separator.equals(   "       "))    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
101	[BUG]  [BUGGY]  buffer.append('['  +  separator);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append('['  +  separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append('['  +  separator);	  buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
102	[BUG]  [BUGGY]  Option  option  =  option.appendOption(comp);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(comp);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(comp);	  Option    option    =    option.appendOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
103	[BUG]  [BUGGY]  Option  option  =  options.appendOption(separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  options.appendOption(separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  options.appendOption(separator);	  Option    option    =    option.appendOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
104	[BUG]  [BUGGY]  Option  option  =  option.appendOption(this,  separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(this,  separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(this,  separator);	  Option    option    =    option.appendOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
105	[BUG]  [BUGGY]  if(optional)  {  if(outer)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional)  {  if(outer)  {  buffer.append('[');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional)  {  if(outer)  {  buffer.append('[');  }	  if(optional)    {    if(separator!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
106	[BUG]  [BUGGY]  parent  ==  null  ||  separator  ==  null)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent  ==  null  ||  separator  ==  null)  {  buffer.append('[');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent  ==  null  ||  separator  ==  null)  {  buffer.append('[');  }	  if(optional)    {    if(separator    ==    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
107	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.equals(optional))  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&  separator.equals(optional))  {  buffer.append('[');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator!=  null  &&  separator.equals(optional))  {  buffer.append('[');  }	  if(separator!=    null    ||    separator.equals(optional))    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
108	[BUG]  [BUGGY]  buffer.append( ",n ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append( ",n ");  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append( ",n ");	  buffer.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
109	[BUG]  [BUGGY]  if(separator!=  null)  {  parent.append(separator);  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null)  {  parent.append(separator);  buffer.append('[');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator!=  null)  {  parent.append(separator);  buffer.append('[');  }	  parent.append(separator);    buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
110	[BUG]  [BUGGY]  if(optional)  {  parent.append(separator);  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional)  {  parent.append(separator);  buffer.append('[');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional)  {  parent.append(separator);  buffer.append('[');  }	  parent.append(separator);    buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
111	[BUG]  [BUGGY]  if(separator  ==  null)  {  parent.append(separator);  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null)  {  parent.append(separator);  buffer.append('[');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator  ==  null)  {  parent.append(separator);  buffer.append('[');  }	  parent.append(separator);    buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
112	[BUG]  [BUGGY]  if(separator!=  null)  {  parent.append(separator);  buffer.append('[');  }  else  {  buffer.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null)  {  parent.append(separator);  buffer.append('[');  }  else  {  buffer.append( ", ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator!=  null)  {  parent.append(separator);  buffer.append('[');  }  else  {  buffer.append( ", ");  }	  parent.append(separator);    buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
113	[BUG]  [BUGGY]  parent.append(separator,  comp);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(separator,  comp);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.append(separator,  comp);	  parent.append(comp,    separator);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
114	[BUG]  [BUGGY]  parent.append(comp,  separator,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(comp,  separator,  buffer);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.append(comp,  separator,  buffer);	  parent.append(comp,    separator);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
115	[BUG]  [BUGGY]  if(separator!=  null  ||  separator.equals(optional))  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  ||  separator.equals(optional))  {  buffer.append('[');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator!=  null  ||  separator.equals(optional))  {  buffer.append('[');  }	  if(separator!=    null    &&    separator.equals(optional))    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
116	[BUG]  [BUGGY]  Option  option  =  option.appendOption(comp,  helpSettingsCopy);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(comp,  helpSettingsCopy);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(comp,  helpSettingsCopy);	  Option    option    =    option.appendOption(buffer,    helpSettingsCopy,    comp);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
117	[BUG]  [BUGGY]  Option  option  =  option.appendOption(separator,  buffer,  helpSettingsCopy);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(separator,  buffer,  helpSettingsCopy);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(separator,  buffer,  helpSettingsCopy);	  Option    option    =    option.appendOption(buffer,    helpSettingsCopy,    comp);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
118	[BUG]  [BUGGY]  Option  option  =  option.appendOption(buffer,  childSettings,  comp);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(buffer,  childSettings,  comp);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(buffer,  childSettings,  comp);	  Option    option    =    option.appendOption(buffer,    helpSettingsCopy,    comp);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
119	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  buffer.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  buffer.append( "[ ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent!=  null  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  buffer.append( "[ ");  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
120	[BUG]  [BUGGY]  buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
121	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent!=  null  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
122	[BUG]  [BUGGY]  if(!outer)  {  buffer.append('  ');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(!outer)  {  buffer.append('  ');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(!outer)  {  buffer.append('  ');  }	  buffer.append('    ');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
123	[BUG]  [BUGGY]  if(!outer)  {  buffer.append('  ');  }  else  {  buffer.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(!outer)  {  buffer.append('  ');  }  else  {  buffer.append( ", ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(!outer)  {  buffer.append('  ');  }  else  {  buffer.append( ", ");  }	  buffer.append('    ');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
124	[BUG]  [BUGGY]  Option  option  =  i.getOption(separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  i.getOption(separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  i.getOption(separator);	  Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
125	[BUG]  [BUGGY]  Option  option  =  option.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.getOption(prefix);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.getOption(prefix);	  Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
126	[BUG]  [BUGGY]  if(optional)  {  if(separator.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional)  {  if(separator.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional)  {  if(separator.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }	  if(separator!=    null)    {    if(separator.equals(optional))    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
127	[BUG]  [BUGGY]  if(optional)  {  if(separator.equals(optional))  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional)  {  if(separator.equals(optional))  {  buffer.append('[');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional)  {  if(separator.equals(optional))  {  buffer.append('[');  }	  if(separator!=    null)    {    if(separator.equals(optional))    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
128	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&  separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(separator);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator!=  null  &&  separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(separator);  }	  if(separator!=    null    ||    separator.equals(   "       "))    {    buffer.append('[');    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
129	[BUG]  [BUGGY]  ||  separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  ||  separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(separator);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	||  separator.equals( "   "))  {  buffer.append('[');  }  else  {  buffer.append(separator);  }	  if(separator!=    null    ||    separator.equals(   "       "))    {    buffer.append('[');    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
130	[BUG]  [BUGGY]  optional  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  optional  =(Option)i.next();  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	optional  =(Option)i.next();	  Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
131	[BUG]  [BUGGY]  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  option  =(Option)i.next();  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	option  =(Option)i.next();	  Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
132	[BUG]  [BUGGY]  Option  option  =  options.getOption(optional);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  options.getOption(optional);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  options.getOption(optional);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
133	[BUG]  [BUGGY]  if(optional)  {  if(i.hasNext())  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional)  {  if(i.hasNext())  {  buffer.append('[');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional)  {  if(i.hasNext())  {  buffer.append('[');  }	  if(i.hasNext())    {    buffer.append('[');    }    else    {    buffer.append(option);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
134	[BUG]  [BUGGY]  if(optional)  {  if(i.hasNext())  {  buffer.append('[');  }  else  {  buffer.append(option);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional)  {  if(i.hasNext())  {  buffer.append('[');  }  else  {  buffer.append(option);  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional)  {  if(i.hasNext())  {  buffer.append('[');  }  else  {  buffer.append(option);  }	  if(i.hasNext())    {    buffer.append('[');    }    else    {    buffer.append(option);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
135	[BUG]  [BUGGY]  if(i.hasNext())  {  buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(i.hasNext())  {  buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(i.hasNext())  {  buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }	  if(i.hasNext())    {    buffer.append(separator);    }    else    {    buffer.append(   "[   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
136	[BUG]  [BUGGY]  ||  separator.equals( "   "))  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  ||  separator.equals( "   "))  {  buffer.append('[');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	||  separator.equals( "   "))  {  buffer.append('[');  }	  if(separator!=    null)    {    if(separator.equals(   "       "))    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
137	[BUG]  [BUGGY]  if(separator  ==  null)  {  if(separator.equals( " "))  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null)  {  if(separator.equals( " "))  {  buffer.append('[');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator  ==  null)  {  if(separator.equals( " "))  {  buffer.append('[');  }	  if(separator!=    null)    {    if(separator.equals(   "       "))    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
138	[BUG]  [BUGGY]  if(separator!=  null)  {  if(separator.equals( "[ "))  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null)  {  if(separator.equals( "[ "))  {  buffer.append('[');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator!=  null)  {  if(separator.equals( "[ "))  {  buffer.append('[');  }	  if(separator!=    null)    {    if(separator.equals(   "       "))    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
139	[BUG]  [BUGGY]  if(i.hasNext())  {  buffer.append(']');  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(i.hasNext())  {  buffer.append(']');  }  else  {  buffer.append(']');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(i.hasNext())  {  buffer.append(']');  }  else  {  buffer.append(']');  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
140	[BUG]  [BUGGY]  parent.appendUsage(buffer,  separator,  helpSettingsCopy);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.appendUsage(buffer,  separator,  helpSettingsCopy);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.appendUsage(buffer,  separator,  helpSettingsCopy);	  parent.appendUsage(buffer,    helpSettingsCopy,    separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
141	[BUG]  [BUGGY]  parent.appendUsage(buffer,  childSettings,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.appendUsage(buffer,  childSettings,  separator);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.appendUsage(buffer,  childSettings,  separator);	  parent.appendUsage(buffer,    helpSettingsCopy,    separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
142	[BUG]  [BUGGY]  parent.appendUsage(buffer,  separator,  helpSettings);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.appendUsage(buffer,  separator,  helpSettings);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.appendUsage(buffer,  separator,  helpSettings);	  parent.appendUsage(buffer,    helpSettingsCopy,    separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
143	[BUG]  [BUGGY]  parent.appendUsage(buffer,  helpSettingsCopy,  comp);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.appendUsage(buffer,  helpSettingsCopy,  comp);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.appendUsage(buffer,  helpSettingsCopy,  comp);	  parent.appendUsage(buffer,    helpSettingsCopy,    separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
144	[BUG]  [BUGGY]  if(i.hasNext())  {  buffer.append( "[');  }  else  {  buffer.append(optional,  separator);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(i.hasNext())  {  buffer.append( "[');  }  else  {  buffer.append(optional,  separator);  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(i.hasNext())  {  buffer.append( "[');  }  else  {  buffer.append(optional,  separator);  }	  if(i.hasNext())    {    buffer.append('[');    }    else    {    buffer.append(optional,    separator);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
145	[BUG]  [BUGGY]  buffer.append(option);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append(option);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append(option);	  if(i.hasNext())    {    buffer.append(option);    }    else    {    buffer.append(']');    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
146	[BUG]  [BUGGY]  optional  &&  buffer.append( "] ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  optional  &&  buffer.append( "] ");  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	optional  &&  buffer.append( "] ");	  optional    ||    buffer.append(   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
147	[BUG]  [BUGGY]  Option  option  =(Option)option.next();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =(Option)option.next();  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =(Option)option.next();	  Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
148	[BUG]  [BUGGY]  parent  ==  null)  {  buffer.append( "[] ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent  ==  null)  {  buffer.append( "[] ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent  ==  null)  {  buffer.append( "[] ");  }	  parent    ==    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
149	[BUG]  [BUGGY]  parent  ==  null)  {  buffer.append(parent);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent  ==  null)  {  buffer.append(parent);  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent  ==  null)  {  buffer.append(parent);  }	  parent    ==    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
150	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append( "[] ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null)  {  buffer.append( "[] ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator!=  null)  {  buffer.append( "[] ");  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
151	[BUG]  [BUGGY]  buffer.append( "] "  +  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append( "] "  +  separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append( "] "  +  separator);	  buffer.append(   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
152	[BUG]  [BUGGY]  Option  option  =  option.appendUsage(buffer,  childSettingsCopy,  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendUsage(buffer,  childSettingsCopy,  separator);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendUsage(buffer,  childSettingsCopy,  separator);	  Option    option    =    option.appendUsage(buffer,    helpSettingsCopy,    separator);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
153	[BUG]  [BUGGY]  parent!=  null  &&  option.appendUsage(buffer,  childSettings,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent!=  null  &&  option.appendUsage(buffer,  childSettings,  separator);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent!=  null  &&  option.appendUsage(buffer,  childSettings,  separator);	  parent!=    null    &&    option.appendUsage(buffer,    helpSettingsCopy,    separator);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
154	[BUG]  [BUGGY]  Option  option  =  option.appendOption(buffer,  childSettingsCopy,  options);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(buffer,  childSettingsCopy,  options);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(buffer,  childSettingsCopy,  options);	  Option    option    =    option.appendOption(buffer,    helpSettingsCopy,    options);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
155	[BUG]  [BUGGY]  option  ||  buffer.append( "[ ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  option  ||  buffer.append( "[ ");  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	option  ||  buffer.append( "[ ");	  optional    ||    buffer.append(   "[   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
156	[BUG]  [BUGGY]  optional  &&  buffer.append( "[   ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  optional  &&  buffer.append( "[   ");  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	optional  &&  buffer.append( "[   ");	  optional    ||    buffer.append(   "[   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
157	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefixes);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  optionMap.getOption(prefixes);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  optionMap.getOption(prefixes);	  Option    option    =    option.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
158	[BUG]  [BUGGY]  parent.append(option,  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(option,  separator);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.append(option,  separator);	  parent.append(comp,    separator);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
159	[BUG]  [BUGGY]  Option  option  =  option.appendUsage(buffer,  buffer,  helpSettingsCopy);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendUsage(buffer,  buffer,  helpSettingsCopy);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendUsage(buffer,  buffer,  helpSettingsCopy);	  Option    option    =    option.appendUsage(buffer,    helpSettingsCopy,    comp);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
160	[BUG]  [BUGGY]  if(i.hasNext())  {  buffer.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(i.hasNext())  {  buffer.append( ", ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(i.hasNext())  {  buffer.append( ", ");  }	  if(i.hasNext())    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
161	[BUG]  [BUGGY]  if(optional)  {  parent.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional)  {  parent.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional)  {  parent.append('[');  }  else  {  buffer.append(optional);  }	  parent.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
162	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  option  =  option.getOption(prefix);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	final  Option  option  =  option.getOption(prefix);	  final    Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
163	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(i);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  option  =  option.getOption(i);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	final  Option  option  =  option.getOption(i);	  final    Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
164	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent!=  null  &&  parent.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent!=  null  &&  parent.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }	  if(separator!=    null)    {    if(separator.equals(optional))    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
165	[BUG]  [BUGGY]  if(optional)  {  if(separator!=  null)  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional)  {  if(separator!=  null)  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional)  {  if(separator!=  null)  {  buffer.append('[');  }  else  {  buffer.append(optional);  }	  if(separator!=    null)    {    if(separator.equals(optional))    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
166	[BUG]  [BUGGY]  parent.append(option);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(option);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.append(option);	  parent.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
167	[BUG]  [BUGGY]  buffer.append( "[ ");  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append( "[ ");  }  else  {  buffer.append(']');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append( "[ ");  }  else  {  buffer.append(']');  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
168	[BUG]  [BUGGY]  parent.appendUsage(buffer,  separator,  childSettings);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.appendUsage(buffer,  separator,  childSettings);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.appendUsage(buffer,  separator,  childSettings);	  parent.appendUsage(buffer,    helpSettingsCopy,    separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
169	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  optionMap.getOption(separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  optionMap.getOption(separator);	  Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
170	[BUG]  [BUGGY]  Option  option  =  option.getOption(i);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.getOption(i);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.getOption(i);	  Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
171	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.equals( ". "))  {  buffer.append('[');  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&  separator.equals( ". "))  {  buffer.append('[');  }  else  {  buffer.append(separator);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator!=  null  &&  separator.equals( ". "))  {  buffer.append('[');  }  else  {  buffer.append(separator);  }	  if(separator!=    null    ||    separator.equals(   "       "))    {    buffer.append('[');    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
172	[BUG]  [BUGGY]  buffer.append( "[] "  +  separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append( "[] "  +  separator);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append( "[] "  +  separator);	  buffer.append(   "[]   ");    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
173	[BUG]  [BUGGY]  Option  option  =  option.appendUsage(buffer,  separator,  options);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendUsage(buffer,  separator,  options);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendUsage(buffer,  separator,  options);	  Option    option    =    option.appendUsage(buffer,    helpSettingsCopy,    options);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
174	[BUG]  [BUGGY]  if(i.hasNext())  {  buffer.append(']');  }  else  {  buffer.append(option);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(i.hasNext())  {  buffer.append(']');  }  else  {  buffer.append(option);  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(i.hasNext())  {  buffer.append(']');  }  else  {  buffer.append(option);  }	  if(i.hasNext())    {    buffer.append('[');    }    else    {    buffer.append(option);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
175	[BUG]  [BUGGY]  buffer.append(separator).append( "[] ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append(separator).append( "[] ");  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append(separator).append( "[] ");	  buffer.append(separator).append(   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
176	[BUG]  [BUGGY]  buffer.append(optional).append('[');  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append(optional).append('[');  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append(optional).append('[');	  buffer.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
177	[BUG]  [BUGGY]  Option  option  =  option.appendOption(buffer,  separator,  outer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(buffer,  separator,  outer);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(buffer,  separator,  outer);	  Option    option    =    option.appendOption(buffer,    helpSettingsCopy,    outer);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
178	[BUG]  [BUGGY]  buffer.append( "[');  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append( "[');  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append( "[');	  if(i.hasNext())    {    buffer.append(   "[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
179	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(optional))  {  if(separator.equals( " "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent!=  null  &&  parent.equals(optional))  {  if(separator.equals( " "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent!=  null  &&  parent.equals(optional))  {  if(separator.equals( " "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }	  if(separator!=    null)    {    if(separator.equals(   "       "))    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
180	[BUG]  [BUGGY]  parent!=  null  &&  parent.equals(optional))  {  if(separator.equals( " "))  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent!=  null  &&  parent.equals(optional))  {  if(separator.equals( " "))  {  buffer.append('[');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent!=  null  &&  parent.equals(optional))  {  if(separator.equals( " "))  {  buffer.append('[');  }	  if(separator!=    null)    {    if(separator.equals(   "       "))    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
181	[BUG]  [BUGGY]  buffer.append(''+  separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append(''+  separator);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append(''+  separator);	  buffer.append('    ');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
182	[BUG]  [BUGGY]  if(separator!=  null  ||  separator.equals(option))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  ||  separator.equals(option))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator!=  null  ||  separator.equals(option))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }	  if(separator    ==    null    ||    separator.equals(optional))    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
183	[BUG]  [BUGGY]  buffer.append( "  }   ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append( "  }   ");  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append( "  }   ");	  buffer.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
184	[BUG]  [BUGGY]  if(optional)  {  if(separator!=  null)  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional)  {  if(separator!=  null)  {  buffer.append( "] ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional)  {  if(separator!=  null)  {  buffer.append( "] ");  }	  if(separator!=    null)    {    if(separator.equals(   "       "))    {    buffer.append('[');    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
185	[BUG]  [BUGGY]  if(optional)  {  if(separator.equals( "   "))  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional)  {  if(separator.equals( "   "))  {  buffer.append('[');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional)  {  if(separator.equals( "   "))  {  buffer.append('[');  }	  if(separator!=    null)    {    if(separator.equals(   "       "))    {    buffer.append('[');    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
186	[BUG]  [BUGGY]  parent.append(optional).append('[');  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(optional).append('[');  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.append(optional).append('[');	  parent.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
187	[BUG]  [BUGGY]  parent.append(separator).append(']');  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(separator).append(']');  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.append(separator).append(']');	  parent.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
188	[BUG]  [BUGGY]  parent.append(separator).append('['  +  i.next());  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(separator).append('['  +  i.next());  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.append(separator).append('['  +  i.next());	  parent.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
189	[BUG]  [BUGGY]  if(optional  &&  separator!=  null)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional  &&  separator!=  null)  {  buffer.append('[');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional  &&  separator!=  null)  {  buffer.append('[');  }	  if(optional)    {    if(separator!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
190	[BUG]  [BUGGY]  if(optional)  {  if(outer  ||  separator!=  null)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional)  {  if(outer  ||  separator!=  null)  {  buffer.append('[');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional)  {  if(outer  ||  separator!=  null)  {  buffer.append('[');  }	  if(optional)    {    if(separator!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
191	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null)  {  buffer.append( "[] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent  ==  null  &&  parent!=  null)  {  buffer.append( "[] ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent  ==  null  &&  parent!=  null)  {  buffer.append( "[] ");  }	  parent    ==    null    &&    parent!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
192	[BUG]  [BUGGY]  parent.append(optional,  separator,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(optional,  separator,  buffer);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.append(optional,  separator,  buffer);	  parent.append(optional,    separator);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
193	[BUG]  [BUGGY]  Option  option  =  option.appendOption(buffer,  separator,  i.next());  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(buffer,  separator,  i.next());  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(buffer,  separator,  i.next());	  Option    option    =    option.appendOption(buffer,    separator);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
194	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  optionMap.getOption();  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  optionMap.getOption();	  Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
195	[BUG]  [BUGGY]  Option  option  =  option.appendOption(buffer,  childSettingsCopy,  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(buffer,  childSettingsCopy,  separator);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(buffer,  childSettingsCopy,  separator);	  Option    option    =    option.appendOption(buffer,    helpSettingsCopy,    separator);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
196	[BUG]  [BUGGY]  if(optional  &&  outer)  {  if(separator  ==  null)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional  &&  outer)  {  if(separator  ==  null)  {  buffer.append('[');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional  &&  outer)  {  if(separator  ==  null)  {  buffer.append('[');  }	  if(optional)    {    if(separator    ==    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
197	[BUG]  [BUGGY]  if(optional  &&  outer)  {  if(separator!=  null)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional  &&  outer)  {  if(separator!=  null)  {  buffer.append('[');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional  &&  outer)  {  if(separator!=  null)  {  buffer.append('[');  }	  if(optional)    {    if(separator    ==    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
198	[BUG]  [BUGGY]  if(optional)  {  if(outer  ||  separator  ==  null)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional)  {  if(outer  ||  separator  ==  null)  {  buffer.append('[');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional)  {  if(outer  ||  separator  ==  null)  {  buffer.append('[');  }	  if(optional)    {    if(separator    ==    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
199	[BUG]  [BUGGY]  if(separator!=  null)  {  if(separator.equals( " ")||  separator.equals( "- "))  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null)  {  if(separator.equals( " ")||  separator.equals( "- "))  {  buffer.append('[');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator!=  null)  {  if(separator.equals( " ")||  separator.equals( "- "))  {  buffer.append('[');  }	  if(separator!=    null)    {    if(separator.equals(   "       "))    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
200	[BUG]  [BUGGY]  if(separator!=  null)  {  if(separator.equals( " ")||  separator.equals( "[ "))  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null)  {  if(separator.equals( " ")||  separator.equals( "[ "))  {  buffer.append('[');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator!=  null)  {  if(separator.equals( " ")||  separator.equals( "[ "))  {  buffer.append('[');  }	  if(separator!=    null)    {    if(separator.equals(   "       "))    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
201	[BUG]  [BUGGY]  if(optional!=  null)  {  if(separator!=  null  ||  separator.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional!=  null)  {  if(separator!=  null  ||  separator.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional!=  null)  {  if(separator!=  null  ||  separator.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }	  if(separator!=    null    ||    separator.equals(optional))    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
202	[BUG]  [BUGGY]  if(optional!=  null  ||  separator.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(optional!=  null  ||  separator.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional!=  null  ||  separator.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }	  if(separator!=    null    ||    separator.equals(optional))    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
203	[BUG]  [BUGGY]  i.set(buffer,  separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  i.set(buffer,  separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	i.set(buffer,  separator);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
204	[BUG]  [BUGGY]  i.next();  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  i.next();  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	i.next();	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
205	[BUG]  [BUGGY]  i.set(buffer,  buffer);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  i.set(buffer,  buffer);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	i.set(buffer,  buffer);	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
206	[BUG]  [BUGGY]  parent.append(optional);  buffer.append('[');  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(optional);  buffer.append('[');  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.append(optional);  buffer.append('[');	  parent.append(separator);    buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
207	[BUG]  [BUGGY]  Option  option  =  option.appendOption(buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(buffer);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(buffer);	  Option    option    =    option.appendOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
208	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.equals( " "))  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&  separator.equals( " "))  {  buffer.append('[');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator!=  null  &&  separator.equals( " "))  {  buffer.append('[');  }	  if(separator!=    null    &&    separator.equals(optional))    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
209	[BUG]  [BUGGY]  buffer.append(']',  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append(']',  separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append(']',  separator);	  buffer.append(']');    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
210	[BUG]  [BUGGY]  parent.append(i.next());  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(i.next());  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.append(i.next());	  parent.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
211	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  options.getOption(arg);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  options.getOption(arg);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
212	[BUG]  [BUGGY]  parent  ==  null  &&  parent.equals(optional);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent  ==  null  &&  parent.equals(optional);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent  ==  null  &&  parent.equals(optional);	  if(separator!=    null)    {    if(separator.equals(   "       "))    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
213	[BUG]  [BUGGY]  if(!outer)  {  parent.append('[');  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(!outer)  {  parent.append('[');  }  else  {  buffer.append(separator);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(!outer)  {  parent.append('[');  }  else  {  buffer.append(separator);  }	  parent.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
214	[BUG]  [BUGGY]  if(!outer)  {  parent.append('[');  }  else  {  buffer.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(!outer)  {  parent.append('[');  }  else  {  buffer.append( ", ");  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(!outer)  {  parent.append('[');  }  else  {  buffer.append( ", ");  }	  parent.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
215	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent  ==  null  &&  parent!=  null;  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent  ==  null  &&  parent!=  null;	  if(separator!=    null)    {    if(separator.equals(   "       "))    {    buffer.append('[');    }    else    {    buffer.append(separator);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
216	[BUG]  [BUGGY]  Option  option  =  option.appendOption(separator,  separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(separator,  separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(separator,  separator);	  Option    option    =    option.appendOption(buffer,    separator);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
217	[BUG]  [BUGGY]  parent.appendUsage(buffer,  separator,  option);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.appendUsage(buffer,  separator,  option);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.appendUsage(buffer,  separator,  option);	  parent.appendUsage(buffer,    helpSettingsCopy,    separator);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
218	[BUG]  [BUGGY]  parent.append(optional,  separator,  comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent.append(optional,  separator,  comp);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent.append(optional,  separator,  comp);	  parent.append(optional,    separator);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
219	[BUG]  [BUGGY]  Option  option  =  option.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.getOption(separator,  comp);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.getOption(separator,  comp);	  Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
220	[BUG]  [BUGGY]  buffer.append( "[');  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append( "[');  }  else  {  buffer.append(separator);  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append( "[');  }  else  {  buffer.append(separator);  }	  if(i.hasNext())    {    buffer.append(   "[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
221	[BUG]  [BUGGY]  buffer.append(separator).append( "[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append(separator).append( "[');  }  else  {  buffer.append( "] ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append(separator).append( "[');  }  else  {  buffer.append( "] ");  }	  if(i.hasNext())    {    buffer.append(   "[');    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
222	[BUG]  [BUGGY]  Option  option  =  options.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  options.getOption(separator,  comp);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  options.getOption(separator,  comp);	  Option    option    =    options.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
223	[BUG]  [BUGGY]  Option  option  =  options.getOption(separator,  i);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  options.getOption(separator,  i);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  options.getOption(separator,  i);	  Option    option    =    options.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
224	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null)  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent  ==  null  &&  parent!=  null)  {  buffer.append(separator);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent  ==  null  &&  parent!=  null)  {  buffer.append(separator);  }	  parent    ==    null    &&    parent!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
225	[BUG]  [BUGGY]  parent  ==  null  ||  parent!=  null)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent  ==  null  ||  parent!=  null)  {  buffer.append('[');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent  ==  null  ||  parent!=  null)  {  buffer.append('[');  }	  parent    ==    null    &&    parent!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
226	[BUG]  [BUGGY]  parent  ==  null  &&  parent!=  null)  {  buffer.append(parent,  separator);  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent  ==  null  &&  parent!=  null)  {  buffer.append(parent,  separator);  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent  ==  null  &&  parent!=  null)  {  buffer.append(parent,  separator);  }	  parent    ==    null    &&    parent!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
227	[BUG]  [BUGGY]  Option  option  =  option.appendOption(buffer,  buffer,  helpSettingsCopy);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(buffer,  buffer,  helpSettingsCopy);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(buffer,  buffer,  helpSettingsCopy);	  Option    option    =    option.appendOption(buffer,    helpSettingsCopy,    options);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
228	[BUG]  [BUGGY]  Option  option  =  option.appendOption(buffer,  separator,  options);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(buffer,  separator,  options);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(buffer,  separator,  options);	  Option    option    =    option.appendOption(buffer,    helpSettingsCopy,    options);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
229	[BUG]  [BUGGY]  parent  ==  null)  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent  ==  null)  {  buffer.append(separator);  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent  ==  null)  {  buffer.append(separator);  }	  if(optional)    {    if(separator!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
230	[BUG]  [BUGGY]  parent  ==  null  ||  separator!=  null)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent  ==  null  ||  separator!=  null)  {  buffer.append('[');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent  ==  null  ||  separator!=  null)  {  buffer.append('[');  }	  if(optional)    {    if(separator!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
231	[BUG]  [BUGGY]  Option  separator  =  option.getSeparator();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  separator  =  option.getSeparator();  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  separator  =  option.getSeparator();	  if(optional)    {    if(separator!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
232	[BUG]  [BUGGY]  parent  ==  null  ||  separator.equals( "   "))  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent  ==  null  ||  separator.equals( "   "))  {  buffer.append('[');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent  ==  null  ||  separator.equals( "   "))  {  buffer.append('[');  }	  if(separator!=    null)    {    if(separator.equals(   "       "))    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
233	[BUG]  [BUGGY]  cearcă  ||  separator.equals( "   "))  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  cearcă  ||  separator.equals( "   "))  {  buffer.append('[');  }  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	cearcă  ||  separator.equals( "   "))  {  buffer.append('[');  }	  if(separator!=    null)    {    if(separator.equals(   "       "))    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
234	[BUG]  [BUGGY]  appendOption(buffer,  separator,  i.remove());  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  appendOption(buffer,  separator,  i.remove());  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	appendOption(buffer,  separator,  i.remove());	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
235	[BUG]  [BUGGY]  appendOption(buffer,  separator,  i.next());  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  appendOption(buffer,  separator,  i.next());  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	appendOption(buffer,  separator,  i.next());	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
236	[BUG]  [BUGGY]  appendOption(buffer,  i.remove());  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  appendOption(buffer,  i.remove());  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	appendOption(buffer,  i.remove());	  i.remove();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
237	[BUG]  [BUGGY]  i.remove();  buffer.append(separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  i.remove();  buffer.append(separator);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	i.remove();  buffer.append(separator);	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
238	[BUG]  [BUGGY]  return  buffer.toString()  + ", "  +  separator;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  return  buffer.toString()  + ", "  +  separator;  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	return  buffer.toString()  + ", "  +  separator;	  return    buffer.toString();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
239	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(i.next());  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  optionMap.getOption(i.next());  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  optionMap.getOption(i.next());	  Option    option    =    option.getOption(i.next());    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
240	[BUG]  [BUGGY]  Option  option  =  option.appendUsage(buffer,  childSettings,  helpSettingsCopy);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendUsage(buffer,  childSettings,  helpSettingsCopy);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendUsage(buffer,  childSettings,  helpSettingsCopy);	  Option    option    =    option.appendUsage(buffer,    helpSettingsCopy,    comp);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
241	[BUG]  [BUGGY]  Option  option  =  option.appendOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(separator,  comp);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(separator,  comp);	  Option    option    =    option.appendOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
242	[BUG]  [BUGGY]  buffer.append(',');  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append(',');  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append(',');	  buffer.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
243	[BUG]  [BUGGY]  buffer.append('[').append(separator).append( "] ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append('[').append(separator).append( "] ");  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append('[').append(separator).append( "] ");	  buffer.append(separator).append(   "]   ");    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
244	[BUG]  [BUGGY]  if(!outer)  {  parent.append(separator);  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(!outer)  {  parent.append(separator);  buffer.append('[');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(!outer)  {  parent.append(separator);  buffer.append('[');  }	  parent.append(separator);    buffer.append('[');    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
245	[BUG]  [BUGGY]  parent!=  null  &&  option.appendUsage(buffer,  separator,  comp);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent!=  null  &&  option.appendUsage(buffer,  separator,  comp);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent!=  null  &&  option.appendUsage(buffer,  separator,  comp);	  parent!=    null    &&    option.appendUsage(buffer,    helpSettingsCopy,    separator);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
246	[BUG]  [BUGGY]  buffer.append(separator).append('[').append(optional);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append(separator).append('[').append(optional);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append(separator).append('[').append(optional);	  buffer.append(separator).append('[');    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
247	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "[ ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "[ ");  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
248	[BUG]  [BUGGY]  parent!=  null)  {  buffer.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent!=  null)  {  buffer.append( "[ ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent!=  null)  {  buffer.append( "[ ");  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
249	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  final  Option  option  =  option.getOption(separator,  comp);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	final  Option  option  =  option.getOption(separator,  comp);	  final    Option    option    =    option.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
250	[BUG]  [BUGGY]  Option  option  =  option.appendUsage(buffer,  separator,  childSettings);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendUsage(buffer,  separator,  childSettings);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendUsage(buffer,  separator,  childSettings);	  Option    option    =    option.appendUsage(buffer,    helpSettingsCopy,    separator);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
251	[BUG]  [BUGGY]  if(separator  ==  null  ||  separator.equals( " "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator  ==  null  ||  separator.equals( " "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator  ==  null  ||  separator.equals( " "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }	  if(separator!=    null    ||    separator.equals(   "       "))    {    buffer.append('[');    }    else    {    buffer.append(optional);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
252	[BUG]  [BUGGY]  parent  ==  null)  {  buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent  ==  null)  {  buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent  ==  null)  {  buffer.append( "[ ");  }  else  {  buffer.append( "] ");  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
253	[BUG]  [BUGGY]  parent  ==  null)  {  buffer.append( "[ ");  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  parent  ==  null)  {  buffer.append( "[ ");  }  else  {  buffer.append(separator);  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	parent  ==  null)  {  buffer.append( "[ ");  }  else  {  buffer.append(separator);  }	  if(separator!=    null)    {    buffer.append(   "[   ");    }    else    {    buffer.append(   "]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
254	[BUG]  [BUGGY]  buffer.append(optionMap.get(separator));  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  buffer.append(optionMap.get(separator));  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	buffer.append(optionMap.get(separator));	  if(i.hasNext())    {    buffer.append(separator);    }    else    {    buffer.append(   "[   ");    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
255	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append('[');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append('[');  }	  if(separator!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
256	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append(']');  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append(']');  }	  if(separator!=    null)    {    buffer.append('[');    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
257	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(optional);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  optionMap.getOption(optional);  [BUGGY]        [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  optionMap.getOption(optional);	  Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
258	[BUG]  [BUGGY]  Option  option  =  option.appendOption(buffer,  separator,  childSettings);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(buffer,  separator,  childSettings);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(buffer,  separator,  childSettings);	  Option    option    =    option.appendOption(buffer,    helpSettingsCopy,    separator);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
259	[BUG]  [BUGGY]  Option  option  =  option.appendOption(buffer,  separator,  arg);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  Option  option  =  option.appendOption(buffer,  separator,  arg);  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	Option  option  =  option.appendOption(buffer,  separator,  arg);	  Option    option    =    option.appendOption(buffer,    helpSettingsCopy,    separator);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
260	[BUG]  [BUGGY]  if(i.hasNext())  {  buffer.append('[');  }  else  {  buffer.append(option,  separator);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }      [BUGGY]  if(i.hasNext())  {  buffer.append('[');  }  else  {  buffer.append(option,  separator);  }  [BUGGY]      }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(i.hasNext())  {  buffer.append('[');  }  else  {  buffer.append(option,  separator);  }	  if(i.hasNext())    {    buffer.append('[');    }    else    {    buffer.append(option);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
