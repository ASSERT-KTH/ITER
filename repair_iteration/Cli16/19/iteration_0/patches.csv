bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(separator.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]  if(separator.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [BUGGY]    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }	}  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
2	[BUG]  [BUGGY]  if(separator.equals( " "))  {  buffer.append('[');  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]  if(separator.equals( " "))  {  buffer.append('[');  }  else  {  buffer.append(separator);  }  [BUGGY]    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator.equals( " "))  {  buffer.append('[');  }  else  {  buffer.append(separator);  }	}  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
3	[BUG]  [BUGGY]  if(separator.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]  if(separator.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(separator.equals(optional))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }	}  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
4	[BUG]  [BUGGY]  if(optional)  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]  if(optional)  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional)  {  buffer.append('[');  }  else  {  buffer.append(optional);  }	}  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]    [BUGGY]    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
6	[BUG]  [BUGGY]    if(separator!=  null)  {  buffer.append('[');  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]    if(separator!=  null)  {  buffer.append('[');  }  else  {  buffer.append(separator);  }  [BUGGY]  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	    if(separator!=  null)  {  buffer.append('[');  }  else  {  buffer.append(separator);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
7	[BUG]  [BUGGY]    if(separator!=  null)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]    if(separator!=  null)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [BUGGY]  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	    if(separator!=  null)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
8	[BUG]  [BUGGY]    if(separator.equals( " "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]    if(separator.equals( " "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }  [BUGGY]  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	    if(separator.equals( " "))  {  buffer.append('[');  }  else  {  buffer.append(optional);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
9	[BUG]  [BUGGY]  if(optional)  {  buffer.append(separator);  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]  if(optional)  {  buffer.append(separator);  }  else  {  buffer.append(']');  }  [BUGGY]    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional)  {  buffer.append(separator);  }  else  {  buffer.append(']');  }	}  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
10	[BUG]  [BUGGY]  if(optional)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]  if(optional)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [BUGGY]    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional)  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }	}  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
11	[BUG]  [BUGGY]  if(optional)  {  buffer.append(']');  }  else  {  buffer.append(optional);  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]  if(optional)  {  buffer.append(']');  }  else  {  buffer.append(optional);  }  [BUGGY]    [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	if(optional)  {  buffer.append(']');  }  else  {  buffer.append(optional);  }	}  	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
12	[BUG]  [BUGGY]    if(optional)  {  option.appendUsage(buffer,  helpSettingsCopy,  separator);  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]    if(optional)  {  option.appendUsage(buffer,  helpSettingsCopy,  separator);  }  else  {  buffer.append(']');  }  [BUGGY]  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	    if(optional)  {  option.appendUsage(buffer,  helpSettingsCopy,  separator);  }  else  {  buffer.append(']');  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
13	[BUG]  [BUGGY]    if(optional)  {  option.appendUsage(buffer,  helpSettingsCopy,  options);  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]    if(optional)  {  option.appendUsage(buffer,  helpSettingsCopy,  options);  }  else  {  buffer.append(']');  }  [BUGGY]  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	    if(optional)  {  option.appendUsage(buffer,  helpSettingsCopy,  options);  }  else  {  buffer.append(']');  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
14	[BUG]  [BUGGY]    if(optional)  {  option.appendUsage(buffer,  helpSettingsCopy,  separator);  }  else  {  buffer.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]    if(optional)  {  option.appendUsage(buffer,  helpSettingsCopy,  separator);  }  else  {  buffer.append( ", ");  }  [BUGGY]  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	    if(optional)  {  option.appendUsage(buffer,  helpSettingsCopy,  separator);  }  else  {  buffer.append( ", ");  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
15	[BUG]  [BUGGY]    if(optional)  {  option.appendUsage(buffer,  helpSettingsCopy,  options);  }  else  {  buffer.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]    if(optional)  {  option.appendUsage(buffer,  helpSettingsCopy,  options);  }  else  {  buffer.append( ", ");  }  [BUGGY]  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	    if(optional)  {  option.appendUsage(buffer,  helpSettingsCopy,  options);  }  else  {  buffer.append( ", ");  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
16	[BUG]  [BUGGY]    if(optional)  {  option.appendUsage(buffer,  helpSettingsCopy,  separator);  }  else  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]    if(optional)  {  option.appendUsage(buffer,  helpSettingsCopy,  separator);  }  else  {  buffer.append('[');  }  [BUGGY]  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	    if(optional)  {  option.appendUsage(buffer,  helpSettingsCopy,  separator);  }  else  {  buffer.append('[');  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
17	[BUG]  [BUGGY]    if(i.hasNext())  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]    if(i.hasNext())  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }  [BUGGY]  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	    if(i.hasNext())  {  buffer.append('[');  }  else  {  buffer.append( "] ");  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
18	[BUG]  [BUGGY]    if(i.hasNext())  {  buffer.append(separator);  }  else  {  buffer.append('[');  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]    if(i.hasNext())  {  buffer.append(separator);  }  else  {  buffer.append('[');  }  [BUGGY]  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	    if(i.hasNext())  {  buffer.append(separator);  }  else  {  buffer.append('[');  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
19	[BUG]  [BUGGY]    if(i.hasNext())  {  buffer.append('[');  }  else  {  buffer.append(separator);  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]    if(i.hasNext())  {  buffer.append('[');  }  else  {  buffer.append(separator);  }  [BUGGY]  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	    if(i.hasNext())  {  buffer.append('[');  }  else  {  buffer.append(separator);  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
20	[BUG]  [BUGGY]    if(i.hasNext())  {  buffer.append(separator);  }  else  {  buffer.append(']');  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]    if(i.hasNext())  {  buffer.append(separator);  }  else  {  buffer.append(']');  }  [BUGGY]  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	    if(i.hasNext())  {  buffer.append(separator);  }  else  {  buffer.append(']');  }		non-compiled	[CE]  illegal  start  of  expression	38	None	add
21	[BUG]  [BUGGY]    buffer.append(separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  buffer.append('  ');  final  Option  option  =  (Option)  i.next();  option.appendUsage(buffer,  helpSettingsCopy,  comp);  }  }  if  (optional  &&  !outer)  {  buffer.append(']');  }  [BUGGY]    buffer.append(separator);  [BUGGY]  }  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	390	390	7	replace	    buffer.append(separator);		non-compiled	[CE]  illegal  start  of  expression	38	None	add
