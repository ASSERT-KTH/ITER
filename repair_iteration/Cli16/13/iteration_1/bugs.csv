bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    final  Option  option  =  optionMap.getOption(separator);  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  [BUGGY]    final  Option  option  =  optionMap.getOption(separator);  [BUGGY]  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	    final  Option  option  =  optionMap.getOption(separator);		non-compiled	[CE]  illegal  start  of  expression	26	None	add
2	[BUG]  [BUGGY]    Option  option  =  optionMap.getOption(separator);  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  [BUGGY]    Option  option  =  optionMap.getOption(separator);  [BUGGY]  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	    Option  option  =  optionMap.getOption(separator);		non-compiled	[CE]  illegal  start  of  expression	26	None	add
3	[BUG]  [BUGGY]    final  Option  option  =  optionMap.get(separator);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  [BUGGY]    final  Option  option  =  optionMap.get(separator);  [BUGGY]  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	    final  Option  option  =  optionMap.get(separator);		non-compiled	[CE]  illegal  start  of  expression	26	None	add
4	[BUG]  [BUGGY]    Preconditions.checkState(childSettings.size()  ==  maximum);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  [BUGGY]    Preconditions.checkState(childSettings.size()  ==  maximum);  [BUGGY]  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	    Preconditions.checkState(childSettings.size()  ==  maximum);		non-compiled	[CE]  illegal  start  of  expression	26	None	add
5	[BUG]  [BUGGY]    Preconditions.checkState(childSettings.size()  >  maximum);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  [BUGGY]    Preconditions.checkState(childSettings.size()  >  maximum);  [BUGGY]  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	    Preconditions.checkState(childSettings.size()  >  maximum);		non-compiled	[CE]  illegal  start  of  expression	26	None	add
6	[BUG]  [BUGGY]  if(both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  [BUGGY]  if(both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	if  (both)  {  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
7	[BUG]  [BUGGY]  if(both  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  [BUGGY]  if(both  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	if  (both)  {  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
8	[BUG]  [BUGGY]  if(both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  [BUGGY]  if(both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	if  (both)  {  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
9	[BUG]  [BUGGY]  if(both  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  [BUGGY]  if(both  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	if  (both)  {  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
10	[BUG]  [BUGGY]    buffer.append(separator);  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  [BUGGY]    buffer.append(separator);  [BUGGY]  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	    buffer.append(separator);		non-compiled	[CE]  illegal  start  of  expression	26	None	add
11	[BUG]  [BUGGY]    buffer.append(']');  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  [BUGGY]    buffer.append(']');  [BUGGY]  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	    buffer.append(']');		non-compiled	[CE]  illegal  start  of  expression	26	None	add
12	[BUG]  [BUGGY]    if(separator!=  null)  {  buffer.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  [BUGGY]    if(separator!=  null)  {  buffer.append( ", ");  }  [BUGGY]  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	    if(separator!=  null)  {  buffer.append( ", ");  }		non-compiled	[CE]  illegal  start  of  expression	26	None	add
13	[BUG]  [BUGGY]    if(separator!=  null)  {  buffer.append( "[null] ");  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  [BUGGY]    if(separator!=  null)  {  buffer.append( "[null] ");  }  [BUGGY]  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	    if(separator!=  null)  {  buffer.append( "[null] ");  }		non-compiled	[CE]  illegal  start  of  expression	26	None	add
14	[BUG]  [BUGGY]    if(separator!=  null)  {  buffer.append( "null ");  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  [BUGGY]    if(separator!=  null)  {  buffer.append( "null ");  }  [BUGGY]  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	    if(separator!=  null)  {  buffer.append( "null ");  }		non-compiled	[CE]  illegal  start  of  expression	26	None	add
15	[BUG]  [BUGGY]    Option  option  =  optionMap.get(separator);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  [BUGGY]    Option  option  =  optionMap.get(separator);  [BUGGY]  if  (both)  {  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	    Option  option  =  optionMap.get(separator);		non-compiled	[CE]  illegal  start  of  expression	26	None	add
16	[BUG]  [BUGGY]  if(both  &&  optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?  [CONTEXT]  final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }  [BUGGY]  if(both  &&  optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]  buffer.append( "  ( ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	if  (both)  {  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
