bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!both  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(!both  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
2	[BUG]  [BUGGY]  if(both  ||  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(both  ||  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  ||  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
3	[BUG]  [BUGGY]  if(!both  &&  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(!both  &&  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
4	[BUG]  [BUGGY]  if(separator  ==  null)  {  buffer.append( "[null] ");  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(separator  ==  null)  {  buffer.append( "[null] ");  }  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(separator  ==  null)  {  buffer.append( "[null] ");  }	      if(separator!=    null)    {    buffer.append(   "[null]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
5	[BUG]  [BUGGY]  buffer.append( "[null] ");  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  buffer.append( "[null] ");  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( "[null] ");	      if(separator!=    null)    {    buffer.append(   "[null]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
6	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  minimum);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  Preconditions.checkState(childSettings.size()  ==  minimum);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  ==  minimum);	      Preconditions.checkState(childSettings.size()    ==    maximum);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
7	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  +  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  +  1);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum  +  1);	      Preconditions.checkState(childSettings.size()    ==    maximum);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
8	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.length);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.length);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.length);	      Preconditions.checkState(childSettings.size()    ==    maximum);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  if(!both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(!both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	  if(both    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
10	[BUG]  [BUGGY]  if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	  if(both    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  if(both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	  if(both    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	  if(both    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  Option  option  =  optionMap.getOption(arg);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(arg);	      Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
14	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(separator,  buffer);	      Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
15	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  Option  option  =  optionsMap.getOption(separator);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionsMap.getOption(separator);	      Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(separator,  comp);	      Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  if(separator  ==  null)  {  buffer.append( ",   ");  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(separator  ==  null)  {  buffer.append( ",   ");  }  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(separator  ==  null)  {  buffer.append( ",   ");  }	      if(separator!=    null)    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
18	[BUG]  [BUGGY]  while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ",   ");  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ",   ");  }  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ",   ");  }	      if(separator!=    null)    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
19	[BUG]  [BUGGY]  while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ",   ");  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ",   ");  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ",   ");	      if(separator!=    null)    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
20	[BUG]  [BUGGY]  final  Option  option  =  optionsMap.get(separator);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  final  Option  option  =  optionsMap.get(separator);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionsMap.get(separator);	      final    Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  final  Option  option  =  options.get(separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  final  Option  option  =  options.get(separator);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  options.get(separator);	      final    Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  final  Option  option  =  optionMap.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  final  Option  option  =  optionMap.get(separator  +  1);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.get(separator  +  1);	      final    Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
23	[BUG]  [BUGGY]  if(!both  &&  optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(!both  &&  optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
24	[BUG]  [BUGGY]  if(!both  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(!both  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
25	[BUG]  [BUGGY]  buffer.append('[');  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  buffer.append('[');  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append('[');	      buffer.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
26	[BUG]  [BUGGY]  buffer.append( "  ( ");  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  buffer.append( "  ( ");  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( "  ( ");	      buffer.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
27	[BUG]  [BUGGY]  buffer.append( "; ");  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  buffer.append( "; ");  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( "; ");	      buffer.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  final  Option  option  =  optionMap.getOption(arg);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(arg);	      final    Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
29	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  comp);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(separator,  comp);	      final    Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
30	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  buffer);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(separator,  buffer);	      final    Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
31	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(this.prefix);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  final  Option  option  =  optionMap.getOption(this.prefix);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(this.prefix);	      final    Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
32	[BUG]  [BUGGY]  if(!both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(!both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
33	[BUG]  [BUGGY]  if(!both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(!both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
34	[BUG]  [BUGGY]  if(both  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(both  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
35	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  Option  option  =  optionsMap.get(separator);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionsMap.get(separator);	      Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
36	[BUG]  [BUGGY]  Option  option  =  options.get(separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  Option  option  =  options.get(separator);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  options.get(separator);	      Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
37	[BUG]  [BUGGY]  Option  option  =  newOptionMap().get(separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  Option  option  =  newOptionMap().get(separator);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  newOptionMap().get(separator);	      Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
38	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  Option  option  =  optionMap.get(separator  +  1);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.get(separator  +  1);	      Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
39	[BUG]  [BUGGY]  if(optional  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(optional  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(optional  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
40	[BUG]  [BUGGY]  if(expanded  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(expanded  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(expanded  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  minimum);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  Preconditions.checkState(childSettings.size()  >  minimum);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  >  minimum);	      Preconditions.checkState(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
42	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  <  maximum);	      Preconditions.checkState(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum  +  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum  +  1);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  >  maximum  +  1);	      Preconditions.checkState(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  buffer.append( "  [ ");  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  buffer.append( "  [ ");  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( "  [ ");	      buffer.append(']');    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
45	[BUG]  [BUGGY]  if(separator  ==  null)  {  buffer.append( "null ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(separator  ==  null)  {  buffer.append( "null ");  }  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(separator  ==  null)  {  buffer.append( "null ");  }	      if(separator!=    null)    {    buffer.append(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
46	[BUG]  [BUGGY]  final  Option  option  =  optionsMap.getOption(separator);  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  final  Option  option  =  optionsMap.getOption(separator);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionsMap.getOption(separator);	      final    Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
47	[BUG]  [BUGGY]  if(both  &&  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(both  &&  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
48	[BUG]  [BUGGY]  if(both  &&  optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(both  &&  optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
49	[BUG]  [BUGGY]  buffer.append( "   ");  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  buffer.append( "   ");  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( "   ");	      buffer.append(separator);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
50	[BUG]  [BUGGY]  if(both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
51	[BUG]  [BUGGY]  if(both  &&  options.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(both  &&  options.contains(DisplaySetting.NONE))  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  options.contains(DisplaySetting.NONE))  {	  if(both    &&    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
52	[BUG]  [BUGGY]  buffer.append( ", ");  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  buffer.append( ", ");  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( ", ");	      if(separator!=    null)    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
53	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append( ",  null ");  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(separator!=  null)  {  buffer.append( ",  null ");  }  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(separator!=  null)  {  buffer.append( ",  null ");  }	      if(separator!=    null)    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
54	[BUG]  [BUGGY]  buffer.append( "null ");  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  buffer.append( "null ");  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( "null ");	      if(separator!=    null)    {    buffer.append(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
55	[BUG]  [BUGGY]  Option  option  =  optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  Option  option  =  optionMap.get(arg);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.get(arg);	      Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
56	[BUG]  [BUGGY]  final  Option  option  =  optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  final  Option  option  =  optionMap.get(arg);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.get(arg);	      final    Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
57	[BUG]  [BUGGY]  if(both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	  if(both    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
58	[BUG]  [BUGGY]  if(both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {	  if(both    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
59	[BUG]  [BUGGY]  if(both  &&  parentSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(both  &&  parentSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  parentSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	  if(both    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
60	[BUG]  [BUGGY]  if(both  &&  newOptionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(both  &&  newOptionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  newOptionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
61	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >=  maximum);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  Preconditions.checkState(childSettings.size()  >=  maximum);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  >=  maximum);	      Preconditions.checkState(childSettings.size()    >    maximum);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
62	[BUG]  [BUGGY]  buffer.append( "  [] ");  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  buffer.append( "  [] ");  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( "  [] ");	      buffer.append(']');    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
63	[BUG]  [BUGGY]  buffer.append( "] ");  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  buffer.append( "] ");  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( "] ");	      buffer.append(']');    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
64	[BUG]  [BUGGY]  if(both  &&  helpSettingsCopy.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(both  &&  helpSettingsCopy.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  helpSettingsCopy.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
65	[BUG]  [BUGGY]  if(expanded  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(expanded  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(expanded  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
66	[BUG]  [BUGGY]  if(!optional  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(!optional  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!optional  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
67	[BUG]  [BUGGY]  final  Option  option  =  optionMap.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  final  Option  option  =  optionMap.get(separator  -  1);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.get(separator  -  1);	      final    Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size());  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size());  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size());	      Preconditions.checkState(childSettings.size()    ==    maximum);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
69	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ", ");  }  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ", ");  }	      if(separator!=    null)    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
70	[BUG]  [BUGGY]  if(expanded  &&  optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(expanded  &&  optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(expanded  &&  optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
71	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  separator);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  Option  option  =  optionMap.getOption(this,  separator);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(this,  separator);	      Option    option    =    optionMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
72	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  Option  option  =  optionMap.get(separator  -  1);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.get(separator  -  1);	      Option    option    =    optionMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
73	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]    buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
74	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "null ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "null ");  }  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "null ");  }	      if(separator!=    null)    {    buffer.append(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
75	[BUG]  [BUGGY]  buffer.append(']',  separator);  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?    [CONTEXT]    final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }    [BUGGY]  buffer.append(']',  separator);  [BUGGY]    if  (both)  {  buffer.append(   "  (   ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append(']',  separator);	      buffer.append(']');    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
