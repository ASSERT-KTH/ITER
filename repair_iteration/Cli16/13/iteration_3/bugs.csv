bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionsMap.get(separator  +  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionsMap.get(separator  +  1);	  Option    option    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
2	[BUG]  [BUGGY]  Option  option  =  optionMap.get(prefix  +  1);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.get(prefix  +  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.get(prefix  +  1);	  Option    option    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
3	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(comp,  separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.getOption(comp,  separator);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(comp,  separator);	  final    Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
4	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  comp,  outer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  comp,  outer);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(separator,  comp,  outer);	  final    Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
5	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  comp,  buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  comp,  buffer);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(separator,  comp,  buffer);	  final    Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
6	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.getOption(arg,  description);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(arg,  description);	  final    Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
7	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.getOption(prefix);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(prefix);	  final    Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
8	[BUG]  [BUGGY]  if(!both  &&  optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
9	[BUG]  [BUGGY]  if(optional  &&  optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(optional  &&  optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(optional  &&  optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
10	[BUG]  [BUGGY]  if(optionals  &&  optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(optionals  &&  optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(optionals  &&  optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
11	[BUG]  [BUGGY]  if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
12	[BUG]  [BUGGY]  buffer.append( "  if(both)  {  buffer.append( "  ( ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  buffer.append( "  if(both)  {  buffer.append( "  ( ");  }  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( "  if(both)  {  buffer.append( "  ( ");  }	  buffer.append(   "    (   ");    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
13	[BUG]  [BUGGY]  if(!both  &&  newOptionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  newOptionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  newOptionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!both    &&    optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
14	[BUG]  [BUGGY]  if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append( "null ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append( "null ");  }  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append( "null ");  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
15	[BUG]  [BUGGY]  if(separator  ==  null  ||  separator.length()  >  0)  {  buffer.append( "null ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(separator  ==  null  ||  separator.length()  >  0)  {  buffer.append( "null ");  }  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(separator  ==  null  ||  separator.length()  >  0)  {  buffer.append( "null ");  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append(   "null   ");    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
16	[BUG]  [BUGGY]  if(!optional  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!optional  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!optional  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(optional    &&    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
17	[BUG]  [BUGGY]  if(optional  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(optional  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(optional  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(optional    &&    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
18	[BUG]  [BUGGY]  if(optional  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(optional  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(optional  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	  if(optional    &&    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
19	[BUG]  [BUGGY]  if(!both  ||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  ||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  ||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!both    &&    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
20	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionsMap.get(arg);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionsMap.get(arg);	  Option    option    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
21	[BUG]  [BUGGY]  Option  option  =  options.get(arg);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  options.get(arg);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  options.get(arg);	  Option    option    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
22	[BUG]  [BUGGY]  Option  option  =  optionMap.get(prefix);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.get(prefix);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.get(prefix);	  Option    option    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
23	[BUG]  [BUGGY]  if(optional  &&  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(optional  &&  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(optional  &&  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
24	[BUG]  [BUGGY]  if(!both  &&  helpSettingsCopy.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  helpSettingsCopy.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  helpSettingsCopy.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
25	[BUG]  [BUGGY]  if(expanded  &&  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(expanded  &&  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(expanded  &&  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
26	[BUG]  [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
27	[BUG]  [BUGGY]  if(!helpSettings.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!helpSettings.contains(DisplaySetting.NONE))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!helpSettings.contains(DisplaySetting.NONE))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
28	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.NONE))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.NONE))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
29	[BUG]  [BUGGY]  if(!both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {	  if(!both    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
30	[BUG]  [BUGGY]  if(!both  &&  supportSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  supportSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  supportSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	  if(!both    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
31	[BUG]  [BUGGY]  if(!both  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!both    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
32	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  minimum  +  1);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Preconditions.checkState(childSettings.size()  >  minimum  +  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  >  minimum  +  1);	  Preconditions.checkState(childSettings.size()    >    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
33	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum  +  1);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum  +  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  <  maximum  +  1);	  Preconditions.checkState(childSettings.size()    >    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
34	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum  +  2);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum  +  2);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  >  maximum  +  2);	  Preconditions.checkState(childSettings.size()    >    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
35	[BUG]  [BUGGY]  if(both  ||  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(both  ||  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  ||  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    ||    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  buffer.append( "[null] ",  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  buffer.append( "[null] ",  separator);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( "[null] ",  separator);	  buffer.append(   "[null]   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  buffer.append( "[null] ").append(separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  buffer.append( "[null] ").append(separator);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( "[null] ").append(separator);	  buffer.append(   "[null]   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionsMap.get(separator,  buffer);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionsMap.get(separator,  buffer);	  Option    option    =    optionsMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
39	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionsMap.get(separator  -  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionsMap.get(separator  -  1);	  Option    option    =    optionsMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
40	[BUG]  [BUGGY]  if(!both  &&  options.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  options.contains(DisplaySetting.NONE))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  options.contains(DisplaySetting.NONE))  {	  if(both    &&    options.contains(DisplaySetting.NONE))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
41	[BUG]  [BUGGY]  if(optional  &&  options.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(optional  &&  options.contains(DisplaySetting.NONE))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(optional  &&  options.contains(DisplaySetting.NONE))  {	  if(both    &&    options.contains(DisplaySetting.NONE))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
42	[BUG]  [BUGGY]  if(optionals  &&  options.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(optionals  &&  options.contains(DisplaySetting.NONE))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(optionals  &&  options.contains(DisplaySetting.NONE))  {	  if(both    &&    options.contains(DisplaySetting.NONE))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
43	[BUG]  [BUGGY]  buffer.append( "null ",  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  buffer.append( "null ",  separator);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( "null ",  separator);	  buffer.append(   "null   ");    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
44	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  minimum  +  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  minimum  +  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  ==  minimum  +  1);	  Preconditions.checkState(childSettings.size()    ==    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
45	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  +  2);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  +  2);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum  +  2);	  Preconditions.checkState(childSettings.size()    ==    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
46	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  -  1);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum  -  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum  -  1);	  Preconditions.checkState(childSettings.size()    ==    maximum    +    1);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  final  Option  option  =  optionsMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionsMap.getOption(arg);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionsMap.getOption(arg);	  final    Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
48	[BUG]  [BUGGY]  final  Option  option  =  optionsMap.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionsMap.getOption(separator,  buffer);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionsMap.getOption(separator,  buffer);	  final    Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
49	[BUG]  [BUGGY]  final  Option  option  =  optionsMap.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionsMap.getOption(separator,  comp);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionsMap.getOption(separator,  comp);	  final    Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
50	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionsMap.getOption(separator,  buffer);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionsMap.getOption(separator,  buffer);	  final    Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
51	[BUG]  [BUGGY]  if(!both  &&  newOptionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  newOptionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  newOptionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!both    &&    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
52	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  <  minimum);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Preconditions.checkState(childSettings.size()  <  minimum);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  <  minimum);	  Preconditions.checkState(childSettings.size()    <    maximum);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
53	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum,  childSettings.length);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Preconditions.checkState(childSettings.size()  <  maximum,  childSettings.length);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  <  maximum,  childSettings.length);	  Preconditions.checkState(childSettings.size()    <    maximum);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
54	[BUG]  [BUGGY]  if(both  ||  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(both  ||  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  ||  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    ||    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
55	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(comp,  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.getOption(comp,  separator);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(comp,  separator);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
56	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionsMap.getOption(separator,  comp);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionsMap.getOption(separator,  comp);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
57	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp,  outer);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp,  outer);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(separator,  comp,  outer);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
58	[BUG]  [BUGGY]  final  Option  option  =  optionsMap.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionsMap.get(separator  -  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionsMap.get(separator  -  1);	  final    Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
59	[BUG]  [BUGGY]  final  Option  option  =  options.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  options.get(separator  -  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  options.get(separator  -  1);	  final    Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
60	[BUG]  [BUGGY]  if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append( ",   ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append( ",   ");  }  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(separator!=  null  ||  separator.length()  >  0)  {  buffer.append( ",   ");  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
61	[BUG]  [BUGGY]  if(!both  ||  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  ||  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  ||  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!both    &&    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
62	[BUG]  [BUGGY]  Option  option  =  optionMap.get(prefix  -  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.get(prefix  -  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.get(prefix  -  1);	  Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
63	[BUG]  [BUGGY]  Option  option  =  options.get(prefix);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  options.get(prefix);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  options.get(prefix);	  Option    option    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
64	[BUG]  [BUGGY]  Option  option  =  options.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  options.get(separator  +  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  options.get(separator  +  1);	  Option    option    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
65	[BUG]  [BUGGY]  Option  option  =  options.get(comp);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  options.get(comp);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  options.get(comp);	  Option    option    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
66	[BUG]  [BUGGY]  buffer.append( "  [] "  +  separator);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  buffer.append( "  [] "  +  separator);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( "  [] "  +  separator);	  buffer.append(   "    []   ");    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
67	[BUG]  [BUGGY]  if(!both  &&  parentSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  parentSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  parentSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	  if(both    &&    parentSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
68	[BUG]  [BUGGY]  if(parentSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(parentSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(parentSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	  if(both    &&    parentSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
69	[BUG]  [BUGGY]  if(!both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	  if(both    &&    parentSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
70	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.getOption(arg,  buffer);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(arg,  buffer);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
71	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer,  prefix);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  buffer,  prefix);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(separator,  buffer,  prefix);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
72	[BUG]  [BUGGY]  final  Option  option  =  optionsMap.get(separator  +  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionsMap.get(separator  +  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionsMap.get(separator  +  1);	  final    Option    option    =    optionsMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
73	[BUG]  [BUGGY]  final  Option  option  =  optionsMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionsMap.get(arg);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionsMap.get(arg);	  final    Option    option    =    optionsMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
74	[BUG]  [BUGGY]  final  Option  option  =  optionsMap.get(separator,  buffer);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionsMap.get(separator,  buffer);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionsMap.get(separator,  buffer);	  final    Option    option    =    optionsMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
75	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  minimum,  childSettings.size());  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  minimum,  childSettings.size());  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  ==  minimum,  childSettings.size());	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.size());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
76	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  +  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  +  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  +  1);	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.size());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
77	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum,  childSettings.size());  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum,  childSettings.size());  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  >  maximum,  childSettings.size());	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.size());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
78	[BUG]  [BUGGY]  if(!expanded  &&  optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!expanded  &&  optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!expanded  &&  optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(expanded    &&    optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
79	[BUG]  [BUGGY]  if(optional  &&  optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(optional  &&  optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(optional  &&  optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(expanded    &&    optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
80	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefix);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.getOption(prefix);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(prefix);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
81	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.prefix);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.getOption(this.prefix);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(this.prefix);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
82	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(name);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.getOption(name);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(name);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
83	[BUG]  [BUGGY]  final  Option  option  =  optionMap.get(prefix  +  1);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.get(prefix  +  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.get(prefix  +  1);	  final    Option    option    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
84	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionsMap.getOption(arg);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionsMap.getOption(arg);	  Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
85	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  minimum,  childSettings.length);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  minimum,  childSettings.length);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  ==  minimum,  childSettings.length);	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.length);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
86	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.length  -  1);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.length  -  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.length  -  1);	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.length);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
87	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum,  childSettings.length);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Preconditions.checkState(childSettings.size()  >  maximum,  childSettings.length);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  >  maximum,  childSettings.length);	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.length);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
88	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(this.prefixes);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.getOption(this.prefixes);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(this.prefixes);	  final    Option    option    =    optionMap.getOption(this.prefix);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
89	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(this.prefix,  both);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.getOption(this.prefix,  both);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(this.prefix,  both);	  final    Option    option    =    optionMap.getOption(this.prefix);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
90	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  buffer);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(this,  buffer);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
91	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  comp);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  comp);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(this,  comp);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
92	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  description);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  description);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(this,  description);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
93	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  name);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  name);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(this,  name);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
94	[BUG]  [BUGGY]  Option  option  =  options().get(separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  options().get(separator);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  options().get(separator);	  Option    option    =    newOptionMap().get(separator);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
95	[BUG]  [BUGGY]  buffer.append(']',  name);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  buffer.append(']',  name);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append(']',  name);	  buffer.append(']',    separator);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
96	[BUG]  [BUGGY]  buffer.append(']',  arg);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  buffer.append(']',  arg);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append(']',  arg);	  buffer.append(']',    separator);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
97	[BUG]  [BUGGY]  buffer.append(']',  description);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  buffer.append(']',  description);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append(']',  description);	  buffer.append(']',    separator);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
98	[BUG]  [BUGGY]  final  Option  option  =  options.get(arg);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  options.get(arg);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  options.get(arg);	  final    Option    option    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
99	[BUG]  [BUGGY]  buffer.append( ";n ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  buffer.append( ";n ");  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( ";n ");	  buffer.append(   ";   ");    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
100	[BUG]  [BUGGY]  final  Option  option  =  options.get(comp);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  options.get(comp);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  options.get(comp);	  final    Option    option    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
101	[BUG]  [BUGGY]  final  Option  option  =  options.get(prefix);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  options.get(prefix);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  options.get(prefix);	  final    Option    option    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
102	[BUG]  [BUGGY]  if(separator  ==  null)  {  buffer.append( ",  null ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(separator  ==  null)  {  buffer.append( ",  null ");  }  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(separator  ==  null)  {  buffer.append( ",  null ");  }	  if(separator!=    null)    {    buffer.append(   ",    null   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
103	[BUG]  [BUGGY]  while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ",  null ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ",  null ");  }  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ",  null ");  }	  if(separator!=    null)    {    buffer.append(   ",    null   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
104	[BUG]  [BUGGY]  while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ",  null ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ",  null ");  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ",  null ");	  if(separator!=    null)    {    buffer.append(   ",    null   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
105	[BUG]  [BUGGY]  if(!expanded  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!expanded  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!expanded  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(expanded    &&    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
106	[BUG]  [BUGGY]  if(optionals  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(optionals  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(optionals  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(expanded    &&    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
107	[BUG]  [BUGGY]  while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ",');  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ",');  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ",');	  while(separator!=    null    &&    separator.length()    >    0)    {    buffer.append(   ",       ");    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
108	[BUG]  [BUGGY]  if(both  ||  newOptionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(both  ||  newOptionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  ||  newOptionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    newOptionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
109	[BUG]  [BUGGY]  if(expanded  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(expanded  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(expanded  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {	  if(both    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
110	[BUG]  [BUGGY]  if(!both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {	  if(both    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
111	[BUG]  [BUGGY]  if(separator  ||  both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(separator  ||  both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(separator  ||  both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	  if(both    &&    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
112	[BUG]  [BUGGY]  if(expanded  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(expanded  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(expanded  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	  if(both    &&    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
113	[BUG]  [BUGGY]  if(both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {	  if(both    &&    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
114	[BUG]  [BUGGY]  if(both  &&  childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(both  &&  childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    helpSettingsCopy.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
115	[BUG]  [BUGGY]  if(!both  &&  helpSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  helpSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  helpSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    helpSettingsCopy.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
116	[BUG]  [BUGGY]  if(!both  &&  childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  childSettings.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    helpSettingsCopy.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
117	[BUG]  [BUGGY]  if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {	  if(!both    &&    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
118	[BUG]  [BUGGY]  if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  external)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  external)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  external)  {	  if(!both    &&    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
119	[BUG]  [BUGGY]  if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  children)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  children)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  children)  {	  if(!both    &&    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
120	[BUG]  [BUGGY]  if(!expanded  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!expanded  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!expanded  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(expanded    &&    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
121	[BUG]  [BUGGY]  if(optional  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(optional  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(optional  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(expanded    &&    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
122	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()!=  maximum);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Preconditions.checkState(childSettings.size()!=  maximum);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()!=  maximum);	  Preconditions.checkState(childSettings.size()    ==    minimum);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
123	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(arg,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.getOption(arg,  buffer);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(arg,  buffer);	  final    Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
124	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(arg,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.getOption(arg,  separator);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(arg,  separator);	  final    Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
125	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  >=  minimum);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Preconditions.checkState(childSettings.size()  >=  minimum);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  >=  minimum);	  Preconditions.checkState(childSettings.size()    >    minimum);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
126	[BUG]  [BUGGY]  buffer.append( "n ");  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  buffer.append( "n ");  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( "n ");	  buffer.append(   "       ");    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
127	[BUG]  [BUGGY]  buffer.append( "  - ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  buffer.append( "  - ");  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( "  - ");	  buffer.append(   "       ");    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
128	[BUG]  [BUGGY]  if(helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
129	[BUG]  [BUGGY]  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  both)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  both)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)&&  both)  {	  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
130	[BUG]  [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
131	[BUG]  [BUGGY]  if(separator  ||  both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(separator  ||  both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(separator  ||  both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	  if(both    &&    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
132	[BUG]  [BUGGY]  if(helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	  if(both    &&    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
133	[BUG]  [BUGGY]  buffer.append( ",n ");  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  buffer.append( ",n ");  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( ",n ");	  buffer.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
134	[BUG]  [BUGGY]  if(!both  ||  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  ||  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  ||  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!both    &&    options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
135	[BUG]  [BUGGY]  if(!optional  &&  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!optional  &&  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!optional  &&  options.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!optional    &&    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
136	[BUG]  [BUGGY]  if(!separator  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!separator  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!separator  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!optional    &&    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
137	[BUG]  [BUGGY]  if(!other  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!other  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!other  &&  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!optional    &&    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
138	[BUG]  [BUGGY]  while(separator!=  null  &&  separator.length()  ==  0)  {  buffer.append( ",   ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  while(separator!=  null  &&  separator.length()  ==  0)  {  buffer.append( ",   ");  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	while(separator!=  null  &&  separator.length()  ==  0)  {  buffer.append( ",   ");	  while(separator!=    null    &&    separator.length()    >    0)    {    buffer.append(   ",       ");    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
139	[BUG]  [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(expanded    &&    optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
140	[BUG]  [BUGGY]  if(expanded  &&  optionsMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(expanded  &&  optionsMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(expanded  &&  optionsMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(expanded    &&    optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
141	[BUG]  [BUGGY]  final  Option  option  =  optionsMap.get(optional);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionsMap.get(optional);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionsMap.get(optional);	  final    Option    option    =    optionsMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
142	[BUG]  [BUGGY]  buffer.append(';');  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  buffer.append(';');  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append(';');	  buffer.append(   ";   ");    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
143	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  arg);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  arg);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(separator,  arg);	  final    Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
144	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  name);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  name);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(separator,  name);	  final    Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
145	[BUG]  [BUGGY]  if(both  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(both  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  ||  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {	  if(both    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
146	[BUG]  [BUGGY]  if(both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  separator)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  separator)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  separator)  {	  if(both    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
147	[BUG]  [BUGGY]  if(optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(expanded    &&    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
148	[BUG]  [BUGGY]  if(expanded  &&  optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(expanded  &&  optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(expanded  &&  optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(expanded    &&    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
149	[BUG]  [BUGGY]  if(optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	  if(expanded    &&    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
150	[BUG]  [BUGGY]  if(both  ||  helpSettingsCopy.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(both  ||  helpSettingsCopy.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  ||  helpSettingsCopy.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    ||    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
151	[BUG]  [BUGGY]  if(both  ||  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(both  ||  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  ||  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	  if(both    &&    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
152	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.length  +  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.length  +  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.length  +  1);	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.length);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
153	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  -  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  -  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()  ==  maximum,  childSettings.size()  -  1);	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.size());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
154	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()!=  minimum);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Preconditions.checkState(childSettings.size()!=  minimum);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()!=  minimum);	  Preconditions.checkState(childSettings.size()    >    minimum);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
155	[BUG]  [BUGGY]  final  Option  option  =  optionMap.get(prefix  -  1);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.get(prefix  -  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.get(prefix  -  1);	  final    Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
156	[BUG]  [BUGGY]  final  Option  option  =  optionMap.get(previous  -  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.get(previous  -  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.get(previous  -  1);	  final    Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
157	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  arg);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.getOption(this,  arg);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(this,  arg);	  Option    option    =    optionMap.getOption(this,    separator);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
158	[BUG]  [BUGGY]  if(optional  &&  buffer.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(optional  &&  buffer.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(optional  &&  buffer.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(optional    &&    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
159	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(optional);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.getOption(optional);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(optional);	  final    Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
160	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(this.optional);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.getOption(this.optional);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(this.optional);	  final    Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
161	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(optional);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.getOption(optional);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(optional);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
162	[BUG]  [BUGGY]  buffer.append( "[null] "  +  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  buffer.append( "[null] "  +  separator);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( "[null] "  +  separator);	  buffer.append(   "[null]   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
163	[BUG]  [BUGGY]  if(both  ||  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(both  ||  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  ||  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
164	[BUG]  [BUGGY]  if(both  &&  childSettings.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(both  &&  childSettings.contains(DisplaySetting.NONE))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  childSettings.contains(DisplaySetting.NONE))  {	  if(both    &&    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
165	[BUG]  [BUGGY]  if(both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {	  if(both    &&    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
166	[BUG]  [BUGGY]  if(both  ||  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(both  ||  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  ||  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  both)  {	  if(both    &&    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
167	[BUG]  [BUGGY]  if(optional  &&  buffer.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(optional  &&  buffer.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(optional  &&  buffer.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!optional    &&    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
168	[BUG]  [BUGGY]  if(!optional  &&  newOptionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!optional  &&  newOptionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!optional  &&  newOptionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!optional    &&    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
169	[BUG]  [BUGGY]  if(optionals.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(optionals.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(optionals.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(expanded    &&    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
170	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(this.prefix,  this.maximum);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.getOption(this.prefix,  this.maximum);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(this.prefix,  this.maximum);	  final    Option    option    =    optionMap.getOption(this.prefix);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
171	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(this.prefix  +  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.getOption(this.prefix  +  separator);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(this.prefix  +  separator);	  final    Option    option    =    optionMap.getOption(this.prefix);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
172	[BUG]  [BUGGY]  if(!children.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!children.contains(DisplaySetting.NONE))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!children.contains(DisplaySetting.NONE))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
173	[BUG]  [BUGGY]  Option  option  =  optionMap.get(previous  +  1);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.get(previous  +  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.get(previous  +  1);	  Option    option    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
174	[BUG]  [BUGGY]  if(!both  &&  helpSettingsCopy.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  helpSettingsCopy.contains(DisplaySetting.NONE))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  helpSettingsCopy.contains(DisplaySetting.NONE))  {	  if(!both    &&    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
175	[BUG]  [BUGGY]  if(!both  &&  childSettings.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  childSettings.contains(DisplaySetting.NONE))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  childSettings.contains(DisplaySetting.NONE))  {	  if(!both    &&    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
176	[BUG]  [BUGGY]  if(!both  &&  optionsMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  optionsMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  optionsMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!both    &&    optionMap.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
177	[BUG]  [BUGGY]  Option  option  =  optionMap().get(separator);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap().get(separator);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap().get(separator);	  Option    option    =    newOptionMap().get(separator);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
178	[BUG]  [BUGGY]  Option  option  =  optionsMap().get(separator);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionsMap().get(separator);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionsMap().get(separator);	  Option    option    =    newOptionMap().get(separator);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
179	[BUG]  [BUGGY]  buffer.append( "  if(both)  {  buffer.append( "  ( "));  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  buffer.append( "  if(both)  {  buffer.append( "  ( "));  }  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( "  if(both)  {  buffer.append( "  ( "));  }	  buffer.append(   "    (   ");    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
180	[BUG]  [BUGGY]  if(both  &&  parentSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(both  &&  parentSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  parentSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  outer)  {	  if(both    &&    parentSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
181	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(prefix,  buffer);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.getOption(prefix,  buffer);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(prefix,  buffer);	  Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
182	[BUG]  [BUGGY]  if(!both  &&  buffer.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  buffer.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  buffer.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!both    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
183	[BUG]  [BUGGY]  Option  option  =  optionMap.get(previous  -  1);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.get(previous  -  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.get(previous  -  1);	  Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
184	[BUG]  [BUGGY]  final  Option  option  =  optionsMap.getOption(this.prefix);  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionsMap.getOption(this.prefix);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionsMap.getOption(this.prefix);	  final    Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
185	[BUG]  [BUGGY]  while(separator!=  null  &&  separator.length()  ==  0)  {  buffer.append( ",   ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  while(separator!=  null  &&  separator.length()  ==  0)  {  buffer.append( ",   ");  }  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	while(separator!=  null  &&  separator.length()  ==  0)  {  buffer.append( ",   ");  }	  while(separator!=    null    &&    separator.length()    >    0)    {    buffer.append(   ",       ");    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
186	[BUG]  [BUGGY]  final  Option  option  =  optionMap.get(optional);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.get(optional);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.get(optional);	  final    Option    option    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
187	[BUG]  [BUGGY]  buffer.append( ",  null ");  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  buffer.append( ",  null ");  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( ",  null ");	  if(separator!=    null)    {    buffer.append(   ",    null   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
188	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append( ",  null ",  separator);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(separator!=  null)  {  buffer.append( ",  null ",  separator);  }  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(separator!=  null)  {  buffer.append( ",  null ",  separator);  }	  if(separator!=    null)    {    buffer.append(   ",    null   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
189	[BUG]  [BUGGY]  if(childSettings.contains(DisplaySetting.NONE)||  both)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(childSettings.contains(DisplaySetting.NONE)||  both)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(childSettings.contains(DisplaySetting.NONE)||  both)  {	  if(childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
190	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  separator);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.getOption(arg,  separator);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(arg,  separator);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
191	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  arg);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  arg);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(separator,  arg);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
192	[BUG]  [BUGGY]  if(both  &&  outer.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  separator)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(both  &&  outer.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  separator)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  outer.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  separator)  {	  if(both    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    outer)    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
193	[BUG]  [BUGGY]  Option  option  =  optionMap.get(partial);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.get(partial);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.get(partial);	  Option    option    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
194	[BUG]  [BUGGY]  while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "  ( ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "  ( ");  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "  ( ");	  while(separator!=    null    &&    separator.length()    >    0)    {    buffer.append(   ",       ");    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
195	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp,  arg);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp,  arg);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(separator,  comp,  arg);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
196	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp,  false);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.getOption(separator,  comp,  false);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.getOption(separator,  comp,  false);	  Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
197	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(comp,  separator);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionsMap.getOption(comp,  separator);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionsMap.getOption(comp,  separator);	  Option    option    =    optionsMap.getOption(separator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
198	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(this,  separator);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.getOption(this,  separator);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(this,  separator);	  final    Option    option    =    optionMap.getOption(separator,    buffer);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
199	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  comp,  arg);  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.getOption(separator,  comp,  arg);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.getOption(separator,  comp,  arg);	  final    Option    option    =    optionMap.getOption(separator,    comp);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
200	[BUG]  [BUGGY]  buffer.append(',');  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  buffer.append(',');  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append(',');	  buffer.append(   ",   ");    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
201	[BUG]  [BUGGY]  Option  option  =  optionMap.get(separator  -  2);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionMap.get(separator  -  2);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionMap.get(separator  -  2);	  Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
202	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  optionsMap.get(separator,  comp);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  optionsMap.get(separator,  comp);	  Option    option    =    optionsMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
203	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ",  null ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ",  null ");  }  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( ",  null ");  }	  if(separator!=    null)    {    buffer.append(   ",    null   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
204	[BUG]  [BUGGY]  if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append( ",  null ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append( ",  null ");  }  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(separator!=  null  ||  separator.length()  ==  0)  {  buffer.append( ",  null ");  }	  if(separator!=    null)    {    buffer.append(   ",    null   ");    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
205	[BUG]  [BUGGY]  if(!other  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!other  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!other  &&  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!both    &&    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
206	[BUG]  [BUGGY]  final  Option  option  =  optionsMap.get(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionsMap.get(separator,  comp);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionsMap.get(separator,  comp);	  final    Option    option    =    optionsMap.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
207	[BUG]  [BUGGY]  Preconditions.checkState(childSettings.size()!=  maximum,  childSettings.size());  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Preconditions.checkState(childSettings.size()!=  maximum,  childSettings.size());  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Preconditions.checkState(childSettings.size()!=  maximum,  childSettings.size());	  Preconditions.checkState(childSettings.size()    ==    maximum,    childSettings.size());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
208	[BUG]  [BUGGY]  if(!both  &&  supportSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  supportSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  supportSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!both    &&    childSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
209	[BUG]  [BUGGY]  final  Option  option  =  options.get(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  options.get(separator,  comp);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  options.get(separator,  comp);	  final    Option    option    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
210	[BUG]  [BUGGY]  if(separator!=  null)  {  buffer.append( ",[null] ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(separator!=  null)  {  buffer.append( ",[null] ");  }  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(separator!=  null)  {  buffer.append( ",[null] ");  }	  if(separator    ==    null)    {    buffer.append(   "[null]   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
211	[BUG]  [BUGGY]  if(!children.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!children.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!children.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
212	[BUG]  [BUGGY]  if(!childSettings.contains(DisplaySetting.NONE))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!childSettings.contains(DisplaySetting.NONE))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!childSettings.contains(DisplaySetting.NONE))  {	  if(!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
213	[BUG]  [BUGGY]  if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  expanded)  {  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  expanded)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  expanded)  {	  if(!both    &&    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
214	[BUG]  [BUGGY]  if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  extended)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  extended)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  extended)  {	  if(!both    &&    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
215	[BUG]  [BUGGY]  Option  option  =  options.get(separator,  comp);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  options.get(separator,  comp);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  options.get(separator,  comp);	  Option    option    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
216	[BUG]  [BUGGY]  Option  option  =  options.get(separator  -  1);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  Option  option  =  options.get(separator  -  1);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	Option  option  =  options.get(separator  -  1);	  Option    option    =    options.get(separator);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
217	[BUG]  [BUGGY]  if(!optional  &&  optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(!optional  &&  optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(!optional  &&  optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    optionsMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
218	[BUG]  [BUGGY]  if(both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  external)  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  external)  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  &&  helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||  external)  {	  if(both    &&    helpSettings.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)||    both)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
219	[BUG]  [BUGGY]  final  Option  option  =  optionMap.get(separator  +  2);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.get(separator  +  2);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.get(separator  +  2);	  final    Option    option    =    optionMap.get(separator    +    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
220	[BUG]  [BUGGY]  final  Option  option  =  optionMap.get(separator  -  2);  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  final  Option  option  =  optionMap.get(separator  -  2);  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	final  Option  option  =  optionMap.get(separator  -  2);	  final    Option    option    =    optionMap.get(separator    -    1);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
221	[BUG]  [BUGGY]  while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "  ( ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "  ( ");  }  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	while(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "  ( ");  }	  while(separator!=    null    &&    separator.length()    >    0)    {    buffer.append(   ",       ");    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
222	[BUG]  [BUGGY]  if(expanded  ||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(expanded  ||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(expanded  ||  options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(expanded    &&    options.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
223	[BUG]  [BUGGY]  if(both  ||  supportSettingsCopy.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(both  ||  supportSettingsCopy.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(both  ||  supportSettingsCopy.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    ||    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
224	[BUG]  [BUGGY]  buffer.append( "  if(both)  {  buffer.append( ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  buffer.append( "  if(both)  {  buffer.append( ");  }  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	buffer.append( "  if(both)  {  buffer.append( ");  }	  buffer.append(   "    (   ");    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
225	[BUG]  [BUGGY]  if(expanded  ||  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(expanded  ||  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(expanded  ||  optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(expanded    &&    optionMap.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
226	[BUG]  [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "  (null) ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "  (null) ");  }  [BUGGY]      if  (both)  {  buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(separator!=  null  &&  separator.length()  >  0)  {  buffer.append( "  (null) ");  }	  if(separator!=    null    &&    separator.length()    >    0)    {    buffer.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
227	[BUG]  [BUGGY]  if(expanded  &&  helpSettingsCopy.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(expanded  &&  helpSettingsCopy.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(expanded  &&  helpSettingsCopy.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    helpSettingsCopy.containsKey(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
228	[BUG]  [BUGGY]  if(expanded  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  expected  same:<[--help  (-?      [CONTEXT]      final  boolean  both  =  named  &&  expanded;  if  (optional)  {  buffer.append('[');  }  if  (named)  {  buffer.append(name);  }      [BUGGY]  if(expanded  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  [BUGGY]      buffer.append(     "  (     ");  }  if  (expanded)  {  final  Set  childSettings;  if  (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {  childSettings  =  DisplaySetting.NONE;  }  else  {  childSettings  =  new  HashSet(helpSettingsCopy);  [CLASS]  GroupImpl  [METHOD]  appendUsage  [RETURN_TYPE]  void  StringBuffer  buffer  Set  helpSettings  Comparator  comp  String  separator  [VARIABLES]  StringBuffer  buffer  Set  childSettings  helpSettings  helpSettingsCopy  newPrefixes  prefixes  triggers  boolean  arguments  both  expanded  named  optional  outer  SortedMap  newOptionMap  optionMap  Iterator  i  List  anonymous  list  newAnonymous  options  Option  option  String  arg  description  name  previous  separator  int  maximum  minimum  present  Comparator  comp  	projects/Cli16/src/java/org/apache/commons/cli2/option/GroupImpl.java	0.9258200997725514	330	330	7	replace	if(expanded  &&  helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))  {	  if(both    &&    helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
